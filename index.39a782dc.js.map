{"mappings":"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","sources":["src/js/main_page/header.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["class Header {\r\n  constructor() {\r\n    this.refs = {\r\n      openMenuBtn: document.querySelector('.js-menu-open'),\r\n      closeMenuBtn: document.querySelector('.js-menu-close'),\r\n      menu: document.querySelector('.js-modal-menu'),\r\n      body: document.querySelector('body'),\r\n      header: document.querySelector('.js-header'),\r\n      menuItems: document.querySelectorAll('.js-nav-item'),\r\n      modalMenuItems: document.querySelectorAll('.js-modal-item'),\r\n      defaultModalLink: document.querySelector('[data-path =\"index\"]'),\r\n    };\r\n\r\n    this.addListeners();\r\n    this.changeHeaderTheme();\r\n    this.defineModalCurrentPageLink();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.openMenuBtn.addEventListener('click', this.toggleMenu.bind(this));\r\n    this.refs.closeMenuBtn.addEventListener(\r\n      'click',\r\n      this.toggleMenu.bind(this)\r\n    );\r\n    this.refs.menu.addEventListener('click', this.removeMenu.bind(this));\r\n  }\r\n\r\n  changeHeaderTheme() {\r\n    const dataPathArr = [];\r\n\r\n    this.refs.menuItems.forEach(item => {\r\n      let itemName = item.dataset.path;\r\n\r\n      dataPathArr.push(itemName);\r\n\r\n      window.location.href.includes(itemName)\r\n        ? item.classList.add('current-page')\r\n        : item.classList.remove('current-page');\r\n    });\r\n\r\n    const isSecondaryPage = dataPathArr.some(item =>\r\n      window.location.href.includes(item)\r\n    );\r\n\r\n    isSecondaryPage\r\n      ? this.refs.header.classList.remove('header-main')\r\n      : this.refs.header.classList.add('header-main');\r\n  }\r\n\r\n  defineModalCurrentPageLink() {\r\n    const dataPathArr = [];\r\n\r\n    this.refs.modalMenuItems.forEach(item => {\r\n      let itemName = item.dataset.path;\r\n\r\n      dataPathArr.push(itemName);\r\n\r\n      window.location.href.includes(itemName)\r\n        ? item.classList.add('current-page-main')\r\n        : item.classList.remove('current-page-main');\r\n    });\r\n\r\n    const isIncludeAnyLink = dataPathArr.some(item =>\r\n      window.location.href.includes(item)\r\n    );\r\n\r\n    if (!isIncludeAnyLink) {\r\n      this.refs.defaultModalLink.classList.add('current-page-main');\r\n    }\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.refs.menu.classList.toggle('is-hidden');\r\n    this.refs.body.classList.toggle('no-scroll');\r\n\r\n    if (!this.refs.openMenuBtn.classList.contains('is-hidden')) {\r\n      document.addEventListener('keydown', this.closeOnBtn.bind(this));\r\n    }\r\n  }\r\n\r\n  removeMenu() {\r\n    this.refs.menu.classList.add('is-hidden');\r\n    this.refs.body.classList.remove('no-scroll');\r\n  }\r\n\r\n  closeOnBtn(event) {\r\n    if (event.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    this.removeMenu();\r\n    document.removeEventListener('keydown', this.closeOnBtn);\r\n  }\r\n}\r\n\r\nnew Header();\r\n\r\n// дописати код якщо натискаємо всередині меню\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"names":["$8MBJY","parcelRequire","Header","this","refs","openMenuBtn","document","querySelector","closeMenuBtn","menu","body","header","menuItems","querySelectorAll","modalMenuItems","defaultModalLink","addListeners","changeHeaderTheme","defineModalCurrentPageLink","key","addEventListener","toggleMenu","bind","removeMenu","dataPathArr","forEach","item","itemName","dataset","path","push","window","location","href","includes","classList","add","remove","some","toggle","contains","closeOnBtn","event","code","removeEventListener","Object","defineProperty","module","exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","update","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","Array","_key","_modules","el","params","constructor","toString","call","slice","ref","$1EjTE","extend","$58sFY","getDocument","swipers","containerEl","newParams","swiper","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$parcel$interopDefault","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","once","off","emit","swiperParams","$959nv","originalParams","passedParams","keys","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","direction","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","slideEl","slidesEl","elementChildren","concat","slideClass","firstSlideIndex","elementIndex","index","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","join","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","slidesPerView","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","e","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","hash","host","hostname","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","slideNext","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","url","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$81b40901656d9843$export$2e2bcd8739ae039","bulletSize","pfx","pagination","bulletElement","clickable","hideOnClick","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","hiddenClass","progressbarFillClass","progressbarOppositeClass","clickableClass","lockClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","makeElementsArray","isPaginationDisabled","setSideBullets","bulletEl","position","onBulletClick","$9SBI0","newSlideIndex","currentSlideIndex","total","firstIndex","midIndex","subEl","classesToRemove","suffix","s","flat","bullet","_classList4","bulletIndex","_classList2","bullet1","_classList1","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","innerHTML","render","paginationHTML","numberOfBullets","_bullets","$kYZkc","destroy","_s","isHidden","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer"],"version":3,"file":"index.39a782dc.js.map"}