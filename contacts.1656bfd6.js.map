{"mappings":"AA+FA,IA/FA,MAkBEA,eACEC,KAAKC,KAAKC,YAAYC,iBAAiB,QAASH,KAAKI,WAAWC,KAAKL,OACrEA,KAAKC,KAAKK,aAAaH,iBACrB,QACAH,KAAKI,WAAWC,KAAKL,OAEvBA,KAAKC,KAAKM,KAAKJ,iBAAiB,QAASH,KAAKQ,WAAWH,KAAKL,M,CAGhES,oBACE,MAAMC,EAAc,GAEpBV,KAAKC,KAAKU,UAAUC,SAAQC,IAC1B,IAAIC,EAAWD,EAAKE,QAAQC,KAE5BN,EAAYO,KAAKH,GAEjBI,OAAOC,SAASC,KAAKC,SAASP,GAC1BD,EAAKS,UAAUC,IAAI,gBACnBV,EAAKS,UAAUE,OAAO,eAAe,IAGnBd,EAAYe,MAAKZ,GACvCK,OAAOC,SAASC,KAAKC,SAASR,KAI5Bb,KAAKC,KAAKyB,OAAOJ,UAAUE,OAAO,eAClCxB,KAAKC,KAAKyB,OAAOJ,UAAUC,IAAI,c,CAGrCI,6BACE,MAAMjB,EAAc,GAEpBV,KAAKC,KAAK2B,eAAehB,SAAQC,IAC/B,IAAIC,EAAWD,EAAKE,QAAQC,KAE5BN,EAAYO,KAAKH,GAEjBI,OAAOC,SAASC,KAAKC,SAASP,GAC1BD,EAAKS,UAAUC,IAAI,qBACnBV,EAAKS,UAAUE,OAAO,oBAAoB,IAGvBd,EAAYe,MAAKZ,GACxCK,OAAOC,SAASC,KAAKC,SAASR,MAI9Bb,KAAKC,KAAK4B,iBAAiBP,UAAUC,IAAI,oB,CAI7CnB,aACEJ,KAAKC,KAAKM,KAAKe,UAAUQ,OAAO,aAChC9B,KAAKC,KAAK8B,KAAKT,UAAUQ,OAAO,aAE3B9B,KAAKC,KAAKC,YAAYoB,UAAUU,SAAS,cAC5CC,SAAS9B,iBAAiB,UAAWH,KAAKkC,WAAW7B,KAAKL,M,CAI9DQ,aACER,KAAKC,KAAKM,KAAKe,UAAUC,IAAI,aAC7BvB,KAAKC,KAAK8B,KAAKT,UAAUE,OAAO,Y,CAGlCU,WAAWC,GACU,WAAfA,EAAMC,OAIVpC,KAAKQ,aACLyB,SAASI,oBAAoB,UAAWrC,KAAKkC,Y,CA1F/CI,cACEtC,KAAKC,KAAO,CACVC,YAAa+B,SAASM,cAAc,iBACpCjC,aAAc2B,SAASM,cAAc,kBACrChC,KAAM0B,SAASM,cAAc,kBAC7BR,KAAME,SAASM,cAAc,QAC7Bb,OAAQO,SAASM,cAAc,cAC/B5B,UAAWsB,SAASO,iBAAiB,gBACrCZ,eAAgBK,SAASO,iBAAiB,kBAC1CX,iBAAkBI,SAASM,cAAc,yBAG3CvC,KAAKD,eACLC,KAAKS,oBACLT,KAAK2B,4B,GCgBT,IA/BA,MAYE5B,eACEC,KAAKC,KAAKwC,YAAYtC,iBAAiB,SAAUH,KAAK0C,SAASrC,KAAKL,M,CAGtE0C,SAASP,GACPA,EAAMQ,iBAEN,MAAMC,EAAO,IAAIC,SAAS7C,KAAKC,KAAKwC,aAEpC,IAAK,IAAKK,EAAMC,KAAUH,EACxB5C,KAAKgD,iBAAiBF,GAAQC,EAGhCE,QAAQC,IAAIlD,KAAKgD,kBAEjBb,EAAMgB,OAAOC,O,CA1Bfd,cACEtC,KAAKC,KAAO,CACVwC,YAAaR,SAASM,cAAc,0BACpCc,cAAepB,SAASO,iBAAiB,2BAG3CxC,KAAKgD,iBAAmB,GAExBhD,KAAKD,c","sources":["src/js/main_page/header.js","src/js/contacts_page/contacts-details.js"],"sourcesContent":["class Header {\r\n  constructor() {\r\n    this.refs = {\r\n      openMenuBtn: document.querySelector('.js-menu-open'),\r\n      closeMenuBtn: document.querySelector('.js-menu-close'),\r\n      menu: document.querySelector('.js-modal-menu'),\r\n      body: document.querySelector('body'),\r\n      header: document.querySelector('.js-header'),\r\n      menuItems: document.querySelectorAll('.js-nav-item'),\r\n      modalMenuItems: document.querySelectorAll('.js-modal-item'),\r\n      defaultModalLink: document.querySelector('[data-path =\"index\"]'),\r\n    };\r\n\r\n    this.addListeners();\r\n    this.changeHeaderTheme();\r\n    this.defineModalCurrentPageLink();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.openMenuBtn.addEventListener('click', this.toggleMenu.bind(this));\r\n    this.refs.closeMenuBtn.addEventListener(\r\n      'click',\r\n      this.toggleMenu.bind(this)\r\n    );\r\n    this.refs.menu.addEventListener('click', this.removeMenu.bind(this));\r\n  }\r\n\r\n  changeHeaderTheme() {\r\n    const dataPathArr = [];\r\n\r\n    this.refs.menuItems.forEach(item => {\r\n      let itemName = item.dataset.path;\r\n\r\n      dataPathArr.push(itemName);\r\n\r\n      window.location.href.includes(itemName)\r\n        ? item.classList.add('current-page')\r\n        : item.classList.remove('current-page');\r\n    });\r\n\r\n    const isSecondaryPage = dataPathArr.some(item =>\r\n      window.location.href.includes(item)\r\n    );\r\n\r\n    isSecondaryPage\r\n      ? this.refs.header.classList.remove('header-main')\r\n      : this.refs.header.classList.add('header-main');\r\n  }\r\n\r\n  defineModalCurrentPageLink() {\r\n    const dataPathArr = [];\r\n\r\n    this.refs.modalMenuItems.forEach(item => {\r\n      let itemName = item.dataset.path;\r\n\r\n      dataPathArr.push(itemName);\r\n\r\n      window.location.href.includes(itemName)\r\n        ? item.classList.add('current-page-main')\r\n        : item.classList.remove('current-page-main');\r\n    });\r\n\r\n    const isIncludeAnyLink = dataPathArr.some(item =>\r\n      window.location.href.includes(item)\r\n    );\r\n\r\n    if (!isIncludeAnyLink) {\r\n      this.refs.defaultModalLink.classList.add('current-page-main');\r\n    }\r\n  }\r\n\r\n  toggleMenu() {\r\n    this.refs.menu.classList.toggle('is-hidden');\r\n    this.refs.body.classList.toggle('no-scroll');\r\n\r\n    if (!this.refs.openMenuBtn.classList.contains('is-hidden')) {\r\n      document.addEventListener('keydown', this.closeOnBtn.bind(this));\r\n    }\r\n  }\r\n\r\n  removeMenu() {\r\n    this.refs.menu.classList.add('is-hidden');\r\n    this.refs.body.classList.remove('no-scroll');\r\n  }\r\n\r\n  closeOnBtn(event) {\r\n    if (event.code !== 'Escape') {\r\n      return;\r\n    }\r\n\r\n    this.removeMenu();\r\n    document.removeEventListener('keydown', this.closeOnBtn);\r\n  }\r\n}\r\n\r\nnew Header();\r\n\r\n// дописати код якщо натискаємо всередині меню\r\n","class ContactForm {\r\n  constructor() {\r\n    this.refs = {\r\n      contactForm: document.querySelector('.contacts-details-form'),\r\n      inputElements: document.querySelectorAll('.js-contact-form-input'),\r\n    };\r\n\r\n    this.outputFormObject = {};\r\n\r\n    this.addListeners();\r\n  }\r\n\r\n  addListeners() {\r\n    this.refs.contactForm.addEventListener('submit', this.onSubmit.bind(this));\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const form = new FormData(this.refs.contactForm);\r\n\r\n    for (let [name, value] of form) {\r\n      this.outputFormObject[name] = value;\r\n    }\r\n\r\n    console.log(this.outputFormObject);\r\n\r\n    event.target.reset();\r\n  }\r\n}\r\n\r\nnew ContactForm();\r\n"],"names":["addListeners","this","refs","openMenuBtn","addEventListener","toggleMenu","bind","closeMenuBtn","menu","removeMenu","changeHeaderTheme","dataPathArr","menuItems","forEach","item","itemName","dataset","path","push","window","location","href","includes","classList","add","remove","some","header","defineModalCurrentPageLink","modalMenuItems","defaultModalLink","toggle","body","contains","document","closeOnBtn","event","code","removeEventListener","constructor","querySelector","querySelectorAll","contactForm","onSubmit","preventDefault","form","FormData","name","value","outputFormObject","console","log","target","reset","inputElements"],"version":3,"file":"contacts.1656bfd6.js.map"}