{"mappings":"+xBAYAA,EAAA,S,gVCXA,IAAAC,EAAAD,EAAA,S,wTAqBME,EAAa,CACjBC,cAAAC,EAAAC,QACAC,OAAAC,EAAAF,QACAG,UAAAC,EAAAJ,QACAK,WAAAC,EAAAN,QACAO,MAAAC,EAAAR,QACAS,KAAAC,EAAAV,QACAW,WAAAC,EAAAZ,QACAa,OAAAC,EAAAd,QACAe,YAAAC,EAAAhB,QACAiB,cAAAC,EAAAlB,QACAmB,QAAAC,EAAApB,SAEIqB,EAAmB,GACzBC,EA2iBI,W,sBA3iBEC,IACQ,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,G,IAoCRC,EAnCEC,EACAC,E,eACgB,IAAhBL,EAAKD,QAAgBC,EAAK,GAAGM,aAAwE,WAAzDC,OAAOC,UAAUC,SAASC,KAAKV,EAAK,IAAIW,MAAM,GAAG,GAC/FN,EAASL,EAAK,IAEbI,G,OAAcJ,EAAI,IAAhB,GAAEK,EAAMO,EAAA,IAERP,IAAQA,EAAS,IACtBA,GAAS,EAAAQ,EAAAC,QAAO,GAAIT,GAChBD,IAAOC,EAAOD,KAAIC,EAAOD,GAAKA,GAClC,IAAMW,GAAW,EAAAC,EAAAC,eACjB,GAAIZ,EAAOD,IAA2B,iBAAdC,EAAOD,IAAmBW,EAASG,iBAAiBb,EAAOD,IAAIL,OAAS,EAAG,CACjG,IAAMoB,EAAU,GAQhB,OAPAJ,EAASG,iBAAiBb,EAAOD,IAAIgB,SAAQ,SAAAC,GAC3C,IAAMC,GAAY,EAAAT,EAAAC,QAAO,GAAIT,EAAQ,CACnCD,GAAIiB,IAENF,EAAQI,KAAK,IAAI3B,EAAO0B,G,IAGnBH,C,CAIT,IAAMK,EAASC,KACfD,EAAOE,YAAa,EACpBF,EAAOG,SAAU,EAAAC,EAAAC,cACjBL,EAAOM,QAAS,EAAAC,EAAAC,WAAU,CACxBC,UAAW5B,EAAO4B,YAEpBT,EAAOU,SAAU,EAAAC,EAAAC,cACjBZ,EAAOa,gBAAkB,GACzBb,EAAOc,mBAAqB,GAC5Bd,EAAOe,QAAWC,EAAAC,EAAA,CAAGjB,EAAOkB,aACxBrC,EAAOkC,SAAWtC,MAAM0C,QAAQtC,EAAOkC,WACzCpC,EAAAqB,EAAOe,SAAQhB,KAAfqB,MAAAzC,EAAoBqC,EAAAC,EAAA,CAAGpC,EAAOkC,UAEhC,IAAMM,EAAmB,GACzBrB,EAAOe,QAAQnB,SAAQ,SAAA0B,GACrBA,EAAI,CACFzC,SACAmB,SACAuB,cAAc,EAAAC,EAAA3E,SAAmBgC,EAAQwC,GACzCI,GAAIzB,EAAOyB,GAAGC,KAAK1B,GACnB2B,KAAM3B,EAAO2B,KAAKD,KAAK1B,GACvB4B,IAAK5B,EAAO4B,IAAIF,KAAK1B,GACrB6B,KAAM7B,EAAO6B,KAAKH,KAAK1B,I,IAK3B,IAAM8B,GAAe,EAAAzC,EAAAC,QAAO,GAAIyC,EAAAlF,QAAUwE,GAoG1C,OAjGArB,EAAOnB,QAAS,EAAAQ,EAAAC,QAAO,GAAIwC,EAAc5D,EAAkBW,GAC3DmB,EAAOgC,gBAAiB,EAAA3C,EAAAC,QAAO,GAAIU,EAAOnB,QAC1CmB,EAAOiC,cAAe,EAAA5C,EAAAC,QAAO,GAAIT,GAG7BmB,EAAOnB,QAAUmB,EAAOnB,OAAO4C,IACjC1C,OAAOmD,KAAKlC,EAAOnB,OAAO4C,IAAI7B,SAAQ,SAAAuC,GACpCnC,EAAOyB,GAAGU,EAAWnC,EAAOnB,OAAO4C,GAAGU,G,IAGtCnC,EAAOnB,QAAUmB,EAAOnB,OAAOuD,OACjCpC,EAAOoC,MAAMpC,EAAOnB,OAAOuD,OAI7BrD,OAAOsD,OAAOrC,EAAQ,CACpBsC,QAAStC,EAAOnB,OAAOyD,QACvB1D,KAEA2D,WAAY,GAEZC,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,gBAAiB,GAEjBC,aAAA,WACE,MAAmC,eAA5B5C,EAAOnB,OAAOgE,S,EAEvBC,WAAA,WACE,MAAmC,aAA5B9C,EAAOnB,OAAOgE,S,EAGvBE,YAAa,EACbC,UAAW,EAEXC,aAAa,EACbC,OAAO,EAEPlG,UAAW,EACXmG,kBAAmB,EACnBC,SAAU,EACVC,SAAU,EACVC,WAAW,EACXC,sBAAA,WAGE,OAA8C,QAAvCC,KAAKC,MAAMxD,KAAKjD,UAAY,Q,EAGrC0G,eAAgB1D,EAAOnB,OAAO6E,eAC9BC,eAAgB3D,EAAOnB,OAAO8E,eAE9BC,gBAAiB,CACfC,eAAWC,EACXC,aAASD,EACTE,yBAAqBF,EACrBG,oBAAgBH,EAChBI,iBAAaJ,EACbK,sBAAkBL,EAClBM,oBAAgBN,EAChBO,wBAAoBP,EAEpBQ,kBAAmBtE,EAAOnB,OAAOyF,kBAEjCC,cAAe,EACfC,kBAAcV,EAEdW,WAAY,GACZC,yBAAqBZ,EACrBa,iBAAab,EACbc,QAAS,IAGXC,YAAY,EAEZC,eAAgB9E,EAAOnB,OAAOiG,eAC9BC,QAAS,CACPC,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVC,SAAU,EACVC,KAAM,GAGRC,aAAc,GACdC,aAAc,IAEhBtF,EAAO6B,KAAK,WAGR7B,EAAOnB,OAAO0G,MAChBvF,EAAOuF,OAKFvF,C,iBAETwF,IAAA,gB,MAAA,SAAcC,GACZ,IACEC,EAEEzF,KAFFyF,SACA7G,EACEoB,KADFpB,OAEI2D,GAAS,EAAAnD,EAAAsG,iBAAgBD,EAAU,IAAsBE,OAAlB/G,EAAOgH,WAAW,mBACzDC,GAAkB,EAAAzG,EAAA0G,cAAavD,EAAO,IAC5C,OAAO,EAAAnD,EAAA0G,cAAaN,GAAWK,C,IAEjCN,IAAA,sB,MAAA,SAAoBQ,GAClB,OAAO/F,KAAKgG,cAAchG,KAAKuC,OAAO0D,QAAO,SAAAT,G,OAA6D,EAAlDA,EAAQU,aAAa,6BAAmCH,C,IAAO,G,IAEzHR,IAAA,e,MAAA,WACE,IAAMxF,EAASC,KAEbyF,EAEE1F,EAFF0F,SACA7G,EACEmB,EADFnB,OAEFmB,EAAOwC,QAAS,EAAAnD,EAAAsG,iBAAgBD,EAAU,IAAsBE,OAAlB/G,EAAOgH,WAAW,kB,IAElEL,IAAA,S,MAAA,WACE,IAAMxF,EAASC,KACXD,EAAOsC,UACXtC,EAAOsC,SAAU,EACbtC,EAAOnB,OAAOrB,YAChBwC,EAAOoG,gBAETpG,EAAO6B,KAAK,U,IAEd2D,IAAA,U,MAAA,WACE,IAAMxF,EAASC,KACVD,EAAOsC,UACZtC,EAAOsC,SAAU,EACbtC,EAAOnB,OAAOrB,YAChBwC,EAAOqG,kBAETrG,EAAO6B,KAAK,W,IAEd2D,IAAA,c,MAAA,SAAYpC,EAAUkD,GACpB,IAAMtG,EAASC,KACfmD,EAAWI,KAAK+C,IAAI/C,KAAKgD,IAAIpD,EAAU,GAAI,GAC3C,IAAMmD,EAAMvG,EAAOyG,eAEbC,GADM1G,EAAO2G,eACIJ,GAAOnD,EAAWmD,EACzCvG,EAAO4G,YAAYF,OAA0B,IAAVJ,EAAwB,EAAIA,GAC/DtG,EAAO6G,oBACP7G,EAAO8G,qB,IAETtB,IAAA,uB,MAAA,WACE,IAAMxF,EAASC,KACf,GAAKD,EAAOnB,OAAOkI,cAAiB/G,EAAOpB,GAA3C,CACA,IAAMoI,EAAMhH,EAAOpB,GAAGqI,UAAUC,MAAM,KAAKhB,QAAO,SAAAe,GAChD,OAAuC,IAAhCA,EAAUE,QAAQ,WAA+E,IAA5DF,EAAUE,QAAQnH,EAAOnB,OAAOuI,uB,IAE9EpH,EAAO6B,KAAK,oBAAqBmF,EAAIK,KAAK,KAJK,C,IAMjD7B,IAAA,kB,MAAA,SAAgBC,GACd,IAAMzF,EAASC,KACf,OAAID,EAAOsH,UAAkB,GACtB7B,EAAQwB,UAAUC,MAAM,KAAKhB,QAAO,SAAAe,GACzC,OAA6C,IAAtCA,EAAUE,QAAQ,iBAAyE,IAAhDF,EAAUE,QAAQnH,EAAOnB,OAAOgH,W,IACjFwB,KAAK,I,IAEV7B,IAAA,oB,MAAA,WACE,IAAMxF,EAASC,KACf,GAAKD,EAAOnB,OAAOkI,cAAiB/G,EAAOpB,GAA3C,CACA,IAAM2I,EAAU,GAChBvH,EAAOwC,OAAO5C,SAAQ,SAAA6F,GACpB,IAAMlD,EAAavC,EAAOwH,gBAAgB/B,GAC1C8B,EAAQxH,KAAK,CACX0F,UACAlD,eAEFvC,EAAO6B,KAAK,cAAe4D,EAASlD,E,IAEtCvC,EAAO6B,KAAK,gBAAiB0F,EAVkB,C,IAYjD/B,IAAA,uB,MAAA,W,IAAqBiC,EAAAnJ,UAAAC,OAAA,YAAAD,UAAA,GAAgBA,UAAA,GAAT,UAAWoJ,EAAApJ,UAAAC,OAAA,YAAAD,UAAA,IAAaA,UAAA,GAC5C0B,EAASC,KAEbpB,EAMEmB,EANFnB,OACA2D,EAKExC,EALFwC,OACAC,EAIEzC,EAJFyC,WACAE,EAGE3C,EAHF2C,gBACAgF,EAEE3H,EAFF4H,KACA7E,EACE/C,EADF+C,YAEE8E,EAAM,EACV,GAAIhJ,EAAOiJ,eAAgB,CAGzB,IAFA,IACIC,EADAC,EAAYxF,EAAOO,GAAakF,gBAE3BC,EAAInF,EAAc,EAAGmF,EAAI1F,EAAOjE,OAAQ2J,GAAK,EAChD1F,EAAO0F,KAAOH,IAEhBF,GAAO,GADPG,GAAaxF,EAAO0F,GAAGD,iBAEPN,IAAYI,GAAY,IAG5C,IAAK,IAAII,EAAIpF,EAAc,EAAGoF,GAAK,EAAGA,GAAK,EACrC3F,EAAO2F,KAAOJ,IAEhBF,GAAO,GADPG,GAAaxF,EAAO2F,GAAGF,iBAEPN,IAAYI,GAAY,G,MAK5C,GAAa,YAATN,EACF,IAAK,IAAIW,EAAIrF,EAAc,EAAGqF,EAAI5F,EAAOjE,OAAQ6J,GAAK,EAAG,CACvD,IAAMC,EAAcX,EAAQjF,EAAW2F,GAAKzF,EAAgByF,GAAK3F,EAAWM,GAAe4E,EAAalF,EAAW2F,GAAK3F,EAAWM,GAAe4E,EAC9IU,IACFR,GAAO,E,MAKX,IAAK,IAAIS,EAAIvF,EAAc,EAAGuF,GAAK,EAAGA,GAAK,EAAG,CAC5C,IAAMC,EAAc9F,EAAWM,GAAeN,EAAW6F,GAAKX,EAC1DY,IACFV,GAAO,E,CAKf,OAAOA,C,IAETrC,IAAA,S,MAAA,WACE,IAAMxF,EAASC,KACf,GAAKD,IAAUA,EAAOsH,UAAtB,CACA,IAwBIkB,EAvBF9F,EAEE1C,EAFF0C,SACA7D,EACEmB,EADFnB,OAuBF,GApBIA,EAAOjB,aACToC,EAAOyI,gBAERzH,EAAAC,EAAA,CAAGjB,EAAOpB,GAAGc,iBAAiB,qBAAqBE,SAAQ,SAAA8I,GACtDA,EAAQC,WACV,EAAAC,EAAAC,sBAAqB7I,EAAQ0I,E,IAGjC1I,EAAO8I,aACP9I,EAAO+I,eACP/I,EAAOgJ,iBACPhJ,EAAO8G,sBASH9G,EAAOnB,OAAOoK,UAAYjJ,EAAOnB,OAAOoK,SAAS3G,QACnD4G,IACIlJ,EAAOnB,OAAOsK,YAChBnJ,EAAOoJ,uBAEJ,CACL,IAAqC,SAAhCpJ,EAAOnB,OAAOwK,eAA4BrJ,EAAOnB,OAAOwK,cAAgB,IAAMrJ,EAAOkD,QAAUlD,EAAOnB,OAAOiJ,eAAgB,CAChI,IAAMtF,EAASxC,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAAUtC,EAAOsJ,QAAQ9G,OAASxC,EAAOwC,OAChGgG,EAAaxI,EAAOuJ,QAAQ/G,EAAOjE,OAAS,EAAG,GAAG,GAAO,E,MAEzDiK,EAAaxI,EAAOuJ,QAAQvJ,EAAO+C,YAAa,GAAG,GAAO,GAEvDyF,GACHU,G,CAGArK,EAAO2K,eAAiB9G,IAAa1C,EAAO0C,UAC9C1C,EAAOlC,gBAETkC,EAAO6B,KAAK,SA7CqB,CAkBjC,SAASqH,IACP,IAAMO,EAAiBzJ,EAAO0J,cAAkC,EAAnB1J,EAAOhD,UAAiBgD,EAAOhD,UACtE2M,EAAenG,KAAK+C,IAAI/C,KAAKgD,IAAIiD,EAAgBzJ,EAAO2G,gBAAiB3G,EAAOyG,gBACtFzG,EAAOkJ,aAAaS,GACpB3J,EAAO6G,oBACP7G,EAAO8G,qB,KAwBXtB,IAAA,kB,MAAA,SAAgBoE,G,IAAcC,IAAAvL,UAAAC,OAAA,YAAAD,UAAA,KAAiBA,UAAA,GACvC0B,EAASC,KACT6J,EAAmB9J,EAAOnB,OAAOgE,UAKvC,OAJK+G,IAEHA,EAAoC,eAArBE,EAAoC,WAAa,cAE9DF,IAAiBE,GAAqC,eAAjBF,GAAkD,aAAjBA,IAG1E5J,EAAOpB,GAAGmL,UAAUC,OAAO,GAA0CpE,OAAvC5F,EAAOnB,OAAOuI,wBAA0CxB,OAAjBkE,IACrE9J,EAAOpB,GAAGmL,UAAUE,IAAI,GAA0CrE,OAAvC5F,EAAOnB,OAAOuI,wBAAsCxB,OAAbgE,IAClE5J,EAAOkK,uBACPlK,EAAOnB,OAAOgE,UAAY+G,EAC1B5J,EAAOwC,OAAO5C,SAAQ,SAAA6F,GACC,aAAjBmE,EACFnE,EAAQ0E,MAAMC,MAAQ,GAEtB3E,EAAQ0E,MAAME,OAAS,E,IAG3BrK,EAAO6B,KAAK,mBACRgI,GAAY7J,EAAOlD,UAddkD,C,IAiBXwF,IAAA,0B,MAAA,SAAwB3C,GACtB,IAAM7C,EAASC,KACXD,EAAOsK,KAAqB,QAAdzH,IAAwB7C,EAAOsK,KAAqB,QAAdzH,IACxD7C,EAAOsK,IAAoB,QAAdzH,EACb7C,EAAO0J,aAA2C,eAA5B1J,EAAOnB,OAAOgE,WAA8B7C,EAAOsK,IACrEtK,EAAOsK,KACTtK,EAAOpB,GAAGmL,UAAUE,IAAI,GAAwCrE,OAArC5F,EAAOnB,OAAOuI,uBAAuB,QAChEpH,EAAOpB,GAAG2L,IAAM,QAEhBvK,EAAOpB,GAAGmL,UAAUC,OAAO,GAAwCpE,OAArC5F,EAAOnB,OAAOuI,uBAAuB,QACnEpH,EAAOpB,GAAG2L,IAAM,OAElBvK,EAAOlD,S,IAET0I,IAAA,Q,MAAA,SAAMgF,GACJ,IAAMxK,EAASC,KACf,GAAID,EAAOyK,QAAS,OAAO,EAG3B,IAAI7L,EAAK4L,GAAWxK,EAAOnB,OAAOD,GAIlC,GAHkB,iBAAPA,IACTA,EAAKW,SAASmL,cAAc9L,KAEzBA,EACH,OAAO,EAETA,EAAGoB,OAASA,EACRpB,EAAG+L,WACL3K,EAAO4K,WAAY,GAErB,IAAMC,EAAqB,WACzB,MAAO,IAAmEjF,QAA9D5F,EAAOnB,OAAOiM,cAAgB,IAAIC,OAAO7D,MAAM,KAAKG,KAAK,K,EAWnE2D,EAREpM,GAAMA,EAAGqM,YAAcrM,EAAGqM,WAAWP,cAC3B9L,EAAGqM,WAAWP,cAAcG,MAInC,EAAAxL,EAAAsG,iBAAgB/G,EAAIiM,KAAsB,GAqBnD,OAjBKG,GAAahL,EAAOnB,OAAOqM,iBAC9BF,GAAY,EAAA3L,EAAA8L,eAAc,MAAOnL,EAAOnB,OAAOiM,cAC/ClM,EAAGwM,OAAOJ,IACV,EAAA3L,EAAAsG,iBAAgB/G,EAAI,IAA6BgH,OAAzB5F,EAAOnB,OAAOgH,aAAcjG,SAAQ,SAAA6F,GAC1DuF,EAAUI,OAAO3F,E,KAGrB1G,OAAOsD,OAAOrC,EAAQ,CACpBpB,KACAoM,YACAtF,SAAU1F,EAAO4K,UAAYhM,EAAKoM,EAClCP,SAAS,EAETH,IAA8B,QAAzB1L,EAAG2L,IAAIc,eAA6D,SAAlC,EAAAhM,EAAAiM,cAAa1M,EAAI,aACxD8K,aAA0C,eAA5B1J,EAAOnB,OAAOgE,YAAwD,QAAzBjE,EAAG2L,IAAIc,eAA6D,SAAlC,EAAAhM,EAAAiM,cAAa1M,EAAI,cAC9G2M,SAAiD,iBAAvC,EAAAlM,EAAAiM,cAAaN,EAAW,cAE7B,C,IAETxF,IAAA,O,MAAA,SAAK5G,GACH,IAAMoB,EAASC,KACf,OAAID,EAAOwL,cAEK,IADAxL,EAAOyL,MAAM7M,KAE7BoB,EAAO6B,KAAK,cAGR7B,EAAOnB,OAAOjB,aAChBoC,EAAOyI,gBAITzI,EAAO0L,aAGP1L,EAAO8I,aAGP9I,EAAO+I,eACH/I,EAAOnB,OAAO2K,eAChBxJ,EAAOlC,gBAILkC,EAAOnB,OAAOrB,YAAcwC,EAAOsC,SACrCtC,EAAOoG,gBAILpG,EAAOnB,OAAOvB,MAAQ0C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAChEtC,EAAOuJ,QAAQvJ,EAAOnB,OAAO8M,aAAe3L,EAAOsJ,QAAQsC,aAAc,EAAG5L,EAAOnB,OAAOgN,oBAAoB,GAAO,GAErH7L,EAAOuJ,QAAQvJ,EAAOnB,OAAO8M,aAAc,EAAG3L,EAAOnB,OAAOgN,oBAAoB,GAAO,GAIrF7L,EAAOnB,OAAOvB,MAChB0C,EAAO8L,aAIT9L,EAAO+L,eACN/K,EAAAC,EAAA,CAAGjB,EAAOpB,GAAGc,iBAAiB,qBAAqBE,SAAQ,SAAA8I,GACtDA,EAAQC,UACV,EAAAC,EAAAC,sBAAqB7I,EAAQ0I,GAE7BA,EAAQsD,iBAAiB,QAAQ,SAAAC,IAC/B,EAAArD,EAAAC,sBAAqB7I,EAAQiM,EAAEC,O,QAIrC,EAAAtD,EAAAuD,SAAQnM,GAGRA,EAAOwL,aAAc,GACrB,EAAA5C,EAAAuD,SAAQnM,GAGRA,EAAO6B,KAAK,QACZ7B,EAAO6B,KAAK,cA1DmB7B,C,IA6DjCwF,IAAA,U,MAAA,W,IAAQ4G,IAAA9N,UAAAC,OAAA,YAAAD,UAAA,KAAqBA,UAAA,GAAE+N,IAAA/N,UAAAC,OAAA,YAAAD,UAAA,KAAkBA,UAAA,GACzC0B,EAASC,KAEbpB,EAIEmB,EAJFnB,OACAD,EAGEoB,EAHFpB,GACAoM,EAEEhL,EAFFgL,UACAxI,EACExC,EADFwC,OAEF,YAA6B,IAAlBxC,EAAOnB,QAA0BmB,EAAOsH,YAGnDtH,EAAO6B,KAAK,iBAGZ7B,EAAOwL,aAAc,EAGrBxL,EAAOsM,eAGHzN,EAAOvB,MACT0C,EAAOuM,cAILF,IACFrM,EAAOwM,gBACP5N,EAAG6N,gBAAgB,SACnBzB,EAAUyB,gBAAgB,SACtBjK,GAAUA,EAAOjE,QACnBiE,EAAO5C,SAAQ,SAAA6F,GACbA,EAAQsE,UAAUC,OAAOnL,EAAO6N,kBAAmB7N,EAAO8N,iBAAkB9N,EAAO+N,eAAgB/N,EAAOgO,gBAC1GpH,EAAQgH,gBAAgB,SACxBhH,EAAQgH,gBAAgB,0B,KAI9BzM,EAAO6B,KAAK,WAGZ9C,OAAOmD,KAAKlC,EAAOa,iBAAiBjB,SAAQ,SAAAuC,GAC1CnC,EAAO4B,IAAIO,E,KAEU,IAAnBiK,IACFpM,EAAOpB,GAAGoB,OAAS,MACnB,EAAAX,EAAAyN,aAAY9M,IAEdA,EAAOsH,WAAY,GAtCV,I,MAyCJ9B,IAAA,iB,MAAP,SAAsBuH,IACpB,EAAA1N,EAAAC,QAAOpB,EAAkB6O,E,IAEhBvH,IAAA,mB,IAAX,WACE,OAAOtH,C,IAEEsH,IAAA,W,IAAX,WACE,OAAOzD,EAAAlF,O,IAEF2I,IAAA,gB,MAAP,SAAqBlE,GACdlD,EAAOY,UAAUkC,cAAa9C,EAAOY,UAAUkC,YAAc,IAClE,IAAMH,EAAU3C,EAAOY,UAAUkC,YACd,mBAARI,GAAsBP,EAAQoG,QAAQ7F,GAAO,GACtDP,EAAQhB,KAAKuB,E,IAGVkE,IAAA,M,MAAP,SAAWwH,GACT,OAAIvO,MAAM0C,QAAQ6L,IAChBA,EAAOpN,SAAQ,SAAAqN,G,OAAK7O,EAAO8O,cAAcD,E,IAClC7O,IAETA,EAAO8O,cAAcF,GACd5O,E,OAGP,GAAJW,OAAOmD,KAAKxF,GAAYkD,SAAQ,SAAAuN,GAC9BpO,OAAOmD,KAAKxF,EAAWyQ,IAAiBvN,SAAQ,SAAAwN,GAC9CjP,EAAOa,UAAUoO,GAAe1Q,EAAWyQ,GAAgBC,E,OAG/DjP,EAAOkP,IAAI,CAACC,EAAAzQ,QAAQ0Q,EAAA1Q,U,IACpB2Q,EAAerP,C,sCCrlBf,aACAY,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAAyB+Q,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,uCCP5B,aAUA,SAASC,EAAkB7B,EAAQ8B,GAC/B,IAAI,IAAI9F,EAAI,EAAGA,EAAI8F,EAAMzP,OAAQ2J,IAAI,CACjC,IAAI+F,EAAaD,EAAM9F,GACvB+F,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDrP,OAAO0O,eAAevB,EAAQ+B,EAAWzI,IAAKyI,E,EAftDlP,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAAsBgR,EAAaQ,EAAYC,GACvCD,GAAYN,EAAkBF,EAAY7O,UAAWqP,GACrDC,GAAaP,EAAkBF,EAAaS,GAChD,OAAOT,C,uCCRX,aACA9O,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QAKR,SAAwB0R,EAAKrG,GACzB,OAAOsG,EAAqB3R,QAAQ0R,IAAQE,EAAsB5R,QAAQ0R,EAAKrG,IAAMwG,EAAiC7R,QAAQ0R,EAAKrG,IAAMyG,EAAsB9R,S,EALnK,IAAI2R,EAAkBI,EAAuBpS,EAAA,UACzCiS,EAAmBG,EAAuBpS,EAAA,UAC1CmS,EAAmBC,EAAuBpS,EAAA,UAC1CkS,EAA8BE,EAAuBpS,EAAA,UAIzD,SAASoS,EAAuBC,GAC5B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACjChS,QAASgS,E,uCCdjB,aACA9P,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAAyB0R,GACrB,GAAI9P,MAAM0C,QAAQoN,GAAM,OAAOA,C,uCCNnC,aACAxP,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAA0BkS,GACtB,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOtQ,MAAMyQ,KAAKH,E,uCCNxH,aACAhQ,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,WACI,MAAM,IAAIiR,UAAU,6I,uCCNxB,aACA/O,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QAER,SAAqCsS,EAAGC,GACpC,IAAKD,EAAG,OACR,GAAiB,iBAANA,EAAgB,OAAOE,EAAuBxS,QAAQsS,EAAGC,GACpE,IAAIE,EAAIvQ,OAAOC,UAAUC,SAASC,KAAKiQ,GAAGhQ,MAAM,GAAG,GACzC,WAANmQ,GAAkBH,EAAErQ,cAAawQ,EAAIH,EAAErQ,YAAYyQ,MACvD,GAAU,QAAND,GAAqB,QAANA,EAAa,OAAO7Q,MAAMyQ,KAAKI,GAClD,GAAU,cAANA,GAAqB,2CAA2CE,KAAKF,GAAI,OAAOD,EAAuBxS,QAAQsS,EAAGC,E,EAP1H,IASgCP,EAT5BQ,GAS4BR,EATerS,EAAA,WAU7BqS,EAAIC,WAAaD,EAAM,CACjChS,QAASgS,E,sCChBjB,aACA9P,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAA2B0R,EAAKkB,IACjB,MAAPA,GAAeA,EAAMlB,EAAIhQ,UAAQkR,EAAMlB,EAAIhQ,QAC/C,IAAI,IAAI2J,EAAI,EAAGwH,EAAO,IAAIjR,MAAMgR,GAAMvH,EAAIuH,EAAKvH,IAAIwH,EAAKxH,GAAKqG,EAAIrG,GACjE,OAAOwH,C,uCCRX,aACA3Q,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QAKR,SAA4B0R,GACxB,OAAOoB,EAAwB9S,QAAQ0R,IAAQqB,EAAsB/S,QAAQ0R,IAAQsB,EAAiChT,QAAQ0R,IAAQuB,EAAwBjT,S,EALlK,IAAI8S,EAAqBI,EAAuBvT,EAAA,UAC5CoT,EAAmBG,EAAuBvT,EAAA,UAC1CsT,EAAqBC,EAAuBvT,EAAA,UAC5CqT,EAA8BE,EAAuBvT,EAAA,UAIzD,SAASuT,EAAuBlB,GAC5B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACjChS,QAASgS,E,uCCdjB,aACA9P,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QAER,SAA4B0R,GACxB,GAAI9P,MAAM0C,QAAQoN,GAAM,OAAOyB,EAAuBnT,QAAQ0R,E,EAFlE,IAIgCM,EAJ5BmB,GAI4BnB,EAJerS,EAAA,WAK7BqS,EAAIC,WAAaD,EAAM,CACjChS,QAASgS,E,sCCXjB,aACA9P,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,WACI,MAAM,IAAIiR,UAAU,wI,uCCMxB,SAASmC,EAASpB,GACd,OAAgB,OAARA,GACW,iBAARA,GACP,gBAAiBA,GACjBA,EAAI/P,cAAgBC,M,CAE5B,SAASmR,I,IAAOhE,EAAA5N,UAAAC,OAAA,YAAAD,UAAA,GAAWA,UAAA,GAAF,GAAI6R,EAAA7R,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAF,GAC/BS,OAAOmD,KAAKiO,GAAKvQ,SAAQ,SAAC4F,QACK,IAAhB0G,EAAO1G,GACd0G,EAAO1G,GAAO2K,EAAI3K,GACbyK,EAASE,EAAI3K,KAClByK,EAAS/D,EAAO1G,KAChBzG,OAAOmD,KAAKiO,EAAI3K,IAAMjH,OAAS,GAC/B2R,EAAOhE,EAAO1G,GAAM2K,EAAI3K,G,sGAKpC,IAAM4K,EAAc,CAChBC,KAAM,GACNrE,iBAAA,WAAmB,EACnBsE,oBAAA,WAAsB,EACtBC,cAAe,CACXC,KAAA,WAAO,EACPC,SAAU,IAEd/F,cAAA,WACI,OAAO,I,EAEXhL,iBAAA,WACI,MAAO,E,EAEXgR,eAAA,WACI,OAAO,I,EAEXC,YAAA,WACI,MAAO,CACHC,UAAA,WAAY,E,EAGpBzF,cAAA,WACI,MAAO,CACH0F,SAAU,GACVC,WAAY,GACZ3G,MAAO,GACP4G,aAAA,WAAe,EACfC,qBAAA,WACI,MAAO,E,IAInBC,gBAAA,WACI,MAAO,E,EAEXC,WAAA,WACI,OAAO,I,EAEXC,SAAU,CACNC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,OAAQ,KAGhB,SAASC,IACL,IAAMC,EAA0B,oBAAbtS,SAA2BA,SAAW,GAEzD,OADA2Q,EAAO2B,EAAKzB,GACLyB,C,CAGX,IAAMC,EAAY,CACdvS,SAAU6Q,EACV2B,UAAW,CACPtR,UAAW,IAEf0Q,SAAU,CACNC,KAAM,GACNC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,SAAU,GACVC,SAAU,GACVC,OAAQ,IAEZK,QAAS,CACLC,aAAA,WAAe,EACfC,UAAA,WAAY,EACZC,GAAA,WAAK,EACLC,KAAA,WAAO,GAEXC,YAAa,WACT,OAAOpS,I,EAEX+L,iBAAA,WAAmB,EACnBsE,oBAAA,WAAsB,EACtBgC,iBAAA,WACI,MAAO,CACHC,iBAAA,WACI,MAAO,E,IAInBC,MAAA,WAAQ,EACRC,KAAA,WAAO,EACPC,OAAQ,GACRC,WAAA,WAAa,EACbC,aAAA,WAAe,EACfC,WAAA,WACI,MAAO,E,EAEXC,sBAAA,SAAsBC,GAClB,MAA0B,oBAAfJ,YACPI,IACO,MAEJJ,WAAWI,EAAU,E,EAEhCC,qBAAA,SAAqBC,GACS,oBAAfN,YAGXC,aAAaK,E,GAGrB,SAASC,IACL,IAAMC,EAAwB,oBAAXC,OAAyBA,OAAS,GAErD,OADAlD,EAAOiD,EAAKrB,GACLqB,C,ggCChJX,IAAAE,EAAA7W,EAAA,S,0BACA,SAAS8W,EAAYzE,GACnB,IAAM0E,EAAS1E,EACf9P,OAAOmD,KAAKqR,GAAQ3T,SAAQ,SAAA4F,GAC1B,IACE+N,EAAO/N,GAAO,I,CACd,MAAOyG,G,CAGT,WACSsH,EAAO/N,E,CACd,MAAOgO,G,KAKb,SAASC,EAASV,G,IAAUW,EAAApV,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAD,EAClC,OAAOqU,WAAWI,EAAUW,E,CAE9B,SAASC,IACP,OAAOlB,KAAKmB,K,CAEd,SAASC,EAAiBjV,GACxB,IACIuL,EADEiJ,GAAS,EAAA5T,EAAAsU,aAWf,OATIV,EAAOd,mBACTnI,EAAQiJ,EAAOd,iBAAiB1T,EAAI,QAEjCuL,GAASvL,EAAGmV,eACf5J,EAAQvL,EAAGmV,cAER5J,IACHA,EAAQvL,EAAGuL,OAENA,C,CAET,SAAS6J,EAAapV,G,IAEhBqV,EACAC,EACAC,EAJoBC,EAAA9V,UAAAC,OAAA,YAAAD,UAAA,GAAUA,UAAA,GAAH,IACzB8U,GAAS,EAAA5T,EAAAsU,aAITO,EAAWR,EAAiBjV,GA6BlC,OA5BIwU,EAAOkB,kBACTJ,EAAeG,EAASE,WAAaF,EAASG,iBAC7BtN,MAAM,KAAK3I,OAAS,IACnC2V,EAAeA,EAAahN,MAAM,MAAMuN,KAAI,SAAAC,G,OAAKA,EAAEC,QAAQ,IAAK,I,IAAMtN,KAAK,OAI7E8M,EAAkB,IAAIf,EAAOkB,gBAAiC,SAAjBJ,EAA0B,GAAKA,IAG5ED,GADAE,EAAkBE,EAASO,cAAgBP,EAASQ,YAAcR,EAASS,aAAeT,EAASU,aAAeV,EAASE,WAAaF,EAAS9B,iBAAiB,aAAaoC,QAAQ,aAAc,uBAC5K1V,WAAWiI,MAAM,KAE/B,MAATkN,IAE0BF,EAAxBd,EAAOkB,gBAAgCH,EAAgBa,IAEhC,KAAlBf,EAAO1V,OAA8B0W,WAAWhB,EAAO,KAE5CgB,WAAWhB,EAAO,KAE3B,MAATG,IAE0BF,EAAxBd,EAAOkB,gBAAgCH,EAAgBe,IAEhC,KAAlBjB,EAAO1V,OAA8B0W,WAAWhB,EAAO,KAE5CgB,WAAWhB,EAAO,KAEjCC,GAAgB,C,CAEzB,SAASiB,EAAShG,GAChB,MAAoB,iBAANA,GAAwB,OAANA,GAAcA,EAAErQ,aAAkE,WAAnDC,OAAOC,UAAUC,SAASC,KAAKiQ,GAAGhQ,MAAM,GAAG,E,CAE5G,SAASiW,EAAOC,GAEd,MAAsB,oBAAXjC,aAAwD,IAAvBA,OAAOkC,YAC1CD,aAAgBC,YAElBD,IAA2B,IAAlBA,EAAKE,UAAoC,KAAlBF,EAAKE,S,CAE9C,SAASC,IAAO,I,kBAIZ,IAAMC,EAAajX,EAAK0J,GACxB,GAAIuN,UAAoDL,EAAOK,GAE7D,IADA,IAAMC,EAAY3W,OAAOmD,KAAKnD,OAAO0W,IAAavP,QAAO,SAAAV,G,OAAOmQ,EAASxO,QAAQ3B,GAAO,C,IAC/EoQ,EAAY,EAAGnG,EAAMiG,EAAUnX,OAAQqX,EAAYnG,EAAKmG,GAAa,EAAG,CAC/E,IAAMC,EAAUH,EAAUE,GACpBE,EAAO/W,OAAOgX,yBAAyBN,EAAYI,QAC5C/R,IAATgS,GAAsBA,EAAK5H,aACzBiH,EAASa,EAAGH,KAAaV,EAASM,EAAWI,IAC3CJ,EAAWI,GAAS3V,WACtB8V,EAAGH,GAAWJ,EAAWI,GAEzBL,EAAOQ,EAAGH,GAAUJ,EAAWI,KAEvBV,EAASa,EAAGH,KAAaV,EAASM,EAAWI,KACvDG,EAAGH,GAAW,GACVJ,EAAWI,GAAS3V,WACtB8V,EAAGH,GAAWJ,EAAWI,GAEzBL,EAAOQ,EAAGH,GAAUJ,EAAWI,KAGjCG,EAAGH,GAAWJ,EAAWI,G,GAzBrBxX,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAGd,IAFA,IAAMsX,EAAKjX,OAAOP,EAAK,IACjBmX,EAAW,CAAC,YAAa,cAAe,aACrCxN,EAAI,EAAGA,EAAI3J,EAAKD,OAAQ4J,GAAK,EAAC8N,EAAA9N,GA4BvC,OAAO6N,C,CAET,SAASE,EAAetX,EAAIuX,EAASC,GACnCxX,EAAGuL,MAAMkM,YAAYF,EAASC,E,CAEhC,SAASE,EAAqBC,G,IAQxBC,EAPJxW,EAD4BuW,EAC5BvW,OACAyW,EAF4BF,EAE5BE,eACAC,EAH4BH,EAG5BG,KAEMtD,GAAS,EAAA5T,EAAAsU,aACT6C,GAAiB3W,EAAOhD,UAC1B4Z,EAAY,KAEVC,EAAW7W,EAAOnB,OAAOyH,MAC/BtG,EAAOgL,UAAUb,MAAM2M,eAAiB,OACxC1D,EAAOJ,qBAAqBhT,EAAO+W,gBACnC,IAAMxM,EAAMkM,EAAiBE,EAAgB,OAAS,OAChDK,EAAe,SAACtQ,EAASwF,GAC7B,MAAe,SAAR3B,GAAkB7D,GAAWwF,GAAkB,SAAR3B,GAAkB7D,GAAWwF,C,EAEvE+K,EAAU,WACdT,GAAO,IAAI/D,MAAOyE,UACA,OAAdN,IACFA,EAAYJ,GAEd,IAAMpT,EAAWI,KAAKgD,IAAIhD,KAAK+C,KAAKiQ,EAAOI,GAAaC,EAAU,GAAI,GAChEM,EAAe,GAAM3T,KAAK4T,IAAIhU,EAAWI,KAAK6T,IAAM,EACtDC,EAAkBX,EAAgBQ,GAAgBV,EAAiBE,GAOvE,GANIK,EAAaM,EAAiBb,KAChCa,EAAkBb,GAEpBzW,EAAOgL,UAAUuM,SACfvW,EAAAqS,EAAA,IAACqD,EAAOY,IAENN,EAAaM,EAAiBb,GAUhC,OATAzW,EAAOgL,UAAUb,MAAMqN,SAAW,SAClCxX,EAAOgL,UAAUb,MAAM2M,eAAiB,GACxCnE,YAAW,WACT3S,EAAOgL,UAAUb,MAAMqN,SAAW,GAClCxX,EAAOgL,UAAUuM,SACfvW,EAAAqS,EAAA,IAACqD,EAAOY,G,SAGZlE,EAAOJ,qBAAqBhT,EAAO+W,gBAGrC/W,EAAO+W,eAAiB3D,EAAON,sBAAsBmE,E,EAEvDA,G,CAEF,SAASQ,EAAoBhS,GAC3B,OAAOA,EAAQiF,cAAc,4BAA8BjF,EAAQkF,UAAYlF,EAAQkF,SAASD,cAAc,4BAA8BjF,C,CAS9I,SAASiS,EAAgBlN,G,IAASmN,EAAArZ,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAF,GAC3C,OAAQ0C,EAAAC,EAAD,CAAIuJ,EAAQqG,UAAU3K,QAAO,SAAAtH,G,OAAMA,EAAGgZ,QAAQD,E,IAEvD,SAASE,EAAcC,G,IAErBC,EAF0B/Z,EAAAM,UAAAC,OAAA,YAAAD,UAAA,GAAYA,UAAA,GAAF,GAC9BM,EAAKW,SAAS4L,cAAc2M,GAElC,OADAC,EAAAnZ,EAAGmL,WAAUE,IAAb7I,MAAA2W,EAAiB/W,EAAAC,EAAA,CAAIxC,MAAM0C,QAAQnD,GAAWA,EAAU,CAACA,KAClDY,C,CAET,SAASoZ,EAAcpZ,GACrB,IAAMwU,GAAS,EAAA5T,EAAAsU,aACTvU,GAAW,EAAAC,EAAAC,eACXwY,EAAMrZ,EAAGsZ,wBACT7H,EAAO9Q,EAAS8Q,KAChB8H,EAAYvZ,EAAGuZ,WAAa9H,EAAK8H,WAAa,EAC9CC,EAAaxZ,EAAGwZ,YAAc/H,EAAK+H,YAAc,EACjDC,EAAYzZ,IAAOwU,EAASA,EAAOkF,QAAU1Z,EAAGyZ,UAChDE,EAAa3Z,IAAOwU,EAASA,EAAOoF,QAAU5Z,EAAG2Z,WACvD,MAAO,CACLE,IAAKR,EAAIQ,IAAMJ,EAAYF,EAC3BO,KAAMT,EAAIS,KAAOH,EAAaH,E,CAGlC,SAASO,EAAe/Z,EAAI+Y,GAE1B,IADA,IAAMiB,EAAU,GACTha,EAAGia,wBAAwB,CAChC,IAAMC,EAAOla,EAAGia,uBACZlB,EACEmB,EAAKlB,QAAQD,IAAWiB,EAAQ7Y,KAAK+Y,GACpCF,EAAQ7Y,KAAK+Y,GACpBla,EAAKka,C,CAEP,OAAOF,C,CAET,SAASG,EAAena,EAAI+Y,GAE1B,IADA,IAAMqB,EAAU,GACTpa,EAAGqa,oBAAoB,CAC5B,IAAMC,EAAOta,EAAGqa,mBACZtB,EACEuB,EAAKtB,QAAQD,IAAWqB,EAAQjZ,KAAKmZ,GACpCF,EAAQjZ,KAAKmZ,GACpBta,EAAKsa,C,CAEP,OAAOF,C,CAET,SAASG,EAAava,EAAIwa,GAExB,OADe,EAAA5Z,EAAAsU,aACDxB,iBAAiB1T,EAAI,MAAM2T,iBAAiB6G,E,CAE5D,SAASC,EAAaza,GACpB,IACIsJ,EADAoR,EAAQ1a,EAEZ,GAAI0a,EAAO,CAGT,IAFApR,EAAI,EAEuC,QAAnCoR,EAAQA,EAAMC,kBACG,IAAnBD,EAAM/D,WAAgBrN,GAAK,GAEjC,OAAOA,C,EAIX,SAASsR,EAAe5a,EAAI+Y,GAG1B,IAFA,IAAM8B,EAAU,GACZC,EAAS9a,EAAG+a,cACTD,GACD/B,EACE+B,EAAO9B,QAAQD,IAAW8B,EAAQ1Z,KAAK2Z,GAE3CD,EAAQ1Z,KAAK2Z,GAEfA,EAASA,EAAOC,cAElB,OAAOF,C,CAET,SAASG,EAAqBhb,EAAImU,GAM5BA,GACFnU,EAAGoN,iBAAiB,iBANtB,SAAS6N,EAAa5N,GAChBA,EAAEC,SAAWtN,IACjBmU,EAAS7T,KAAKN,EAAIqN,GAClBrN,EAAG0R,oBAAoB,gBAAiBuJ,G,IAM5C,SAASC,EAAiBlb,EAAIgJ,EAAMmS,GAClC,IAAM3G,GAAS,EAAA5T,EAAAsU,aACf,OAAIiG,EACKnb,EAAY,UAATgJ,EAAmB,cAAgB,gBAAkBqN,WAAW7B,EAAOd,iBAAiB1T,EAAI,MAAM2T,iBAA0B,UAAT3K,EAAmB,eAAiB,eAAiBqN,WAAW7B,EAAOd,iBAAiB1T,EAAI,MAAM2T,iBAA0B,UAAT3K,EAAmB,cAAgB,kBAE9QhJ,EAAGob,W,uCCvQZ,aACAjb,OAAO0O,eAAeT,EAAAU,QAAS,aAAc,CACzCC,OAAO,IAEXX,EAAAU,QAAQ7Q,QACR,SAAyBgS,EAAKrJ,EAAKmI,GAC3BnI,KAAOqJ,EACP9P,OAAO0O,eAAeoB,EAAKrJ,EAAK,CAC5BmI,MAAOA,EACPO,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdS,EAAIrJ,GAAOmI,EAEf,OAAOkB,C,wFChBX,IACIoL,EADJza,EAAAhD,EAAA,SAUA,SAAS0d,IAIP,OAHKD,IACHA,EAVJ,WACE,IAAM7G,GAAS,EAAA5T,EAAAsU,aACTvU,GAAW,EAAAC,EAAAC,eACjB,MAAO,CACL0a,aAAc5a,EAAS6a,iBAAmB,mBAAoB7a,EAAS6a,gBAAgBjQ,MACvFkQ,SAAU,iBAAkBjH,GAAUA,EAAOkH,eAAiB/a,aAAoB6T,EAAOkH,e,CAK/EC,IAELN,C,uFCdT,IAEIO,EAFJhb,EAAAhD,EAAA,S,aAGA,SAASie,I,IAAWha,GAAAnC,UAAAC,OAAA,YAAAD,UAAA,GAEdA,UAAA,GAAF,IADFmC,UAEMN,GAAU,EAAAC,EAAAC,cACV+S,GAAS,EAAA5T,EAAAsU,aACT4G,EAAWtH,EAAOrB,UAAU2I,SAC5BC,EAAKla,GAAa2S,EAAOrB,UAAUtR,UACnCH,EAAS,CACbsa,KAAK,EACLC,SAAS,GAELC,EAAc1H,EAAOV,OAAOtI,MAC5B2Q,EAAe3H,EAAOV,OAAOrI,OAC7BwQ,EAAUF,EAAGK,MAAK,+BACpBC,EAAON,EAAGK,MAAK,wBACbE,EAAOP,EAAGK,MAAK,2BACfG,GAAUF,GAAQN,EAAGK,MAAK,8BAC1BI,EAAuB,UAAbV,EACZW,EAAqB,aAAbX,EAGNY,EAAc,CAAC,YAAa,YAAa,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAkB3J,OAjBKL,GAAQI,GAASlb,EAAQka,OAASiB,EAAYnU,QAAQ,GAAkBvB,OAAfkV,EAAY,KAAgBlV,OAAbmV,KAAmB,KAC9FE,EAAON,EAAGK,MAAK,0BACJC,EAAO,CAAC,EAAG,EAAG,WACzBI,GAAQ,GAINR,IAAYO,IACd9a,EAAOib,GAAK,UACZjb,EAAOua,SAAU,IAEfI,GAAQE,GAAUD,KACpB5a,EAAOib,GAAK,MACZjb,EAAOsa,KAAM,GAIRta,C,CAET,SAASkb,I,IAAUC,EAAAnd,UAAAC,OAAA,YAAAD,UAAA,GAAcA,UAAA,GAAF,GAI7B,OAHKkc,IACHA,EAAeC,EAAWgB,IAErBjB,C,wFChDT,IACIkB,EADJC,EAAAnf,EAAA,S,aAsBA,SAASof,IAIP,OAHKF,IACHA,EAtBJ,WACE,IAAMtI,GAAS,EAAA5T,EAAAsU,aACX+H,GAAqB,EACzB,SAASC,IACP,IAAMnB,EAAKvH,EAAOrB,UAAUtR,UAAU4K,cACtC,OAAOsP,EAAGxT,QAAQ,WAAa,GAAKwT,EAAGxT,QAAQ,UAAY,GAAKwT,EAAGxT,QAAQ,WAAa,C,CAE1F,GAAI2U,IAAY,CACd,IAAMC,EAAKC,OAAO5I,EAAOrB,UAAUtR,WACnC,GAAIsb,EAAGE,SAAS,YAAa,CAC3B,IAAuB7c,EAAwE4B,EAAA2a,EAAA,CAAxEI,EAAG7U,MAAM,YAAY,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAKuN,KAAI,SAAAyH,G,OAAOC,OAAOD,E,IAAK,GAAxFE,EAAgBhd,EAAwE,GAAjFid,EAASjd,EAAwE,GAC/Fyc,EAAqBO,EAAQ,IAAgB,KAAVA,GAAgBC,EAAQ,C,EAG/D,MAAO,CACLP,SAAUD,GAAsBC,IAChCD,qBACAS,UAAW,+CAA+C9M,KAAK4D,EAAOrB,UAAUtR,W,CAKtE8b,IAELb,C,qFC1BT,IAAAlc,EAAAhD,EAAA,SACe,SAAAggB,EAAgBC,G,IAC7Bzc,EAD6Byc,EAC7Bzc,OACAyB,EAF6Bgb,EAE7Bhb,GACAI,EAH6B4a,EAG7B5a,KAEMuR,GAAS,EAAA5T,EAAAsU,aACX4I,EAAW,KACXC,EAAiB,KACfC,EAAgB,WACf5c,IAAUA,EAAOsH,WAActH,EAAOwL,cAC3C3J,EAAK,gBACLA,EAAK,U,EAqCDgb,EAA2B,WAC1B7c,IAAUA,EAAOsH,WAActH,EAAOwL,aAC3C3J,EAAK,oB,EAEPJ,EAAG,QAAQ,WACLzB,EAAOnB,OAAOie,qBAAmD,IAA1B1J,EAAO2J,eAvC7C/c,IAAUA,EAAOsH,WAActH,EAAOwL,cAC3CkR,EAAW,IAAIK,gBAAe,SAAAC,GAC5BL,EAAiBvJ,EAAON,uBAAsB,WAC5C,IACE1I,EAEEpK,EAFFoK,MACAC,EACErK,EADFqK,OAEE4S,EAAW7S,EACX8S,EAAY7S,EAChB2S,EAAQpd,SAAQ,SAAA2W,G,IACd4G,EAAc5G,EAAd4G,eACAC,EAAW7G,EAAX6G,YACAlR,EAAMqK,EAANrK,OAEIA,GAAUA,IAAWlM,EAAOpB,KAChCqe,EAAWG,EAAcA,EAAYhT,OAAS+S,EAAe,IAAMA,GAAgBE,WACnFH,EAAYE,EAAcA,EAAY/S,QAAU8S,EAAe,IAAMA,GAAgBG,U,IAEnFL,IAAa7S,GAAS8S,IAAc7S,GACtCuS,G,QAIGW,QAAQvd,EAAOpB,KAoBxBwU,EAAOpH,iBAAiB,SAAU4Q,GAClCxJ,EAAOpH,iBAAiB,oBAAqB6Q,G,IAE/Cpb,EAAG,WAAW,WApBRkb,GACFvJ,EAAOJ,qBAAqB2J,GAE1BD,GAAYA,EAASc,WAAaxd,EAAOpB,KAC3C8d,EAASc,UAAUxd,EAAOpB,IAC1B8d,EAAW,MAiBbtJ,EAAO9C,oBAAoB,SAAUsM,GACrCxJ,EAAO9C,oBAAoB,oBAAqBuM,E,wFChEpD,IAAArd,EAAAhD,EAAA,S,aAEe,SAAAihB,EAAkBlH,G,IAC/BvW,EAD+BuW,EAC/BvW,OACAuB,EAF+BgV,EAE/BhV,aACAE,EAH+B8U,EAG/B9U,GACAI,EAJ+B0U,EAI/B1U,KAEM6b,EAAY,GACZtK,GAAS,EAAA5T,EAAAsU,aACT6J,EAAS,SAACzR,G,IAAQ0R,EAAOtf,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAG,GAC1Buf,EAAezK,EAAO0K,kBAAoB1K,EAAO2K,uBACjDrB,EAAW,IAAImB,GAAa,SAAAG,GAIhC,IAAIhe,EAAOie,oBACX,GAAyB,IAArBD,EAAUzf,OAAd,CAIA,IAAM2f,EAAiB,WACrBrc,EAAK,iBAAkBmc,EAAU,G,EAE/B5K,EAAON,sBACTM,EAAON,sBAAsBoL,GAE7B9K,EAAOT,WAAWuL,EAAgB,E,MATlCrc,EAAK,iBAAkBmc,EAAU,G,IAYrCtB,EAASa,QAAQrR,EAAQ,CACvBiS,gBAA0C,IAAvBP,EAAQO,YAAoCP,EAAQO,WACvEC,eAAwC,IAAtBR,EAAQQ,WAAmCR,EAAQQ,UACrEC,mBAAgD,IAA1BT,EAAQS,eAAuCT,EAAQS,gBAE/EX,EAAU3d,KAAK2c,E,EA0BjBnb,EAAa,CACXmb,UAAU,EACV4B,gBAAgB,EAChBC,sBAAsB,IAExB9c,EAAG,QA7BU,WACX,GAAKzB,EAAOnB,OAAO6d,SAAnB,CACA,GAAI1c,EAAOnB,OAAOyf,eAEhB,IADA,IAAME,GAAmB,EAAAnf,EAAAof,gBAAeze,EAAOpB,IACtCsJ,EAAI,EAAGA,EAAIsW,EAAiBjgB,OAAQ2J,GAAK,EAChDyV,EAAOa,EAAiBtW,IAI5ByV,EAAO3d,EAAOpB,GAAI,CAChBwf,UAAWpe,EAAOnB,OAAO0f,uBAI3BZ,EAAO3d,EAAOgL,UAAW,CACvBmT,YAAY,GAde,C,IA6B/B1c,EAAG,WAZa,WACdic,EAAU9d,SAAQ,SAAA8c,GAChBA,EAASgC,Y,IAEXhB,EAAUiB,OAAO,EAAGjB,EAAUnf,O,wFCzDlC,IAAA0C,EAAAzE,EAAA,SAAAoiB,EAAe,CACbnd,GAAA,SAAG/D,EAAQmhB,EAASC,GAClB,IAAMC,EAAO9e,KACb,IAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAW,OAAOyX,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,IAAMC,EAASF,EAAW,UAAY,OAKtC,OAJAphB,EAAOwJ,MAAM,KAAKtH,SAAQ,SAAAqf,GACnBF,EAAKle,gBAAgBoe,KAAQF,EAAKle,gBAAgBoe,GAAS,IAChEF,EAAKle,gBAAgBoe,GAAOD,GAAQH,E,IAE/BE,C,EAETpd,KAAA,SAAKjE,EAAQmhB,EAASC,GACpB,IAAMC,EAAO9e,KACb,IAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAW,OAAOyX,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,SAASG,IAAY,QAAA7gB,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACnBqgB,EAAKnd,IAAIlE,EAAQwhB,GACbA,EAAYC,uBACPD,EAAYC,eAErBN,EAAQzd,MAAM2d,EAAMvgB,E,CAGtB,OADA0gB,EAAYC,eAAiBN,EACtBE,EAAKtd,GAAG/D,EAAQwhB,EAAaJ,E,EAEtC1c,MAAA,SAAMyc,EAASC,GACb,IAAMC,EAAO9e,KACb,IAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAW,OAAOyX,EACpD,GAAuB,mBAAZF,EAAwB,OAAOE,EAC1C,IAAMC,EAASF,EAAW,UAAY,OAItC,OAHIC,EAAKje,mBAAmBqG,QAAQ0X,GAAW,GAC7CE,EAAKje,mBAAmBke,GAAQH,GAE3BE,C,EAETK,OAAA,SAAOP,GACL,IAAME,EAAO9e,KACb,IAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAW,OAAOyX,EACpD,IAAKA,EAAKje,mBAAoB,OAAOie,EACrC,IAAM/Y,EAAQ+Y,EAAKje,mBAAmBqG,QAAQ0X,GAI9C,OAHI7Y,GAAS,GACX+Y,EAAKje,mBAAmB6d,OAAO3Y,EAAO,GAEjC+Y,C,EAETnd,IAAA,SAAIlE,EAAQmhB,GACV,IAAME,EAAO9e,KACb,OAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAkByX,EAC/CA,EAAKle,iBACVnD,EAAOwJ,MAAM,KAAKtH,SAAQ,SAAAqf,QACD,IAAZJ,EACTE,EAAKle,gBAAgBoe,GAAS,GACrBF,EAAKle,gBAAgBoe,IAC9BF,EAAKle,gBAAgBoe,GAAOrf,SAAQ,SAACyf,EAAcrZ,IAC7CqZ,IAAiBR,GAAWQ,EAAaF,gBAAkBE,EAAaF,iBAAmBN,IAC7FE,EAAKle,gBAAgBoe,GAAON,OAAO3Y,EAAO,E,OAK3C+Y,GAZ2BA,C,EAcpCld,KAAA,WAAK,QAAAxD,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACH,IAGIhB,EACA4hB,EACAC,EALER,EAAO9e,KACb,IAAK8e,EAAKle,iBAAmBke,EAAKzX,UAAW,OAAOyX,EACpD,IAAKA,EAAKle,gBAAiB,OAAOke,EAIX,iBAAZvgB,EAAK,IAAmBC,MAAM0C,QAAQ3C,EAAK,KACpDd,EAASc,EAAK,GACd8gB,EAAO9gB,EAAKW,MAAM,EAAGX,EAAKD,QAC1BghB,EAAUR,IAEVrhB,EAASc,EAAK,GAAGd,OACjB4hB,EAAO9gB,EAAK,GAAG8gB,KACfC,EAAU/gB,EAAK,GAAG+gB,SAAWR,GAE/BO,EAAKE,QAAQD,GACb,IAAME,EAAchhB,MAAM0C,QAAQzD,GAAUA,EAASA,EAAOwJ,MAAM,KAalE,OAZAuY,EAAY7f,SAAQ,SAAAqf,GACdF,EAAKje,oBAAsBie,EAAKje,mBAAmBvC,QACrDwgB,EAAKje,mBAAmBlB,SAAQ,SAAAyf,GAC9BA,EAAaje,MAAMme,EAAS,CAACN,GAADrZ,OAAQ5E,EAAAC,EAAA,CAAGqe,I,IAGvCP,EAAKle,iBAAmBke,EAAKle,gBAAgBoe,IAC/CF,EAAKle,gBAAgBoe,GAAOrf,SAAQ,SAAAyf,GAClCA,EAAaje,MAAMme,EAASD,E,OAI3BP,C,sFC/FX,IAAAW,EAAAljB,EAAA,S,wGASAmjB,EAAe,CACb7W,WAAA4W,EAAA7iB,QACAkM,aAAA6W,EAAA/iB,QACAuM,iBAAAyW,EAAAhjB,QACAijB,mBAAAC,EAAAljB,QACAmjB,qBAAAC,EAAApjB,QACAmM,eAAAkX,EAAArjB,QACAiK,oBAAAqZ,EAAAtjB,QACAgK,kBAAAuZ,EAAAvjB,QACAwjB,mBAAAC,EAAAzjB,Q,oFClBF,IAAAwC,EAAA7C,EAAA,SACe,SAAA+jB,IACb,IACInW,EACAC,EAFErK,EAASC,KAGTrB,EAAKoB,EAAOpB,GAEhBwL,OADiC,IAAxBpK,EAAOnB,OAAOuL,OAAiD,OAAxBpK,EAAOnB,OAAOuL,MACtDpK,EAAOnB,OAAOuL,MAEdxL,EAAG4hB,YAGXnW,OADkC,IAAzBrK,EAAOnB,OAAOwL,QAAmD,OAAzBrK,EAAOnB,OAAOwL,OACtDrK,EAAOnB,OAAOwL,OAEdzL,EAAG6hB,aAEA,IAAVrW,GAAepK,EAAO4C,gBAA6B,IAAXyH,GAAgBrK,EAAO8C,eAKnEsH,EAAQA,EAAQsW,UAAS,EAAArhB,EAAAiM,cAAa1M,EAAI,iBAAmB,EAAG,IAAM8hB,UAAS,EAAArhB,EAAAiM,cAAa1M,EAAI,kBAAoB,EAAG,IACvHyL,EAASA,EAASqW,UAAS,EAAArhB,EAAAiM,cAAa1M,EAAI,gBAAkB,EAAG,IAAM8hB,UAAS,EAAArhB,EAAAiM,cAAa1M,EAAI,mBAAqB,EAAG,IACrHud,OAAOwE,MAAMvW,KAAQA,EAAQ,GAC7B+R,OAAOwE,MAAMtW,KAASA,EAAS,GACnCtL,OAAOsD,OAAOrC,EAAQ,CACpBoK,QACAC,SACAzC,KAAM5H,EAAO4C,eAAiBwH,EAAQC,I,qFC5B1C,IAAAhL,EAAA7C,EAAA,SACe,SAAAokB,IACb,IAAM5gB,EAASC,KACf,SAAS4gB,EAAkBC,GACzB,OAAI9gB,EAAO4C,eACFke,EAGF,CACL1W,MAAS,SACT,aAAc,cACd,iBAAkB,eAClB,cAAe,aACf,eAAgB,gBAChB,eAAgB,cAChB,gBAAiB,iBACjB2W,YAAe,gBACfD,E,CAEJ,SAASE,EAA0B3L,EAAM4L,GACvC,OAAOhM,WAAWI,EAAK9C,iBAAiBsO,EAAkBI,KAAW,E,CAEvE,IAAMpiB,EAASmB,EAAOnB,OAEpBmM,EAKEhL,EALFgL,UACAtF,EAIE1F,EAJF0F,SACAiC,EAGE3H,EAHF4H,KACA0C,EAEEtK,EAFF0J,aACA6B,EACEvL,EADFuL,SAEI2V,EAAYlhB,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,QAC7C6e,EAAuBD,EAAYlhB,EAAOsJ,QAAQ9G,OAAOjE,OAASyB,EAAOwC,OAAOjE,OAChFiE,GAAS,EAAAnD,EAAAsG,iBAAgBD,EAAU,IAA6BE,OAAzB5F,EAAOnB,OAAOgH,WAAW,mBAChEub,EAAeF,EAAYlhB,EAAOsJ,QAAQ9G,OAAOjE,OAASiE,EAAOjE,OACnEmE,EAAW,GACTD,EAAa,GACbE,EAAkB,GACpB0e,EAAexiB,EAAOyiB,mBACE,mBAAjBD,IACTA,EAAexiB,EAAOyiB,mBAAmBpiB,KAAKc,IAEhD,IAAIuhB,EAAc1iB,EAAO2iB,kBACE,mBAAhBD,IACTA,EAAc1iB,EAAO2iB,kBAAkBtiB,KAAKc,IAE9C,IAAMyhB,EAAyBzhB,EAAO0C,SAASnE,OACzCmjB,EAA2B1hB,EAAOyC,WAAWlE,OAC/CojB,EAAe9iB,EAAO8iB,aACtBC,GAAiBP,EACjBQ,EAAgB,EAChB7b,EAAQ,EACZ,QAA0B,IAAf2B,EAAX,CAG4B,iBAAjBga,GAA6BA,EAAaxa,QAAQ,MAAQ,IACnEwa,EAAe1M,WAAW0M,EAAahN,QAAQ,IAAK,KAAO,IAAMhN,GAEnE3H,EAAO8hB,aAAeH,EAGtBnf,EAAO5C,SAAQ,SAAA6F,GACT6E,EACF7E,EAAQ0E,MAAM4X,WAAa,GAE3Btc,EAAQ0E,MAAM4W,YAAc,GAE9Btb,EAAQ0E,MAAM6X,aAAe,GAC7Bvc,EAAQ0E,MAAM8X,UAAY,E,IAIxBpjB,EAAOiJ,gBAAkBjJ,EAAOqjB,WAClC,EAAA7iB,EAAA8iB,gBAAenX,EAAW,kCAAmC,KAC7D,EAAA3L,EAAA8iB,gBAAenX,EAAW,iCAAkC,KAE9D,IAMIhD,EANEoa,EAAcvjB,EAAOwjB,MAAQxjB,EAAOwjB,KAAKC,KAAO,GAAKtiB,EAAOqiB,KAC9DD,GACFpiB,EAAOqiB,KAAKE,WAAWnB,GAQzB,IAHA,IAAMoB,EAAgD,SAAzB3jB,EAAOwK,eAA4BxK,EAAOjB,aAAemB,OAAOmD,KAAKrD,EAAOjB,aAAasI,QAAO,SAAAV,GAC3H,YAAwD,IAA1C3G,EAAOjB,YAAY4H,GAAK6D,a,IACrC9K,OAAS,EACH2J,EAAI,EAAGA,EAAIkZ,EAAclZ,GAAK,EAAG,CACxCF,EAAY,EACZ,IAAI5K,OAAA,EAKJ,GAJIoF,EAAO0F,KAAI9K,EAAQoF,EAAO0F,IAC1Bka,GACFpiB,EAAOqiB,KAAKI,YAAYva,EAAG9K,EAAOgkB,EAAcP,IAE9Cre,EAAO0F,IAAyC,UAAnC,EAAA7I,EAAAiM,cAAalO,EAAO,WAArC,CAEA,GAA6B,SAAzByB,EAAOwK,cAA0B,CAC/BmZ,IACFhgB,EAAO0F,GAAGiC,MAAM0W,EAAkB,UAAa,IAEjD,IAAM6B,EAAcpQ,iBAAiBlV,GAC/BulB,EAAmBvlB,EAAM+M,MAAMoK,UAC/BqO,EAAyBxlB,EAAM+M,MAAMqK,gBAO3C,GANImO,IACFvlB,EAAM+M,MAAMoK,UAAY,QAEtBqO,IACFxlB,EAAM+M,MAAMqK,gBAAkB,QAE5B3V,EAAOgkB,aACT7a,EAAYhI,EAAO4C,gBAAiB,EAAAvD,EAAAyjB,kBAAiB1lB,EAAO,SAAS,IAAQ,EAAAiC,EAAAyjB,kBAAiB1lB,EAAO,UAAU,OAC1G,CAEL,IAAMgN,EAAQ4W,EAA0B0B,EAAa,SAC/CK,EAAc/B,EAA0B0B,EAAa,gBACrDM,EAAehC,EAA0B0B,EAAa,iBACtDX,EAAaf,EAA0B0B,EAAa,eACpD3B,EAAcC,EAA0B0B,EAAa,gBACrDO,EAAYP,EAAYnQ,iBAAiB,cAC/C,GAAI0Q,GAA2B,eAAdA,EACfjb,EAAYoC,EAAQ2X,EAAahB,MAC5B,CACL,IACEP,EAEEpjB,EAFFojB,YAGFxY,EAAYoC,EAAQ2Y,EAAcC,EAAejB,EAAahB,GAD1D3jB,EADF4c,YAEyFwG,E,EAG3FmC,IACFvlB,EAAM+M,MAAMoK,UAAYoO,GAEtBC,IACFxlB,EAAM+M,MAAMqK,gBAAkBoO,GAE5B/jB,EAAOgkB,eAAc7a,EAAYxE,KAAK0f,MAAMlb,G,MAEhDA,GAAaL,GAAc9I,EAAOwK,cAAgB,GAAKsY,GAAgB9iB,EAAOwK,cAC1ExK,EAAOgkB,eAAc7a,EAAYxE,KAAK0f,MAAMlb,IAC5CxF,EAAO0F,KACT1F,EAAO0F,GAAGiC,MAAM0W,EAAkB,UAAY,GAAajb,OAAVoC,EAAU,OAG3DxF,EAAO0F,KACT1F,EAAO0F,GAAGD,gBAAkBD,GAE9BrF,EAAgB5C,KAAKiI,GACjBnJ,EAAOiJ,gBACT8Z,EAAgBA,EAAgB5Z,EAAY,EAAI6Z,EAAgB,EAAIF,EAC9C,IAAlBE,GAA6B,IAAN3Z,IAAS0Z,EAAgBA,EAAgBja,EAAa,EAAIga,GAC3E,IAANzZ,IAAS0Z,EAAgBA,EAAgBja,EAAa,EAAIga,GAC1Dne,KAAK2f,IAAIvB,GAAiB,OAAUA,EAAgB,GACpD/iB,EAAOgkB,eAAcjB,EAAgBpe,KAAK0f,MAAMtB,IAChD5b,EAAQnH,EAAOukB,gBAAmB,GAAG1gB,EAAS3C,KAAK6hB,GACvDnf,EAAW1C,KAAK6hB,KAEZ/iB,EAAOgkB,eAAcjB,EAAgBpe,KAAK0f,MAAMtB,KAC/C5b,EAAQxC,KAAK+C,IAAIvG,EAAOnB,OAAOwkB,mBAAoBrd,IAAUhG,EAAOnB,OAAOukB,gBAAmB,GAAG1gB,EAAS3C,KAAK6hB,GACpHnf,EAAW1C,KAAK6hB,GAChBA,EAAgBA,EAAgB5Z,EAAY2Z,GAE9C3hB,EAAO8hB,aAAe9Z,EAAY2Z,EAClCE,EAAgB7Z,EAChBhC,GAAS,CArEmD,C,CAmF9D,GAZAhG,EAAO8hB,YAActe,KAAKgD,IAAIxG,EAAO8hB,YAAana,GAAc4Z,EAC5DjX,GAAOiB,IAA+B,UAAlB1M,EAAOykB,QAAwC,cAAlBzkB,EAAOykB,UAC1DtY,EAAUb,MAAMC,MAAQ,GAA4CxE,OAAzC5F,EAAO8hB,YAAcjjB,EAAO8iB,aAAa,OAElE9iB,EAAO0kB,iBACTvY,EAAUb,MAAM0W,EAAkB,UAAY,GAA4Cjb,OAAzC5F,EAAO8hB,YAAcjjB,EAAO8iB,aAAa,OAExFS,GACFpiB,EAAOqiB,KAAKmB,kBAAkBxb,EAAWtF,EAAUme,IAIhDhiB,EAAOiJ,eAAgB,CAE1B,IADA,IAAM2b,EAAgB,GACbtb,EAAI,EAAGA,EAAIzF,EAASnE,OAAQ4J,GAAK,EAAG,CAC3C,IAAIub,EAAiBhhB,EAASyF,GAC1BtJ,EAAOgkB,eAAca,EAAiBlgB,KAAK0f,MAAMQ,IACjDhhB,EAASyF,IAAMnI,EAAO8hB,YAAcna,GACtC8b,EAAc1jB,KAAK2jB,E,CAGvBhhB,EAAW+gB,EACPjgB,KAAK0f,MAAMljB,EAAO8hB,YAAcna,GAAcnE,KAAK0f,MAAMxgB,EAASA,EAASnE,OAAS,IAAM,GAC5FmE,EAAS3C,KAAKC,EAAO8hB,YAAcna,E,CAGvC,GAAIuZ,GAAariB,EAAOvB,KAAM,CAC5B,IAAMsK,EAAOjF,EAAgB,GAAKgf,EAClC,GAAI9iB,EAAOukB,eAAiB,EAG1B,IAFA,IAAMO,EAASngB,KAAKogB,MAAM5jB,EAAOsJ,QAAQsC,aAAe5L,EAAOsJ,QAAQua,aAAehlB,EAAOukB,gBACvFU,EAAYlc,EAAO/I,EAAOukB,eACvBhb,EAAI,EAAGA,EAAIub,EAAQvb,GAAK,EAC/B1F,EAAS3C,KAAK2C,EAASA,EAASnE,OAAS,GAAKulB,GAGlD,IAAK,IAAIxb,EAAI,EAAGA,EAAItI,EAAOsJ,QAAQsC,aAAe5L,EAAOsJ,QAAQua,YAAavb,GAAK,EACnD,IAA1BzJ,EAAOukB,gBACT1gB,EAAS3C,KAAK2C,EAASA,EAASnE,OAAS,GAAKqJ,GAEhDnF,EAAW1C,KAAK0C,EAAWA,EAAWlE,OAAS,GAAKqJ,GACpD5H,EAAO8hB,aAAela,C,CAI1B,GADwB,IAApBlF,EAASnE,SAAcmE,EAAW,CAAC,IACX,IAAxB7D,EAAO8iB,aAAoB,CAC7B,IAAMoC,EAAM/jB,EAAO4C,gBAAkB0H,EAAM,aAAeuW,EAAkB,eAC5Ere,EAAO0D,QAAO,SAAC8d,EAAGC,GAChB,QAAKplB,EAAOqjB,UAAWrjB,EAAOvB,OAC1B2mB,IAAezhB,EAAOjE,OAAS,C,IAIlCqB,SAAQ,SAAA6F,GACTA,EAAQ0E,MAAM4Z,GAAO,GAAgBne,OAAb+b,EAAa,K,IAGzC,GAAI9iB,EAAOiJ,gBAAkBjJ,EAAOqlB,qBAAsB,CACxD,IAAIC,EAAgB,EACpBxhB,EAAgB/C,SAAQ,SAAAwkB,GACtBD,GAAiBC,GAAkBvlB,EAAO8iB,aAAe9iB,EAAO8iB,aAAe,E,IAGjF,IAAM0C,GADNF,GAAiBtlB,EAAO8iB,cACQha,EAChCjF,EAAWA,EAAS+R,KAAI,SAAA6P,GACtB,OAAIA,EAAO,GAAWjD,EAClBiD,EAAOD,EAAgBA,EAAU9C,EAC9B+C,C,IAGX,GAAIzlB,EAAO0lB,yBAA0B,CACnC,IAAIC,EAAgB,EAKpB,GAJA7hB,EAAgB/C,SAAQ,SAAAwkB,GACtBI,GAAiBJ,GAAkBvlB,EAAO8iB,aAAe9iB,EAAO8iB,aAAe,E,KAEjF6C,GAAiB3lB,EAAO8iB,cACJha,EAAY,CAC9B,IAAM8c,GAAmB9c,EAAa6c,GAAiB,EACvD9hB,EAAS9C,SAAQ,SAAC0kB,EAAMI,GACtBhiB,EAASgiB,GAAaJ,EAAOG,C,IAE/BhiB,EAAW7C,SAAQ,SAAC0kB,EAAMI,GACxBjiB,EAAWiiB,GAAaJ,EAAOG,C,KAUrC,GANA1lB,OAAOsD,OAAOrC,EAAQ,CACpBwC,SACAE,WACAD,aACAE,oBAEE9D,EAAOiJ,gBAAkBjJ,EAAOqjB,UAAYrjB,EAAOqlB,qBAAsB,EAC3E,EAAA7kB,EAAA8iB,gBAAenX,EAAW,kCAAmC,GAAgBpF,QAAZlD,EAAS,GAAG,QAC7E,EAAArD,EAAA8iB,gBAAenX,EAAW,iCAAkC,GAAqEpF,OAAlE5F,EAAO4H,KAAO,EAAIjF,EAAgBA,EAAgBpE,OAAS,GAAK,EAAE,OACjI,IAAMomB,GAAiB3kB,EAAO0C,SAAS,GACjCkiB,IAAmB5kB,EAAOyC,WAAW,GAC3CzC,EAAO0C,SAAW1C,EAAO0C,SAAS+R,KAAI,SAAAoQ,G,OAAKA,EAAIF,C,IAC/C3kB,EAAOyC,WAAazC,EAAOyC,WAAWgS,KAAI,SAAAoQ,G,OAAKA,EAAID,E,IAerD,GAbIxD,IAAiBD,GACnBnhB,EAAO6B,KAAK,sBAEVa,EAASnE,SAAWkjB,IAClBzhB,EAAOnB,OAAO2K,eAAexJ,EAAOlC,gBACxCkC,EAAO6B,KAAK,yBAEVY,EAAWlE,SAAWmjB,GACxB1hB,EAAO6B,KAAK,0BAEVhD,EAAOimB,qBACT9kB,EAAO8f,uBAEJoB,GAAcriB,EAAOqjB,SAA8B,UAAlBrjB,EAAOykB,QAAwC,SAAlBzkB,EAAOykB,QAAoB,CAC5F,IAAMyB,GAAsB,GAAiCnf,OAA9B/G,EAAOuI,uBAAuB,mBACvD4d,GAA6BhlB,EAAOpB,GAAGmL,UAAUkb,SAASF,IAC5D3D,GAAgBviB,EAAOqmB,wBACpBF,IAA4BhlB,EAAOpB,GAAGmL,UAAUE,IAAI8a,IAChDC,IACThlB,EAAOpB,GAAGmL,UAAUC,OAAO+a,G,CArO7B,C,uCCpDW,SAAAI,EAA0B7e,GACvC,IAII4B,EAJElI,EAASC,KACTmlB,EAAe,GACflE,EAAYlhB,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QACtD4a,EAAY,EAEK,iBAAV5W,EACTtG,EAAOqlB,cAAc/e,IACF,IAAVA,GACTtG,EAAOqlB,cAAcrlB,EAAOnB,OAAOyH,OAErC,IAAMgf,EAAkB,SAAAtf,GACtB,OAAIkb,EACKlhB,EAAOwC,OAAOxC,EAAOulB,oBAAoBvf,IAE3ChG,EAAOwC,OAAOwD,E,EAGvB,GAAoC,SAAhChG,EAAOnB,OAAOwK,eAA4BrJ,EAAOnB,OAAOwK,cAAgB,EAC1E,GAAIrJ,EAAOnB,OAAOiJ,gBACf9H,EAAOwlB,eAAiB,IAAI5lB,SAAQ,SAAAxC,GACnCgoB,EAAarlB,KAAK3C,E,SAGpB,IAAK8K,EAAI,EAAGA,EAAI1E,KAAKogB,KAAK5jB,EAAOnB,OAAOwK,eAAgBnB,GAAK,EAAG,CAC9D,IAAMud,EAAQzlB,EAAO+C,YAAcmF,EACnC,GAAIud,EAAQzlB,EAAOwC,OAAOjE,SAAW2iB,EAAW,MAChDkE,EAAarlB,KAAKulB,EAAgBG,G,MAItCL,EAAarlB,KAAKulB,EAAgBtlB,EAAO+C,cAI3C,IAAKmF,EAAI,EAAGA,EAAIkd,EAAa7mB,OAAQ2J,GAAK,EACxC,QAA+B,IAApBkd,EAAald,GAAoB,CAC1C,IAAMmC,EAAS+a,EAAald,GAAGwd,aAC/BxI,EAAY7S,EAAS6S,EAAY7S,EAAS6S,C,EAK1CA,GAA2B,IAAdA,KAAiBld,EAAOgL,UAAUb,MAAME,OAAS,GAAazE,OAAVsX,EAAU,M,oFC3ClE,SAAAyI,IAKb,IAJA,IAAM3lB,EAASC,KACTuC,EAASxC,EAAOwC,OAEhBojB,EAAc5lB,EAAO4K,UAAY5K,EAAO4C,eAAiB5C,EAAOgL,UAAU6a,WAAa7lB,EAAOgL,UAAU8a,UAAY,EACjH5d,EAAI,EAAGA,EAAI1F,EAAOjE,OAAQ2J,GAAK,EACtC1F,EAAO0F,GAAG6d,mBAAqB/lB,EAAO4C,eAAiBJ,EAAO0F,GAAG2d,WAAarjB,EAAO0F,GAAG4d,WAAaF,EAAc5lB,EAAOuD,uB,oFCN/G,SAAAyiB,I,IAA8BhpB,EAAAsB,UAAAC,OAAA,YAAAD,UAAA,GAAuCA,UAAA,GAA3B2B,MAAQA,KAAKjD,WAAa,EAC3EgD,EAASC,KACTpB,EAASmB,EAAOnB,OAEpB2D,EAGExC,EAHFwC,OACA8H,EAEEtK,EAFF0J,aACAhH,EACE1C,EADF0C,SAEF,GAAsB,IAAlBF,EAAOjE,OAAX,MAC2C,IAAhCiE,EAAO,GAAGujB,mBAAmC/lB,EAAO8f,qBAC/D,IAAImG,GAAgBjpB,EAChBsN,IAAK2b,EAAejpB,GAGxBwF,EAAO5C,SAAQ,SAAA6F,GACbA,EAAQsE,UAAUC,OAAOnL,EAAO6N,kB,IAElC1M,EAAOkmB,qBAAuB,GAC9BlmB,EAAOwlB,cAAgB,GACvB,IAAK,IAAItd,EAAI,EAAGA,EAAI1F,EAAOjE,OAAQ2J,GAAK,EAAG,CACzC,IAAM9K,EAAQoF,EAAO0F,GACjBie,EAAc/oB,EAAM2oB,kBACpBlnB,EAAOqjB,SAAWrjB,EAAOiJ,iBAC3Bqe,GAAe3jB,EAAO,GAAGujB,mBAE3B,IAAMK,GAAiBH,GAAgBpnB,EAAOiJ,eAAiB9H,EAAOyG,eAAiB,GAAK0f,IAAgB/oB,EAAM6K,gBAAkBpJ,EAAO8iB,cACrI0E,GAAyBJ,EAAevjB,EAAS,IAAM7D,EAAOiJ,eAAiB9H,EAAOyG,eAAiB,GAAK0f,IAAgB/oB,EAAM6K,gBAAkBpJ,EAAO8iB,cAC3J2E,IAAgBL,EAAeE,GAC/BI,EAAaD,EAActmB,EAAO2C,gBAAgBuF,GAClDse,EAAYF,GAAe,GAAKA,EAActmB,EAAO4H,KAAO,GAAK2e,EAAa,GAAKA,GAAcvmB,EAAO4H,MAAQ0e,GAAe,GAAKC,GAAcvmB,EAAO4H,KAC3J4e,IACFxmB,EAAOwlB,cAAczlB,KAAK3C,GAC1B4C,EAAOkmB,qBAAqBnmB,KAAKmI,GACjC1F,EAAO0F,GAAG6B,UAAUE,IAAIpL,EAAO6N,oBAEjCtP,EAAMgG,SAAWkH,GAAO8b,EAAgBA,EACxChpB,EAAMqpB,iBAAmBnc,GAAO+b,EAAwBA,C,CA5BjC,C,oFCRZ,SAAAK,EAAwB1pB,GACrC,IAAMgD,EAASC,KACf,QAAyB,IAAdjD,EAA2B,CACpC,IAAM2pB,EAAa3mB,EAAO0J,cAAe,EAAK,EAE9C1M,EAAYgD,GAAUA,EAAOhD,WAAagD,EAAOhD,UAAY2pB,GAAc,C,CAE7E,IAAM9nB,EAASmB,EAAOnB,OAChB+nB,EAAiB5mB,EAAO2G,eAAiB3G,EAAOyG,eAEpDrD,EAIEpD,EAJFoD,SACAH,EAGEjD,EAHFiD,YACAC,EAEElD,EAFFkD,MACA2jB,EACE7mB,EADF6mB,aAEIC,EAAe7jB,EACf8jB,EAAS7jB,EACf,GAAuB,IAAnB0jB,EACFxjB,EAAW,EACXH,GAAc,EACdC,GAAQ,MACH,CACLE,GAAYpG,EAAYgD,EAAOyG,gBAAkBmgB,EACjD,IAAMI,EAAqBxjB,KAAK2f,IAAInmB,EAAYgD,EAAOyG,gBAAkB,EACnEwgB,EAAezjB,KAAK2f,IAAInmB,EAAYgD,EAAO2G,gBAAkB,EACnE1D,EAAc+jB,GAAsB5jB,GAAY,EAChDF,EAAQ+jB,GAAgB7jB,GAAY,EAChC4jB,IAAoB5jB,EAAW,GAC/B6jB,IAAc7jB,EAAW,E,CAE/B,GAAIvE,EAAOvB,KAAM,CACf,IAAMwI,EAAkB9F,EAAOulB,oBAAoB,GAC7C2B,EAAiBlnB,EAAOulB,oBAAoBvlB,EAAOwC,OAAOjE,OAAS,GACnE4oB,EAAsBnnB,EAAOyC,WAAWqD,GACxCshB,EAAqBpnB,EAAOyC,WAAWykB,GACvCG,EAAernB,EAAOyC,WAAWzC,EAAOyC,WAAWlE,OAAS,GAC5D+oB,EAAe9jB,KAAK2f,IAAInmB,IAE5B6pB,EADES,GAAgBH,GACFG,EAAeH,GAAuBE,GAEtCC,EAAeD,EAAeD,GAAsBC,GAEnD,IAAGR,GAAgB,E,CAExC9nB,OAAOsD,OAAOrC,EAAQ,CACpBoD,WACAyjB,eACA5jB,cACAC,WAEErE,EAAOimB,qBAAuBjmB,EAAOiJ,gBAAkBjJ,EAAOsK,aAAYnJ,EAAOggB,qBAAqBhjB,GACtGiG,IAAgB6jB,GAClB9mB,EAAO6B,KAAK,yBAEVqB,IAAU6jB,GACZ/mB,EAAO6B,KAAK,oBAEVilB,IAAiB7jB,GAAe8jB,IAAW7jB,IAC7ClD,EAAO6B,KAAK,YAEd7B,EAAO6B,KAAK,WAAYuB,E,kIC5D1B,IAAA/D,EAAA7C,EAAA,SACe,SAAA+qB,IACb,IAcIC,EAdExnB,EAASC,KAEbuC,EAIExC,EAJFwC,OACA3D,EAGEmB,EAHFnB,OACA6G,EAEE1F,EAFF0F,SACA3C,EACE/C,EADF+C,YAEIme,EAAYlhB,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,QAC7CmlB,EAAmB,SAAA9P,GACvB,OAAO,EAAAtY,EAAAsG,iBAAgBD,EAAU,IAAwBE,OAApB/G,EAAOgH,YAAsCD,OAAzB+R,EAAS,kBAAyB/R,OAAT+R,IAAY,E,EAMhG,GAJAnV,EAAO5C,SAAQ,SAAA6F,GACbA,EAAQsE,UAAUC,OAAOnL,EAAO8N,iBAAkB9N,EAAO+N,eAAgB/N,EAAOgO,e,IAG9EqU,EACF,GAAIriB,EAAOvB,KAAM,CACf,IAAI2mB,EAAalhB,EAAc/C,EAAOsJ,QAAQsC,aAC1CqY,EAAa,IAAGA,EAAajkB,EAAOsJ,QAAQ9G,OAAOjE,OAAS0lB,GAC5DA,GAAcjkB,EAAOsJ,QAAQ9G,OAAOjE,SAAQ0lB,GAAcjkB,EAAOsJ,QAAQ9G,OAAOjE,QACpFipB,EAAcC,EAAiB,6BAAwC7hB,OAAXqe,EAAW,M,MAEvEuD,EAAcC,EAAiB,6BAAyC7hB,OAAZ7C,EAAY,YAG1EykB,EAAchlB,EAAOO,GAEvB,GAAIykB,EAAa,CAEfA,EAAYzd,UAAUE,IAAIpL,EAAO8N,kBAGjC,IAAI+a,GAAY,EAAAroB,EAAAsoB,gBAAeH,EAAa,IAAsB5hB,OAAlB/G,EAAOgH,WAAW,mBAAiB,GAC/EhH,EAAOvB,OAASoqB,IAClBA,EAAYllB,EAAO,IAEjBklB,GACFA,EAAU3d,UAAUE,IAAIpL,EAAO+N,gBAGjC,IAAIgb,GAAY,EAAAvoB,EAAAwoB,gBAAeL,EAAa,IAAsB5hB,OAAlB/G,EAAOgH,WAAW,mBAAiB,GAC/EhH,EAAOvB,KAGPsqB,GACFA,EAAU7d,UAAUE,IAAIpL,EAAOgO,e,CAGnC7M,EAAO8nB,mB,qFClDT,IAAAlf,EAAApM,EAAA,SAyBe,SAAAurB,EAA2BC,GACxC,IAUItD,EAgCAuD,EA1CEjoB,EAASC,KACTjD,EAAYgD,EAAO0J,aAAe1J,EAAOhD,WAAagD,EAAOhD,UAEjE0F,EAKE1C,EALF0C,SACA7D,EAIEmB,EAJFnB,OACAqpB,EAGEloB,EAHF+C,YACAolB,EAEEnoB,EAFFgD,UACAolB,EACEpoB,EADF0kB,UAEE3hB,EAAcilB,EAEZK,EAAsB,SAAAC,GAC1B,IAAItlB,EAAYslB,EAAStoB,EAAOsJ,QAAQsC,aAOxC,OANI5I,EAAY,IACdA,EAAYhD,EAAOsJ,QAAQ9G,OAAOjE,OAASyE,GAEzCA,GAAahD,EAAOsJ,QAAQ9G,OAAOjE,SACrCyE,GAAahD,EAAOsJ,QAAQ9G,OAAOjE,QAE9ByE,C,EAKT,QAH2B,IAAhBD,IACTA,EA/CG,SAAmC/C,GAOxC,IANA,IAKI+C,EAJFN,EAEEzC,EAFFyC,WACA5D,EACEmB,EADFnB,OAEI7B,EAAYgD,EAAO0J,aAAe1J,EAAOhD,WAAagD,EAAOhD,UAE1DkL,EAAI,EAAGA,EAAIzF,EAAWlE,OAAQ2J,GAAK,OACT,IAAtBzF,EAAWyF,EAAI,GACpBlL,GAAayF,EAAWyF,IAAMlL,EAAYyF,EAAWyF,EAAI,IAAMzF,EAAWyF,EAAI,GAAKzF,EAAWyF,IAAM,EACtGnF,EAAcmF,EACLlL,GAAayF,EAAWyF,IAAMlL,EAAYyF,EAAWyF,EAAI,KAClEnF,EAAcmF,EAAI,GAEXlL,GAAayF,EAAWyF,KACjCnF,EAAcmF,GAOlB,OAHIrJ,EAAO0pB,sBACLxlB,EAAc,QAA4B,IAAhBA,KAA6BA,EAAc,GAEpEA,C,CAyBSylB,CAA0BxoB,IAEtC0C,EAASyE,QAAQnK,IAAc,EACjC0nB,EAAYhiB,EAASyE,QAAQnK,OACxB,CACL,IAAMyrB,EAAOjlB,KAAK+C,IAAI1H,EAAOwkB,mBAAoBtgB,GACjD2hB,EAAY+D,EAAOjlB,KAAK0f,OAAOngB,EAAc0lB,GAAQ5pB,EAAOukB,e,CAG9D,GADIsB,GAAahiB,EAASnE,SAAQmmB,EAAYhiB,EAASnE,OAAS,GAC5DwE,IAAgBmlB,EAQlB,OAPIxD,IAAc0D,IAChBpoB,EAAO0kB,UAAYA,EACnB1kB,EAAO6B,KAAK,yBAEV7B,EAAOnB,OAAOvB,MAAQ0C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,UAChEtC,EAAOgD,UAAYqlB,EAAoBtlB,KAOzCklB,EADEjoB,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,SAAWzD,EAAOvB,KACzC+qB,EAAoBtlB,GACvB/C,EAAOwC,OAAOO,GACX2d,SAAS1gB,EAAOwC,OAAOO,GAAaoD,aAAa,4BAA8BpD,EAAa,IAE5FA,EAEdhE,OAAOsD,OAAOrC,EAAQ,CACpBooB,oBACA1D,YACAyD,oBACAnlB,UAAAilB,EACAC,gBACAnlB,gBAEE/C,EAAOwL,cACT,EAAA5C,EAAAuD,SAAQnM,GAEVA,EAAO6B,KAAK,qBACZ7B,EAAO6B,KAAK,mBACRsmB,IAAsBF,GACxBjoB,EAAO6B,KAAK,oBAEV7B,EAAOwL,aAAexL,EAAOnB,OAAOgN,qBACtC7L,EAAO6B,KAAK,c,gJC7FT,IAAM6mB,EAAuB,SAAC1oB,EAAQ0I,GAC3C,GAAK1I,IAAUA,EAAOsH,WAActH,EAAOnB,OAA3C,CACA,IACM4G,EAAUiD,EAAQigB,QADI3oB,EAAO4K,UAAa,eAAgB,IAA6BhF,OAAzB5F,EAAOnB,OAAOgH,aAElF,GAAIJ,EAAS,CACX,IAAMmjB,EAASnjB,EAAQiF,cAAc,IAAqC9E,OAAjC5F,EAAOnB,OAAOgqB,qBACnDD,GAAQA,EAAO5e,Q,CAL8B,C,EAQ/C8e,EAAS,SAAC9oB,EAAQgG,GACtB,GAAKhG,EAAOwC,OAAOwD,GAAnB,CACA,IAAM0C,EAAU1I,EAAOwC,OAAOwD,GAAO0E,cAAc,oBAC/ChC,GAASA,EAAQ+D,gBAAgB,UAFV,C,EAIhBsc,EAAU,SAAA/oB,GACrB,GAAKA,IAAUA,EAAOsH,WAActH,EAAOnB,OAA3C,CACA,IAAImqB,EAAShpB,EAAOnB,OAAOoqB,oBACrBxZ,EAAMzP,EAAOwC,OAAOjE,OAC1B,GAAKkR,GAAQuZ,KAAUA,EAAS,GAAhC,CACAA,EAASxlB,KAAK+C,IAAIyiB,EAAQvZ,GAC1B,IAAMpG,EAAgD,SAAhCrJ,EAAOnB,OAAOwK,cAA2BrJ,EAAOkpB,uBAAyB1lB,KAAKogB,KAAK5jB,EAAOnB,OAAOwK,eACjHtG,EAAc/C,EAAO+C,YACrBomB,EAAuBpmB,EAAcsG,EAAgB,EAC3D,GAAIrJ,EAAOnB,OAAOuqB,OAChB,IAAK,IAAIlhB,EAAInF,EAAcimB,EAAQ9gB,GAAKihB,EAAuBH,EAAQ9gB,GAAK,EAAG,CAC7E,IAAMlF,GAAakF,EAAIuH,EAAMA,GAAOA,EAChCzM,IAAcD,GAAeC,EAAYmmB,GAAsBL,EAAO9oB,EAAQgD,E,MAGpF,IAAK,IAAImF,EAAI3E,KAAKgD,IAAI2iB,EAAuBH,EAAQ,GAAI7gB,GAAK3E,KAAK+C,IAAI4iB,EAAuBH,EAAQvZ,EAAM,GAAItH,GAAK,EAC/GA,IAAMpF,GAAeoF,EAAIghB,GAAsBL,EAAO9oB,EAAQmI,EAZnC,CAHgB,C,uCCftC,SAAAkhB,EAA4Bpd,GACzC,IAIIgY,EAJEjkB,EAASC,KACTpB,EAASmB,EAAOnB,OAChBzB,EAAQ6O,EAAE0c,QAAQ,IAAsB/iB,OAAlB/G,EAAOgH,WAAW,mBAC1CyjB,GAAa,EAEjB,GAAIlsB,EACF,IAAK,IAAI8K,EAAI,EAAGA,EAAIlI,EAAOwC,OAAOjE,OAAQ2J,GAAK,EAC7C,GAAIlI,EAAOwC,OAAO0F,KAAO9K,EAAO,CAC9BksB,GAAa,EACbrF,EAAa/b,EACb,K,CAIN,IAAI9K,IAASksB,EAUX,OAFAtpB,EAAOupB,kBAAezlB,OACtB9D,EAAOwpB,kBAAe1lB,GARtB9D,EAAOupB,aAAensB,EAClB4C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAC1CtC,EAAOwpB,aAAe9I,SAAStjB,EAAM+I,aAAa,2BAA4B,IAE9EnG,EAAOwpB,aAAevF,EAOtBplB,EAAO4qB,0BAA+C3lB,IAAxB9D,EAAOwpB,cAA8BxpB,EAAOwpB,eAAiBxpB,EAAO+C,aACpG/C,EAAOypB,qB,kIC5BX,IAAAC,EAAAltB,EAAA,S,oDAKAmtB,EAAe,CACbC,aAAAF,EAAA7sB,QACAqM,aAAA2gB,EAAAhtB,QACA4J,aAAAqjB,EAAAjtB,QACA8J,aAAAojB,EAAAltB,QACA+J,YAAAojB,EAAAntB,Q,oFCVF,IAAAwC,EAAA7C,EAAA,SACe,SAAAytB,I,IAA4B7V,EAAA9V,UAAAC,OAAA,YAAAD,UAAA,GAAsCA,UAAA,GAA/B2B,KAAK2C,eAAiB,IAAM,IACtE5C,EAASC,KAEbpB,EAIEmB,EAJFnB,OACAyL,EAGEtK,EAHF0J,aACA1M,EAEEgD,EAFFhD,UACAgO,EACEhL,EADFgL,UAEF,GAAInM,EAAOqrB,iBACT,OAAO5f,GAAOtN,EAAYA,EAE5B,GAAI6B,EAAOqjB,QACT,OAAOllB,EAET,IAAImH,GAAmB,EAAA9E,EAAAuqB,cAAa5e,EAAWoJ,GAG/C,OAFAjQ,GAAoBnE,EAAOuD,wBACvB+G,IAAKnG,GAAoBA,GACtBA,GAAoB,C,uCClBd,SAAAgmB,EAAsBntB,EAAWotB,GAC9C,IAAMpqB,EAASC,KAEbqK,EAIEtK,EAJF0J,aACA7K,EAGEmB,EAHFnB,OACAmM,EAEEhL,EAFFgL,UACA5H,EACEpD,EADFoD,SAEEinB,EAAI,EACJC,EAAI,EAEJtqB,EAAO4C,eACTynB,EAAI/f,GAAOtN,EAAYA,EAEvBstB,EAAIttB,EAEF6B,EAAOgkB,eACTwH,EAAI7mB,KAAK0f,MAAMmH,GACfC,EAAI9mB,KAAK0f,MAAMoH,IAEjBtqB,EAAOmD,kBAAoBnD,EAAOhD,UAClCgD,EAAOhD,UAAYgD,EAAO4C,eAAiBynB,EAAIC,EAC3CzrB,EAAOqjB,QACTlX,EAAUhL,EAAO4C,eAAiB,aAAe,aAAe5C,EAAO4C,gBAAkBynB,GAAKC,EACpFzrB,EAAOqrB,mBACblqB,EAAO4C,eACTynB,GAAKrqB,EAAOuD,wBAEZ+mB,GAAKtqB,EAAOuD,wBAEdyH,EAAUb,MAAMoK,UAAY,eAAuB3O,OAARykB,EAAE,QAAczkB,OAAR0kB,EAAE,QAAQ1kB,OApBrD,EAoBqD,QAK/D,IAAMghB,EAAiB5mB,EAAO2G,eAAiB3G,EAAOyG,gBAC/B,IAAnBmgB,EACY,GAEC5pB,EAAYgD,EAAOyG,gBAAkBmgB,KAElCxjB,GAClBpD,EAAOgJ,eAAehM,GAExBgD,EAAO6B,KAAK,eAAgB7B,EAAOhD,UAAWotB,E,oFC5CjC,SAAAG,IACb,OAAQtqB,KAAKyC,SAAS,E,oFCDT,SAAA8nB,IACb,OAAQvqB,KAAKyC,SAASzC,KAAKyC,SAASnE,OAAS,E,kICD/C,IAAA8U,EAAA7W,EAAA,S,aACe,SAAAiuB,I,IAAqBztB,EAAAsB,UAAAC,OAAA,YAAAD,UAAA,GAAaA,UAAA,GAAD,EAAGgI,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEqsB,IAAArsB,UAAAC,OAAA,YAAAD,UAAA,KAAsBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UAC3H0B,EAASC,KAEbpB,EAEEmB,EAFFnB,OACAmM,EACEhL,EADFgL,UAEF,GAAIhL,EAAOsD,WAAazE,EAAOgsB,+BAC7B,OAAO,EAET,IAEIlhB,EAFElD,EAAezG,EAAOyG,eACtBE,EAAe3G,EAAO2G,eAM5B,GAJiDgD,EAA7CghB,GAAmB3tB,EAAYyJ,EAA6BA,EAAsBkkB,GAAmB3tB,EAAY2J,EAA6BA,EAAiC3J,EAGnLgD,EAAOgJ,eAAeW,GAClB9K,EAAOqjB,QAAS,CAClB,IAAM4I,EAAM9qB,EAAO4C,eACnB,GAAc,IAAV0D,EACF0E,EAAU8f,EAAM,aAAe,cAAgBnhB,MAC1C,CACL,IAAK3J,EAAOG,QAAQga,aAMlB,OALA,EAAA9a,EAAA0rB,sBAAqB,CACnB/qB,SACAyW,gBAAiB9M,EACjB+M,KAAMoU,EAAM,OAAS,SAEhB,E,IAEUE,EAAnBhgB,EAAUuM,UAASyT,EAGlB,GAFChqB,EAAAqS,EAAA,CADiB2X,EAChBF,EAAM,OAAS,OAASnhB,GACzB3I,EAAAqS,EAAA,CAFiB2X,EAEjB,WAAU,UAFOA,G,CAKrB,OAAO,C,CAiCT,OA/Bc,IAAV1kB,GACFtG,EAAOqlB,cAAc,GACrBrlB,EAAOkJ,aAAaS,GAChB+gB,IACF1qB,EAAO6B,KAAK,wBAAyByE,EAAOskB,GAC5C5qB,EAAO6B,KAAK,oBAGd7B,EAAOqlB,cAAc/e,GACrBtG,EAAOkJ,aAAaS,GAChB+gB,IACF1qB,EAAO6B,KAAK,wBAAyByE,EAAOskB,GAC5C5qB,EAAO6B,KAAK,oBAET7B,EAAOsD,YACVtD,EAAOsD,WAAY,EACdtD,EAAOirB,oCACVjrB,EAAOirB,kCAAoC,SAAuBhf,GAC3DjM,IAAUA,EAAOsH,WAClB2E,EAAEC,SAAWjM,OACjBD,EAAOgL,UAAUsF,oBAAoB,gBAAiBtQ,EAAOirB,mCAC7DjrB,EAAOirB,kCAAoC,YACpCjrB,EAAOirB,kCACVP,GACF1qB,EAAO6B,KAAK,iB,GAIlB7B,EAAOgL,UAAUgB,iBAAiB,gBAAiBhM,EAAOirB,sCAGvD,C,qFCpET,IAAAC,EAAA1uB,EAAA,S,0BAGA2uB,EAAe,CACb9F,cAAA6F,EAAAruB,QACAuuB,gBAAAC,EAAAxuB,QACAyuB,cAAAC,EAAA1uB,Q,sCCNa,SAAA2uB,EAAuB3U,EAAUuT,GAC9C,IAAMpqB,EAASC,KACVD,EAAOnB,OAAOqjB,UACjBliB,EAAOgL,UAAUb,MAAMshB,mBAAqB,GAAY7lB,OAATiR,EAAS,OAE1D7W,EAAO6B,KAAK,gBAAiBgV,EAAUuT,E,kICLzC,IAAAsB,EAAAlvB,EAAA,SACe,SAAAmvB,I,IAAyBjB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEuE,EAASvE,UAAAC,OAAA,EAAAD,UAAA,UAC9D0B,EAASC,KACTpB,EAEFmB,EADFnB,OAEEA,EAAOqjB,UACPrjB,EAAOsK,YACTnJ,EAAOoJ,oBAET,EAAAsiB,EAAA7uB,SAAe,CACbmD,SACA0qB,eACA7nB,YACA+oB,KAAM,U,uCCdK,SAAAC,EAAwBtV,G,IACrCvW,EADqCuW,EACrCvW,OACA0qB,EAFqCnU,EAErCmU,aACA7nB,EAHqC0T,EAGrC1T,UACA+oB,EAJqCrV,EAIrCqV,KAGE7oB,EAEE/C,EAFF+C,YACAmlB,EACEloB,EADFkoB,cAEE3d,EAAM1H,EAKV,GAJK0H,IAC8BA,EAA7BxH,EAAcmlB,EAAqB,OAAgBnlB,EAAcmlB,EAAqB,OAAkB,SAE9GloB,EAAO6B,KAAK,aAAkB+D,OAALgmB,IACrBlB,GAAgB3nB,IAAgBmlB,EAAe,CACjD,GAAY,UAAR3d,EAEF,YADAvK,EAAO6B,KAAK,uBAA4B+D,OAALgmB,IAGrC5rB,EAAO6B,KAAK,wBAA6B+D,OAALgmB,IACxB,SAARrhB,EACFvK,EAAO6B,KAAK,sBAA2B+D,OAALgmB,IAElC5rB,EAAO6B,KAAK,sBAA2B+D,OAALgmB,G,mICxBxC,IAAAF,EAAAlvB,EAAA,SACe,SAAAsvB,I,IAAuBpB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEuE,EAASvE,UAAAC,OAAA,EAAAD,UAAA,UAC5D0B,EAASC,KACTpB,EAEFmB,EADFnB,OAEFmB,EAAOsD,WAAY,EACfzE,EAAOqjB,UACXliB,EAAOqlB,cAAc,IACrB,EAAAqG,EAAA7uB,SAAe,CACbmD,SACA0qB,eACA7nB,YACA+oB,KAAM,Q,qFCbV,IAAAG,EAAAvvB,EAAA,S,8EAOAwvB,EAAe,CACbziB,QAAAwiB,EAAAlvB,QACAovB,YAAAC,EAAArvB,QACAsvB,UAAAC,EAAAvvB,QACAwvB,UAAAC,EAAAzvB,QACA0vB,WAAAC,EAAA3vB,QACA4vB,eAAAC,EAAA7vB,QACA4sB,oBAAAkD,EAAA9vB,Q,oFCdF,IAAAwW,EAAA7W,EAAA,S,aACe,SAAAowB,I,IAAiB5mB,EAAA1H,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAD,EAAGgI,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UAAEuuB,EAAOvuB,UAAAC,OAAA,EAAAD,UAAA,UACrF,iBAAV0H,IACTA,EAAQ0a,SAAS1a,EAAO,KAE1B,IAAMhG,EAASC,KACXgkB,EAAaje,EACbie,EAAa,IAAGA,EAAa,GACjC,IACEplB,EAQEmB,EARFnB,OACA6D,EAOE1C,EAPF0C,SACAD,EAMEzC,EANFyC,WACAylB,EAKEloB,EALFkoB,cACAnlB,EAIE/C,EAJF+C,YACAuH,EAGEtK,EAHF0J,aACAsB,EAEEhL,EAFFgL,UACA1I,EACEtC,EADFsC,QAEF,GAAItC,EAAOsD,WAAazE,EAAOgsB,iCAAmCvoB,IAAYsoB,IAAaiC,EACzF,OAAO,EAET,IAAMpE,EAAOjlB,KAAK+C,IAAIvG,EAAOnB,OAAOwkB,mBAAoBY,GACpDS,EAAY+D,EAAOjlB,KAAK0f,OAAOe,EAAawE,GAAQzoB,EAAOnB,OAAOukB,gBAClEsB,GAAahiB,EAASnE,SAAQmmB,EAAYhiB,EAASnE,OAAS,GAChE,IAmCIsE,EAnCE7F,GAAa0F,EAASgiB,GAE5B,GAAI7lB,EAAO0pB,oBACT,IAAK,IAAIrgB,EAAI,EAAGA,EAAIzF,EAAWlE,OAAQ2J,GAAK,EAAG,CAC7C,IAAM4kB,GAAuBtpB,KAAK0f,MAAkB,IAAZlmB,GAClC+vB,EAAiBvpB,KAAK0f,MAAsB,IAAhBzgB,EAAWyF,IACvC8kB,EAAqBxpB,KAAK0f,MAA0B,IAApBzgB,EAAWyF,EAAI,SACpB,IAAtBzF,EAAWyF,EAAI,GACpB4kB,GAAuBC,GAAkBD,EAAsBE,GAAsBA,EAAqBD,GAAkB,EAC9H9I,EAAa/b,EACJ4kB,GAAuBC,GAAkBD,EAAsBE,IACxE/I,EAAa/b,EAAI,GAEV4kB,GAAuBC,IAChC9I,EAAa/b,E,CAKnB,GAAIlI,EAAOwL,aAAeyY,IAAelhB,EAAa,CACpD,IAAK/C,EAAO0D,gBAAkB1G,EAAYgD,EAAOhD,WAAaA,EAAYgD,EAAOyG,eAC/E,OAAO,EAET,IAAKzG,EAAO2D,gBAAkB3G,EAAYgD,EAAOhD,WAAaA,EAAYgD,EAAO2G,iBAC1E5D,GAAe,KAAOkhB,EACzB,OAAO,C,CAcb,GAVIA,KAAgBiE,GAAiB,IAAMwC,GACzC1qB,EAAO6B,KAAK,0BAId7B,EAAOgJ,eAAehM,GAEQ6F,EAA1BohB,EAAalhB,EAAyB,OAAgBkhB,EAAalhB,EAAyB,OAAwB,QAGpHuH,IAAQtN,IAAcgD,EAAOhD,YAAcsN,GAAOtN,IAAcgD,EAAOhD,UAczE,OAbAgD,EAAO6G,kBAAkBod,GAErBplB,EAAOsK,YACTnJ,EAAOoJ,mBAETpJ,EAAO8G,sBACe,UAAlBjI,EAAOykB,QACTtjB,EAAOkJ,aAAalM,GAEJ,UAAd6F,IACF7C,EAAOorB,gBAAgBV,EAAc7nB,GACrC7C,EAAOsrB,cAAcZ,EAAc7nB,KAE9B,EAET,GAAIhE,EAAOqjB,QAAS,CAClB,IAAM4I,EAAM9qB,EAAO4C,eACbqqB,EAAI3iB,EAAMtN,GAAaA,EAC7B,GAAc,IAAVsJ,EAAa,CACf,IAAM4a,EAAYlhB,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QACtD4e,IACFlhB,EAAOgL,UAAUb,MAAM2M,eAAiB,OACxC9W,EAAOktB,mBAAoB,GAEzBhM,IAAclhB,EAAOmtB,2BAA6BntB,EAAOnB,OAAO8M,aAAe,GACjF3L,EAAOmtB,2BAA4B,EACnCra,uBAAsB,WACpB9H,EAAU8f,EAAM,aAAe,aAAemC,C,KAGhDjiB,EAAU8f,EAAM,aAAe,aAAemC,EAE5C/L,GACFpO,uBAAsB,WACpB9S,EAAOgL,UAAUb,MAAM2M,eAAiB,GACxC9W,EAAOktB,mBAAoB,C,QAG1B,CACL,IAAKltB,EAAOG,QAAQga,aAMlB,OALA,EAAA9a,EAAA0rB,sBAAqB,CACnB/qB,SACAyW,eAAgBwW,EAChBvW,KAAMoU,EAAM,OAAS,SAEhB,E,IAEUE,EAAnBhgB,EAAUuM,UAASyT,EAGlB,GAFChqB,EAAAqS,EAAA,CADiB2X,EAChBF,EAAM,OAAS,MAAQmC,GACxBjsB,EAAAqS,EAAA,CAFiB2X,EAEjB,WAAU,UAFOA,G,CAKrB,OAAO,C,CAwBT,OAtBAhrB,EAAOqlB,cAAc/e,GACrBtG,EAAOkJ,aAAalM,GACpBgD,EAAO6G,kBAAkBod,GACzBjkB,EAAO8G,sBACP9G,EAAO6B,KAAK,wBAAyByE,EAAOskB,GAC5C5qB,EAAOorB,gBAAgBV,EAAc7nB,GACvB,IAAVyD,EACFtG,EAAOsrB,cAAcZ,EAAc7nB,GACzB7C,EAAOsD,YACjBtD,EAAOsD,WAAY,EACdtD,EAAOotB,gCACVptB,EAAOotB,8BAAgC,SAAuBnhB,GACvDjM,IAAUA,EAAOsH,WAClB2E,EAAEC,SAAWjM,OACjBD,EAAOgL,UAAUsF,oBAAoB,gBAAiBtQ,EAAOotB,+BAC7DptB,EAAOotB,8BAAgC,YAChCptB,EAAOotB,8BACdptB,EAAOsrB,cAAcZ,EAAc7nB,G,GAGvC7C,EAAOgL,UAAUgB,iBAAiB,gBAAiBhM,EAAOotB,iCAErD,C,uCC5IM,SAAAC,I,IAAqBrnB,EAAA1H,UAAAC,OAAA,YAAAD,UAAA,GAASA,UAAA,GAAD,EAAGgI,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UACrG,GAAqB,iBAAV0H,EAAoB,CAC7B,IAAMsnB,EAAgB5M,SAAS1a,EAAO,IACtCA,EAAQsnB,C,CAEV,IAAMttB,EAASC,KACXstB,EAAWvnB,EASf,OARIhG,EAAOnB,OAAOvB,OACZ0C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAE1CirB,GAAsBvtB,EAAOsJ,QAAQsC,aAErC2hB,EAAWvtB,EAAOulB,oBAAoBgI,IAGnCvtB,EAAOuJ,QAAQgkB,EAAUjnB,EAAOokB,EAAcE,E,oFCdxC,SAAA4C,I,IAAmBlnB,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UAClF0B,EAASC,KAEbqC,EAGEtC,EAHFsC,QACAzD,EAEEmB,EAFFnB,OACAyE,EACEtD,EADFsD,UAEF,IAAKhB,EAAS,OAAOtC,EACrB,IAAIytB,EAAW5uB,EAAOukB,eACO,SAAzBvkB,EAAOwK,eAAsD,IAA1BxK,EAAOukB,gBAAwBvkB,EAAO6uB,qBAC3ED,EAAWjqB,KAAKgD,IAAIxG,EAAOkpB,qBAAqB,WAAW,GAAO,IAEpE,IAAMyE,EAAY3tB,EAAO+C,YAAclE,EAAOwkB,mBAAqB,EAAIoK,EACjEvM,EAAYlhB,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,QACnD,GAAIzD,EAAOvB,KAAM,CACf,GAAIgG,IAAc4d,GAAariB,EAAO+uB,oBAAqB,OAAO,EAClE5tB,EAAO6tB,QAAQ,CACbhrB,UAAW,SAGb7C,EAAO8tB,YAAc9tB,EAAOgL,UAAUoN,U,CAExC,OAAIvZ,EAAOuqB,QAAUppB,EAAOkD,MACnBlD,EAAOuJ,QAAQ,EAAGjD,EAAOokB,EAAcE,GAEzC5qB,EAAOuJ,QAAQvJ,EAAO+C,YAAc4qB,EAAWrnB,EAAOokB,EAAcE,E,oFCzB9D,SAAAmD,I,IAAmBznB,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UAClF0B,EAASC,KAEbpB,EAMEmB,EANFnB,OACA6D,EAKE1C,EALF0C,SACAD,EAIEzC,EAJFyC,WACAiH,EAGE1J,EAHF0J,aACApH,EAEEtC,EAFFsC,QACAgB,EACEtD,EADFsD,UAEF,IAAKhB,EAAS,OAAOtC,EACrB,IAAMkhB,EAAYlhB,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,QACnD,GAAIzD,EAAOvB,KAAM,CACf,GAAIgG,IAAc4d,GAAariB,EAAO+uB,oBAAqB,OAAO,EAClE5tB,EAAO6tB,QAAQ,CACbhrB,UAAW,SAGb7C,EAAO8tB,YAAc9tB,EAAOgL,UAAUoN,U,CAExC,IAAMpb,EAAY0M,EAAe1J,EAAOhD,WAAagD,EAAOhD,UAC5D,SAASgxB,EAAUC,GACjB,OAAIA,EAAM,GAAWzqB,KAAK0f,MAAM1f,KAAK2f,IAAI8K,IAClCzqB,KAAK0f,MAAM+K,E,CAEpB,IAIMC,EAJApB,EAAsBkB,EAAUhxB,GAChCmxB,EAAqBzrB,EAAS+R,KAAI,SAAAwZ,G,OAAOD,EAAUC,E,IACrDG,EAAW1rB,EAASyrB,EAAmBhnB,QAAQ2lB,GAAuB,QAClD,IAAbsB,GAA4BvvB,EAAOqjB,UAE5Cxf,EAAS9C,SAAQ,SAAC0kB,EAAMI,GAClBoI,GAAuBxI,IAEzB4J,EAAgBxJ,E,SAGS,IAAlBwJ,IACTE,EAAW1rB,EAASwrB,EAAgB,EAAIA,EAAgB,EAAIA,KAGhE,IAAIG,EAAY,EAShB,QARwB,IAAbD,KACTC,EAAY5rB,EAAW0E,QAAQinB,IACf,IAAGC,EAAYruB,EAAO+C,YAAc,GACvB,SAAzBlE,EAAOwK,eAAsD,IAA1BxK,EAAOukB,gBAAwBvkB,EAAO6uB,qBAC3EW,EAAYA,EAAYruB,EAAOkpB,qBAAqB,YAAY,GAAQ,EACxEmF,EAAY7qB,KAAKgD,IAAI6nB,EAAW,KAGhCxvB,EAAOuqB,QAAUppB,EAAOiD,YAAa,CACvC,IAAMqrB,EAAYtuB,EAAOnB,OAAOyK,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,SAAWtC,EAAOsJ,QAAUtJ,EAAOsJ,QAAQ9G,OAAOjE,OAAS,EAAIyB,EAAOwC,OAAOjE,OAAS,EACvJ,OAAOyB,EAAOuJ,QAAQ+kB,EAAWhoB,EAAOokB,EAAcE,E,CAExD,OAAO5qB,EAAOuJ,QAAQ8kB,EAAW/nB,EAAOokB,EAAcE,E,oFCrDzC,SAAA2D,I,IAAoBjoB,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UACnF0B,EAASC,KACf,OAAOD,EAAOuJ,QAAQvJ,EAAO+C,YAAauD,EAAOokB,EAAcE,E,oFCFlD,SAAA4D,I,IAAwBloB,EAAAhI,UAAAC,OAAA,YAAAD,UAAA,GAAyBA,UAAA,GAAjB2B,KAAKpB,OAAOyH,MAAOokB,IAAApsB,UAAAC,OAAA,YAAAD,UAAA,KAAmBA,UAAA,GAAEssB,EAAQtsB,UAAAC,OAAA,EAAAD,UAAA,UAAEmwB,EAAAnwB,UAAAC,OAAA,YAAAD,UAAA,GAAeA,UAAA,GAAH,GACrG0B,EAASC,KACX+F,EAAQhG,EAAO+C,YACb0lB,EAAOjlB,KAAK+C,IAAIvG,EAAOnB,OAAOwkB,mBAAoBrd,GAClD0e,EAAY+D,EAAOjlB,KAAK0f,OAAOld,EAAQyiB,GAAQzoB,EAAOnB,OAAOukB,gBAC7DpmB,EAAYgD,EAAO0J,aAAe1J,EAAOhD,WAAagD,EAAOhD,UACnE,GAAIA,GAAagD,EAAO0C,SAASgiB,GAAY,CAG3C,IAAMgK,EAAc1uB,EAAO0C,SAASgiB,GAC9BiK,EAAW3uB,EAAO0C,SAASgiB,EAAY,GACzC1nB,EAAY0xB,GAAeC,EAAWD,GAAeD,IACvDzoB,GAAShG,EAAOnB,OAAOukB,e,KAEpB,CAGL,IAAMgL,EAAWpuB,EAAO0C,SAASgiB,EAAY,GACvCkK,EAAc5uB,EAAO0C,SAASgiB,GAChC1nB,EAAYoxB,IAAaQ,EAAcR,GAAYK,IACrDzoB,GAAShG,EAAOnB,OAAOukB,e,CAK3B,OAFApd,EAAQxC,KAAKgD,IAAIR,EAAO,GACxBA,EAAQxC,KAAK+C,IAAIP,EAAOhG,EAAOyC,WAAWlE,OAAS,GAC5CyB,EAAOuJ,QAAQvD,EAAOM,EAAOokB,EAAcE,E,kIC1BpD,IAAAvrB,EAAA7C,EAAA,SACe,SAAAqyB,IACb,IAOI7rB,EAPEhD,EAASC,KAEbpB,EAEEmB,EAFFnB,OACA6G,EACE1F,EADF0F,SAEI2D,EAAyC,SAAzBxK,EAAOwK,cAA2BrJ,EAAOkpB,uBAAyBrqB,EAAOwK,cAC3FylB,EAAe9uB,EAAOwpB,aAEpBuF,EAAgB/uB,EAAO4K,UAAa,eAAgB,IAAsBhF,OAAlB/G,EAAOgH,YACrE,GAAIhH,EAAOvB,KAAM,CACf,GAAI0C,EAAOsD,UAAW,OACtBN,EAAY0d,SAAS1gB,EAAOupB,aAAapjB,aAAa,2BAA4B,IAC9EtH,EAAOiJ,eACLgnB,EAAe9uB,EAAOgvB,aAAe3lB,EAAgB,GAAKylB,EAAe9uB,EAAOwC,OAAOjE,OAASyB,EAAOgvB,aAAe3lB,EAAgB,GACxIrJ,EAAO6tB,UACPiB,EAAe9uB,EAAOiG,eAAc,EAAA5G,EAAAsG,iBAAgBD,EAAU,GAA6CE,OAA1CmpB,EAAc,8BAAsCnpB,OAAV5C,EAAU,OAAK,KAC1H,EAAA3D,EAAA4vB,WAAS,WACPjvB,EAAOuJ,QAAQulB,E,KAGjB9uB,EAAOuJ,QAAQulB,GAERA,EAAe9uB,EAAOwC,OAAOjE,OAAS8K,GAC/CrJ,EAAO6tB,UACPiB,EAAe9uB,EAAOiG,eAAc,EAAA5G,EAAAsG,iBAAgBD,EAAU,GAA6CE,OAA1CmpB,EAAc,8BAAsCnpB,OAAV5C,EAAU,OAAK,KAC1H,EAAA3D,EAAA4vB,WAAS,WACPjvB,EAAOuJ,QAAQulB,E,KAGjB9uB,EAAOuJ,QAAQulB,E,MAGjB9uB,EAAOuJ,QAAQulB,E,qFClCnB,IAAAI,EAAA1yB,EAAA,S,0BAGA2yB,EAAe,CACbrjB,WAAAojB,EAAAryB,QACAgxB,QAAAuB,EAAAvyB,QACA0P,YAAA8iB,EAAAxyB,Q,oFCNF,IAAAwC,EAAA7C,EAAA,SACe,SAAA8yB,EAAoBC,GACjC,IAAMvvB,EAASC,KAEbpB,EAEEmB,EAFFnB,OACA6G,EACE1F,EADF0F,UAEG7G,EAAOvB,MAAQ0C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,WAC7C,EAAAjD,EAAAsG,iBAAgBD,EAAU,IAAsBE,OAAlB/G,EAAOgH,WAAW,mBACxDjG,SAAQ,SAAChB,EAAIoH,GAClBpH,EAAGmS,aAAa,0BAA2B/K,E,IAE7ChG,EAAO6tB,QAAQ,CACb0B,iBACA1sB,UAAWhE,EAAOiJ,oBAAiBhE,EAAY,S,uCCdpC,SAAA0rB,I,IAAiBpwB,EAAAd,UAAAC,OAAA,YAAAD,UAAA,GAQ1BA,UAAA,GAAF,GAPFixB,EAD8BnwB,EAC9BmwB,eAAcE,EADgBrwB,EAE9BmK,eAAO,IAAAkmB,GAAOA,EACd5sB,EAH8BzD,EAG9ByD,UACAqG,EAJ8B9J,EAI9B8J,aACAwmB,EAL8BtwB,EAK9BswB,iBACAtF,EAN8BhrB,EAM9BgrB,aACAuF,EAP8BvwB,EAO9BuwB,aAEM3vB,EAASC,KACf,GAAKD,EAAOnB,OAAOvB,KAAnB,CACA0C,EAAO6B,KAAK,iBACZ,IACEW,EAKExC,EALFwC,OACAmB,EAIE3D,EAJF2D,eACAD,EAGE1D,EAHF0D,eACAgC,EAEE1F,EAFF0F,SACA7G,EACEmB,EADFnB,OAIF,GAFAmB,EAAO2D,gBAAiB,EACxB3D,EAAO0D,gBAAiB,EACpB1D,EAAOsJ,SAAWzK,EAAOyK,QAAQhH,QAanC,OAZIiH,IACG1K,EAAOiJ,gBAAuC,IAArB9H,EAAO0kB,UAE1B7lB,EAAOiJ,gBAAkB9H,EAAO0kB,UAAY7lB,EAAOwK,cAC5DrJ,EAAOuJ,QAAQvJ,EAAOsJ,QAAQ9G,OAAOjE,OAASyB,EAAO0kB,UAAW,GAAG,GAAO,GACjE1kB,EAAO0kB,YAAc1kB,EAAO0C,SAASnE,OAAS,GACvDyB,EAAOuJ,QAAQvJ,EAAOsJ,QAAQsC,aAAc,GAAG,GAAO,GAJtD5L,EAAOuJ,QAAQvJ,EAAOsJ,QAAQ9G,OAAOjE,OAAQ,GAAG,GAAO,IAO3DyB,EAAO2D,eAAiBA,EACxB3D,EAAO0D,eAAiBA,OACxB1D,EAAO6B,KAAK,WAGd,IAAMwH,EAAyC,SAAzBxK,EAAOwK,cAA2BrJ,EAAOkpB,uBAAyB1lB,KAAKogB,KAAK3O,WAAWpW,EAAOwK,cAAe,KAC/H2lB,EAAenwB,EAAOmwB,cAAgB3lB,EACtC2lB,EAAenwB,EAAOukB,gBAAmB,IAC3C4L,GAAgBnwB,EAAOukB,eAAiB4L,EAAenwB,EAAOukB,gBAEhEpjB,EAAOgvB,aAAeA,EACtB,IAAMY,EAAuB,GACvBC,EAAsB,GACxB9sB,EAAc/C,EAAO+C,iBACO,IAArB2sB,EACTA,EAAmB1vB,EAAOiG,cAAcjG,EAAOwC,OAAO0D,QAAO,SAAAtH,G,OAAMA,EAAGmL,UAAUkb,SAASpmB,EAAO8N,iB,IAAmB,IAEnH5J,EAAc2sB,EAEhB,IAAMI,EAAuB,SAAdjtB,IAAyBA,EAClCktB,EAAuB,SAAdltB,IAAyBA,EACpCmtB,EAAkB,EAClBC,EAAiB,EAErB,GAAIP,EAAmBV,EAAc,CACnCgB,EAAkBxsB,KAAKgD,IAAIwoB,EAAeU,EAAkB7wB,EAAOukB,gBACnE,IAAK,IAAIlb,EAAI,EAAGA,EAAI8mB,EAAeU,EAAkBxnB,GAAK,EAAG,CAC3D,IAAMlC,EAAQkC,EAAI1E,KAAK0f,MAAMhb,EAAI1F,EAAOjE,QAAUiE,EAAOjE,OACzDqxB,EAAqB7vB,KAAKyC,EAAOjE,OAASyH,EAAQ,E,OAE/C,GAAI0pB,EAAyC1vB,EAAOwC,OAAOjE,OAAwB,EAAfywB,EAAkB,CAC3FiB,EAAiBzsB,KAAKgD,IAAIkpB,GAAoB1vB,EAAOwC,OAAOjE,OAAwB,EAAfywB,GAAmBnwB,EAAOukB,gBAC/F,IAAK,IAAIjb,EAAI,EAAGA,EAAI8nB,EAAgB9nB,GAAK,EAAG,CAC1C,IAAMsd,EAAQtd,EAAI3E,KAAK0f,MAAM/a,EAAI3F,EAAOjE,QAAUiE,EAAOjE,OACzDsxB,EAAoB9vB,KAAK0lB,E,EAoB7B,GAjBIsK,GACFH,EAAqBhwB,SAAQ,SAAAoG,GAC3BN,EAASwqB,QAAQlwB,EAAOwC,OAAOwD,G,IAG/B8pB,GACFD,EAAoBjwB,SAAQ,SAAAoG,GAC1BN,EAAS0F,OAAOpL,EAAOwC,OAAOwD,G,IAGlChG,EAAOmwB,eACsB,SAAzBtxB,EAAOwK,eACTrJ,EAAO+I,eAELlK,EAAOimB,qBACT9kB,EAAO8f,qBAELvW,EACF,GAAIqmB,EAAqBrxB,OAAS,GAAKwxB,EACrC,QAA8B,IAAnBR,EAAgC,CACzC,IAAMa,EAAwBpwB,EAAOyC,WAAWM,GAC1CstB,EAAoBrwB,EAAOyC,WAAWM,EAAcitB,GACpD5qB,EAAOirB,EAAoBD,EAC7BT,EACF3vB,EAAOkJ,aAAalJ,EAAOhD,UAAYoI,IAEvCpF,EAAOuJ,QAAQxG,EAAcitB,EAAiB,GAAG,GAAO,GACpD9mB,IACFlJ,EAAO+E,QAAQ/E,EAAO4C,eAAiB,SAAW,WAAawC,G,MAI/D8D,GACFlJ,EAAOisB,YAAYsD,EAAgB,GAAG,GAAO,QAG5C,GAAIM,EAAoBtxB,OAAS,GAAKuxB,EAC3C,QAA8B,IAAnBP,EAAgC,CACzC,IAAMe,EAAwBtwB,EAAOyC,WAAWM,GAC1CwtB,EAAoBvwB,EAAOyC,WAAWM,EAAcktB,GACpDO,EAAOD,EAAoBD,EAC7BX,EACF3vB,EAAOkJ,aAAalJ,EAAOhD,UAAYwzB,IAEvCxwB,EAAOuJ,QAAQxG,EAAcktB,EAAgB,GAAG,GAAO,GACnD/mB,IACFlJ,EAAO+E,QAAQ/E,EAAO4C,eAAiB,SAAW,WAAa4tB,G,MAInExwB,EAAOisB,YAAYsD,EAAgB,GAAG,GAAO,GAMnD,GAFAvvB,EAAO2D,eAAiBA,EACxB3D,EAAO0D,eAAiBA,EACpB1D,EAAOywB,YAAczwB,EAAOywB,WAAWC,UAAYtG,EAAc,CACnE,IAAMuG,EAAa,CACjBpB,iBACAhmB,SAAS,EACT1G,YACAqG,eACAwmB,mBACAtF,cAAc,GAEZ3rB,MAAM0C,QAAQnB,EAAOywB,WAAWC,SAClC1wB,EAAOywB,WAAWC,QAAQ9wB,SAAQ,SAAAgxB,IAC3BA,EAAEtpB,WAAaspB,EAAE/xB,OAAOvB,MAAMszB,EAAE/C,QAAQ8C,E,IAEtC3wB,EAAOywB,WAAWC,mBAAmB1wB,EAAOlB,aAAekB,EAAOywB,WAAWC,QAAQ7xB,OAAOvB,MACrG0C,EAAOywB,WAAWC,QAAQ7C,QAAQ8C,E,CAGtC3wB,EAAO6B,KAAK,UAnIa,C,oFCVZ,SAAAgvB,IACb,IAAM7wB,EAASC,KAEbpB,EAEEmB,EAFFnB,OACA6G,EACE1F,EADF0F,SAEF,MAAK7G,EAAOvB,MAAQ0C,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,SAA5D,CACAtC,EAAOmwB,eACP,IAAMW,EAAiB,GACvB9wB,EAAOwC,OAAO5C,SAAQ,SAAA6F,GACpB,IAAMO,OAA4C,IAA7BP,EAAQsrB,iBAAqF,EAAlDtrB,EAAQU,aAAa,2BAAiCV,EAAQsrB,iBAC9HD,EAAe9qB,GAASP,C,IAE1BzF,EAAOwC,OAAO5C,SAAQ,SAAA6F,GACpBA,EAAQgH,gBAAgB,0B,IAE1BqkB,EAAelxB,SAAQ,SAAA6F,GACrBC,EAAS0F,OAAO3F,E,IAElBzF,EAAOmwB,eACPnwB,EAAOuJ,QAAQvJ,EAAOgD,UAAW,EAdoC,C,kICNvE,IAAAguB,EAAAx0B,EAAA,S,aAEAy0B,EAAe,CACb7qB,cAAA4qB,EAAAn0B,QACAwJ,gBAAA6qB,EAAAr0B,Q,sCCJa,SAAAs0B,EAAuBC,GACpC,IAAMpxB,EAASC,KACf,MAAKD,EAAOnB,OAAOwyB,eAAiBrxB,EAAOnB,OAAO2K,eAAiBxJ,EAAOsxB,UAAYtxB,EAAOnB,OAAOqjB,SAApG,CACA,IAAMtjB,EAAyC,cAApCoB,EAAOnB,OAAO0yB,kBAAoCvxB,EAAOpB,GAAKoB,EAAOgL,UAC5EhL,EAAO4K,YACT5K,EAAOie,qBAAsB,GAE/Brf,EAAGuL,MAAMqnB,OAAS,OAClB5yB,EAAGuL,MAAMqnB,OAASJ,EAAS,WAAa,OACpCpxB,EAAO4K,WACTkI,uBAAsB,WACpB9S,EAAOie,qBAAsB,C,GAT4E,C,oFCFhG,SAAAwT,IACb,IAAMzxB,EAASC,KACXD,EAAOnB,OAAO2K,eAAiBxJ,EAAOsxB,UAAYtxB,EAAOnB,OAAOqjB,UAGhEliB,EAAO4K,YACT5K,EAAOie,qBAAsB,GAE/Bje,EAA2C,cAApCA,EAAOnB,OAAO0yB,kBAAoC,KAAO,aAAapnB,MAAMqnB,OAAS,GACxFxxB,EAAO4K,WACTkI,uBAAsB,WACpB9S,EAAOie,qBAAsB,C,sICXnC,IAAAze,EAAAhD,EAAA,S,2FAQIk1B,GAAqB,EACzB,SAASC,IAAqB,CAC9B,IAAMC,EAAS,SAAC5xB,EAAQgf,GACtB,IAAMzf,GAAW,EAAAC,EAAAC,eAEfZ,EAIEmB,EAJFnB,OACAD,EAGEoB,EAHFpB,GACAoM,EAEEhL,EAFFgL,UACA1K,EACEN,EADFM,OAEIuxB,IAAYhzB,EAAOizB,OACnBC,EAAuB,OAAX/S,EAAkB,mBAAqB,sBACnDgT,EAAehT,EAGrBpgB,EAAGmzB,GAAW,cAAe/xB,EAAOiyB,aAAc,CAChDC,SAAS,IAEX3yB,EAASwyB,GAAW,cAAe/xB,EAAOmyB,YAAa,CACrDD,SAAS,EACTL,YAEFtyB,EAASwyB,GAAW,YAAa/xB,EAAOoyB,WAAY,CAClDF,SAAS,IAEX3yB,EAASwyB,GAAW,gBAAiB/xB,EAAOoyB,WAAY,CACtDF,SAAS,IAEX3yB,EAASwyB,GAAW,aAAc/xB,EAAOoyB,WAAY,CACnDF,SAAS,IAEX3yB,EAASwyB,GAAW,eAAgB/xB,EAAOoyB,WAAY,CACrDF,SAAS,KAIPrzB,EAAOwzB,eAAiBxzB,EAAOyzB,2BACjC1zB,EAAGmzB,GAAW,QAAS/xB,EAAOuyB,SAAS,GAErC1zB,EAAOqjB,SACTlX,EAAU+mB,GAAW,SAAU/xB,EAAOwyB,UAIpC3zB,EAAO4zB,qBACTzyB,EAAOgyB,GAAc1xB,EAAOsa,KAAOta,EAAOua,QAAU,0CAA4C,wBAAyB6X,EAAA71B,SAAU,GAEnImD,EAAOgyB,GAAc,iBAAkBU,EAAA71B,SAAU,GAInD+B,EAAGmzB,GAAW,OAAQ/xB,EAAO2yB,OAAQ,CACnCd,SAAS,G,MA2Bbe,EAAe,CACb7mB,aAzBF,WACE,IAAM/L,EAASC,KACTV,GAAW,EAAAC,EAAAC,eACXZ,EAEFmB,EADFnB,OAEFmB,EAAOiyB,aAAeY,EAAAh2B,QAAa6E,KAAK1B,GACxCA,EAAOmyB,YAAcW,EAAAj2B,QAAY6E,KAAK1B,GACtCA,EAAOoyB,WAAaW,EAAAl2B,QAAW6E,KAAK1B,GAChCnB,EAAOqjB,UACTliB,EAAOwyB,SAAWQ,EAAAn2B,QAAS6E,KAAK1B,IAElCA,EAAOuyB,QAAUU,EAAAp2B,QAAQ6E,KAAK1B,GAC9BA,EAAO2yB,OAASO,EAAAr2B,QAAO6E,KAAK1B,GACvB0xB,IACHnyB,EAASyM,iBAAiB,aAAc2lB,GACxCD,GAAqB,GAEvBE,EAAO5xB,EAAQ,K,EAQfsM,aANF,WAEEslB,EADe3xB,KACA,M,sFCrFjB,IAAAT,EAAAhD,EAAA,S,aAgBe,SAAA22B,EAAsBlU,GACnC,IAAMjf,EAASC,KACTV,GAAW,EAAAC,EAAAC,eACX2T,GAAS,EAAA5T,EAAAsU,aACTwL,EAAOtf,EAAO4D,gBACpB0b,EAAK1a,QAAQ7E,KAAKkf,GAClB,IACEpgB,EAGEmB,EAHFnB,OACAkG,EAEE/E,EAFF+E,QAGF,GADI/E,EADFsC,UAGGzD,EAAOwyB,eAAuC,UAAtBpS,EAAMmU,gBAC/BpzB,EAAOsD,YAAazE,EAAOgsB,gCAA/B,EAGK7qB,EAAOsD,WAAazE,EAAOqjB,SAAWrjB,EAAOvB,MAChD0C,EAAO6tB,UAET,IAAI5hB,EAAIgT,EACJhT,EAAEonB,gBAAepnB,EAAIA,EAAEonB,eAC3B,IAAIC,EAAWrnB,EAAEC,OACjB,IAAiC,YAA7BrN,EAAO0yB,mBACJvxB,EAAOgL,UAAUia,SAASqO,OAE7B,UAAWrnB,GAAiB,IAAZA,EAAEsnB,OAClB,WAAYtnB,GAAKA,EAAEunB,OAAS,GAC5BlU,EAAKzb,WAAayb,EAAKvb,SAA3B,CAGA,IAAM0vB,IAAyB50B,EAAO60B,gBAA4C,KAA1B70B,EAAO60B,eAEzDC,EAAY1U,EAAM2U,aAAe3U,EAAM2U,eAAiB3U,EAAM4U,KAChEJ,GAAwBxnB,EAAEC,QAAUD,EAAEC,OAAOjB,YAAc0oB,IAC7DL,EAAWK,EAAU,IAEvB,IAAMG,EAAoBj1B,EAAOi1B,kBAAoBj1B,EAAOi1B,kBAAoB,IAA0BluB,OAAtB/G,EAAO60B,gBACrFK,KAAoB9nB,EAAEC,SAAUD,EAAEC,OAAOjB,YAG/C,GAAIpM,EAAOm1B,YAAcD,EApD3B,SAAwBpc,GACtB,SAASsc,EAAcr1B,GACrB,IAAKA,GAAMA,KAAO,EAAAY,EAAAC,gBAAiBb,KAAO,EAAAY,EAAAsU,aAAa,OAAO,KAC1DlV,EAAGs1B,eAAct1B,EAAKA,EAAGs1B,cAC7B,IAAMC,EAAQv1B,EAAG+pB,QAAQhR,GACzB,OAAKwc,GAAUv1B,EAAGw1B,YAGXD,GAASF,EAAcr1B,EAAGw1B,cAAc/iB,MAFtC,I,CAIX,OAAO4iB,EAVyB31B,UAAAC,OAAA,YAAAD,UAAA,GAAWA,UAAA,GAAJ2B,K,CAoDGo0B,CAAeP,EAAmBR,GAAYA,EAAS3K,QAAQmL,IACvG9zB,EAAO6E,YAAa,OAGtB,IAAIhG,EAAOy1B,cACJhB,EAAS3K,QAAQ9pB,EAAOy1B,cAD/B,CAGAvvB,EAAQG,SAAW+G,EAAEsoB,MACrBxvB,EAAQI,SAAW8G,EAAEuoB,MACrB,IAAMxvB,EAASD,EAAQG,SACjBD,EAASF,EAAQI,SAIjBsvB,EAAqB51B,EAAO41B,oBAAsB51B,EAAO61B,sBACzDC,EAAqB91B,EAAO81B,oBAAsB91B,EAAO+1B,sBAC/D,GAAIH,IAAuBzvB,GAAU2vB,GAAsB3vB,GAAUoO,EAAOyhB,WAAaF,GAAqB,CAC5G,GAA2B,YAAvBF,EAGF,OAFAxV,EAAM6V,gB,CAKV/1B,OAAOsD,OAAOid,EAAM,CAClBzb,WAAW,EACXE,SAAS,EACTC,qBAAqB,EACrBE,iBAAaJ,EACba,iBAAab,IAEfiB,EAAQC,OAASA,EACjBD,EAAQE,OAASA,EACjBqa,EAAKrb,gBAAiB,EAAA5E,EAAAuU,OACtB5T,EAAO6E,YAAa,EACpB7E,EAAO8I,aACP9I,EAAO+0B,oBAAiBjxB,EACpBjF,EAAO4vB,UAAY,IAAGnP,EAAKjb,oBAAqB,GACpD,IAAIywB,GAAiB,EACjBxB,EAAS1b,QAAQ0H,EAAKhb,qBACxBwwB,GAAiB,EACS,WAAtBxB,EAAS7iB,WACX6O,EAAKzb,WAAY,IAGjBtE,EAASgR,eAAiBhR,EAASgR,cAAcqH,QAAQ0H,EAAKhb,oBAAsB/E,EAASgR,gBAAkB+iB,GACjH/zB,EAASgR,cAAcC,OAEzB,IAAMwkB,EAAuBF,GAAkB90B,EAAO8E,gBAAkBjG,EAAOo2B,0BAC1Ep2B,EAAOq2B,gCAAiCF,GAA0B1B,EAAS6B,mBAC9ElpB,EAAE6oB,iBAEA90B,EAAOnB,OAAOoK,UAAYjJ,EAAOnB,OAAOoK,SAAS3G,SAAWtC,EAAOiJ,UAAYjJ,EAAOsD,YAAczE,EAAOqjB,SAC7GliB,EAAOiJ,SAASgpB,eAElBjyB,EAAO6B,KAAK,aAAcoK,E,CAnEU,CAblC,C,qFC9BJ,IAAAzM,EAAAhD,EAAA,S,aAEe,SAAA44B,EAAqBnW,GAClC,IAAM1f,GAAW,EAAAC,EAAAC,eACXO,EAASC,KACTqf,EAAOtf,EAAO4D,gBAElB/E,EAIEmB,EAJFnB,OACAkG,EAGE/E,EAHF+E,QACAuF,EAEEtK,EAFF0J,aAGF,GADI1J,EADFsC,UAGGzD,EAAOwyB,eAAuC,UAAtBpS,EAAMmU,aAAnC,CACA,IAAInnB,EAAIgT,EAER,GADIhT,EAAEonB,gBAAepnB,EAAIA,EAAEonB,eACtB/T,EAAKzb,UAAV,CAMA,IAAMwxB,EAAe/V,EAAK1a,QAAQ0wB,WAAU,SAAAC,G,OAAYA,EAASC,YAAcvpB,EAAEupB,S,IAC7EH,GAAgB,IAAG/V,EAAK1a,QAAQywB,GAAgBppB,GACpD,IAAMwpB,EAAcnW,EAAK1a,QAAQrG,OAAS,EAAI+gB,EAAK1a,QAAQ,GAAKqH,EAC1DsoB,EAAQkB,EAAYlB,MACpBC,EAAQiB,EAAYjB,MAC1B,GAAIvoB,EAAEypB,wBAGJ,OAFA3wB,EAAQC,OAASuvB,OACjBxvB,EAAQE,OAASuvB,GAGnB,IAAKx0B,EAAO8E,eAeV,OAdKmH,EAAEC,OAAO0L,QAAQ0H,EAAKhb,qBACzBtE,EAAO6E,YAAa,QAElBya,EAAKzb,YACP9E,OAAOsD,OAAO0C,EAAS,CACrBC,OAAQuvB,EACRtvB,OAAQuvB,EACRmB,MAAO31B,EAAO+E,QAAQG,SACtB0wB,MAAO51B,EAAO+E,QAAQI,SACtBD,SAAUqvB,EACVpvB,SAAUqvB,IAEZlV,EAAKrb,gBAAiB,EAAA5E,EAAAuU,SAI1B,GAAI/U,EAAOg3B,sBAAwBh3B,EAAOvB,KACxC,GAAI0C,EAAO8C,cAET,GAAI0xB,EAAQzvB,EAAQE,QAAUjF,EAAOhD,WAAagD,EAAO2G,gBAAkB6tB,EAAQzvB,EAAQE,QAAUjF,EAAOhD,WAAagD,EAAOyG,eAG9H,OAFA6Y,EAAKzb,WAAY,OACjByb,EAAKvb,SAAU,QAGZ,GAAIwwB,EAAQxvB,EAAQC,QAAUhF,EAAOhD,WAAagD,EAAO2G,gBAAkB4tB,EAAQxvB,EAAQC,QAAUhF,EAAOhD,WAAagD,EAAOyG,eACrI,OAGJ,GAAIlH,EAASgR,eACPtE,EAAEC,SAAW3M,EAASgR,eAAiBtE,EAAEC,OAAO0L,QAAQ0H,EAAKhb,mBAG/D,OAFAgb,EAAKvb,SAAU,OACf/D,EAAO6E,YAAa,GAOxB,GAHIya,EAAKtb,qBACPhE,EAAO6B,KAAK,YAAaoK,KAEvBA,EAAE6pB,eAAiB7pB,EAAE6pB,cAAcv3B,OAAS,GAAhD,CACAwG,EAAQG,SAAWqvB,EACnBxvB,EAAQI,SAAWqvB,EACnB,IAAMuB,EAAQhxB,EAAQG,SAAWH,EAAQC,OACnCgxB,EAAQjxB,EAAQI,SAAWJ,EAAQE,OACzC,KAAIjF,EAAOnB,OAAO4vB,WAAajrB,KAAKyyB,KAAKzyB,KAAA0yB,IAAAH,EAAS,GAAIvyB,KAAA0yB,IAAAF,EAAS,IAAKh2B,EAAOnB,OAAO4vB,WAAlF,CAEE,IAAI0H,EADN,QAAgC,IAArB7W,EAAKpb,YAEVlE,EAAO4C,gBAAkBmC,EAAQI,WAAaJ,EAAQE,QAAUjF,EAAO8C,cAAgBiC,EAAQG,WAAaH,EAAQC,OACtHsa,EAAKpb,aAAc,EAGf6xB,EAAQA,EAAQC,EAAQA,GAAS,KACnCG,EAA4D,IAA/C3yB,KAAK4yB,MAAM5yB,KAAK2f,IAAI6S,GAAQxyB,KAAK2f,IAAI4S,IAAgBvyB,KAAK6T,GACvEiI,EAAKpb,YAAclE,EAAO4C,eAAiBuzB,EAAat3B,EAAOs3B,WAAa,GAAKA,EAAat3B,EAAOs3B,YAY3G,GARI7W,EAAKpb,aACPlE,EAAO6B,KAAK,oBAAqBoK,QAEH,IAArBqT,EAAK3a,cACVI,EAAQG,WAAaH,EAAQC,QAAUD,EAAQI,WAAaJ,EAAQE,SACtEqa,EAAK3a,aAAc,IAGnB2a,EAAKpb,aAAelE,EAAOq2B,MAAQr2B,EAAOnB,OAAOw3B,MAAQr2B,EAAOnB,OAAOw3B,KAAK/zB,SAAWgd,EAAK1a,QAAQrG,OAAS,EAC/G+gB,EAAKzb,WAAY,OAGnB,GAAKyb,EAAK3a,YAAV,CAGA3E,EAAO6E,YAAa,GACfhG,EAAOqjB,SAAWjW,EAAEqqB,YACvBrqB,EAAE6oB,iBAEAj2B,EAAO03B,2BAA6B13B,EAAOizB,QAC7C7lB,EAAEuqB,kBAEJ,IAAIpxB,EAAOpF,EAAO4C,eAAiBmzB,EAAQC,EACvCS,EAAcz2B,EAAO4C,eAAiBmC,EAAQG,SAAWH,EAAQ2xB,UAAY3xB,EAAQI,SAAWJ,EAAQ4xB,UACxG93B,EAAO+3B,iBACTxxB,EAAO5B,KAAK2f,IAAI/d,IAASkF,EAAM,GAAI,GACnCmsB,EAAcjzB,KAAK2f,IAAIsT,IAAgBnsB,EAAM,GAAI,IAEnDvF,EAAQK,KAAOA,EACfA,GAAQvG,EAAOg4B,WACXvsB,IACFlF,GAAQA,EACRqxB,GAAeA,GAEjB,IAAMK,EAAuB92B,EAAO+2B,iBACpC/2B,EAAO+0B,eAAiB3vB,EAAO,EAAI,OAAS,OAC5CpF,EAAO+2B,iBAAmBN,EAAc,EAAI,OAAS,OACrD,IAuBIO,EAvBEC,EAASj3B,EAAOnB,OAAOvB,OAASuB,EAAOqjB,QAC7C,IAAK5C,EAAKvb,QAAS,CAQjB,GAPIkzB,GACFj3B,EAAO6tB,QAAQ,CACbhrB,UAAW7C,EAAO+0B,iBAGtBzV,EAAKlb,eAAiBpE,EAAO4pB,eAC7B5pB,EAAOqlB,cAAc,GACjBrlB,EAAOsD,UAAW,CACpB,IAAM4zB,EAAM,IAAI9jB,OAAOf,YAAY,gBAAiB,CAClD8kB,SAAS,EACTb,YAAY,IAEdt2B,EAAOgL,UAAUosB,cAAcF,E,CAEjC5X,EAAK5a,qBAAsB,GAEvB7F,EAAOrB,aAAyC,IAA1BwC,EAAO0D,iBAAqD,IAA1B1D,EAAO2D,gBACjE3D,EAAOoG,eAAc,GAEvBpG,EAAO6B,KAAK,kBAAmBoK,E,CAG7BqT,EAAKvb,SAAW+yB,IAAyB92B,EAAO+2B,kBAAoBE,GAAUzzB,KAAK2f,IAAI/d,IAAS,IAElGpF,EAAO6tB,QAAQ,CACbhrB,UAAW7C,EAAO+0B,eAClB7rB,cAAc,IAEhB8tB,GAAY,GAEdh3B,EAAO6B,KAAK,aAAcoK,GAC1BqT,EAAKvb,SAAU,EACfub,EAAKnb,iBAAmBiB,EAAOka,EAAKlb,eACpC,IAAIizB,GAAsB,EACtBC,EAAkBz4B,EAAOy4B,gBAiD7B,GAhDIz4B,EAAOg3B,sBACTyB,EAAkB,GAEhBlyB,EAAO,GACL6xB,IAAWD,GAAa1X,EAAKnb,kBAAoBtF,EAAOiJ,eAAiB9H,EAAOyG,eAAiBzG,EAAO4H,KAAO,EAAI5H,EAAOyG,iBAC5HzG,EAAO6tB,QAAQ,CACbhrB,UAAW,OACXqG,cAAc,EACdwmB,iBAAkB,IAGlBpQ,EAAKnb,iBAAmBnE,EAAOyG,iBACjC4wB,GAAsB,EAClBx4B,EAAO04B,aACTjY,EAAKnb,iBAAmBnE,EAAOyG,eAAiB,EAAIjD,KAAA0yB,KAAEl2B,EAAOyG,eAAiB6Y,EAAKlb,eAAiBgB,EAASkyB,MAGxGlyB,EAAO,IACZ6xB,IAAWD,GAAa1X,EAAKnb,kBAAoBtF,EAAOiJ,eAAiB9H,EAAO2G,eAAiB3G,EAAO4H,KAAO,EAAI5H,EAAO2G,iBAC5H3G,EAAO6tB,QAAQ,CACbhrB,UAAW,OACXqG,cAAc,EACdwmB,iBAAkB1vB,EAAOwC,OAAOjE,QAAmC,SAAzBM,EAAOwK,cAA2BrJ,EAAOkpB,uBAAyB1lB,KAAKogB,KAAK3O,WAAWpW,EAAOwK,cAAe,QAGvJiW,EAAKnb,iBAAmBnE,EAAO2G,iBACjC0wB,GAAsB,EAClBx4B,EAAO04B,aACTjY,EAAKnb,iBAAmBnE,EAAO2G,eAAiB,EAAInD,KAAA0yB,IAACl2B,EAAO2G,eAAiB2Y,EAAKlb,eAAiBgB,EAASkyB,MAI9GD,IACFprB,EAAEypB,yBAA0B,IAIzB11B,EAAO0D,gBAA4C,SAA1B1D,EAAO+0B,gBAA6BzV,EAAKnb,iBAAmBmb,EAAKlb,iBAC7Fkb,EAAKnb,iBAAmBmb,EAAKlb,iBAE1BpE,EAAO2D,gBAA4C,SAA1B3D,EAAO+0B,gBAA6BzV,EAAKnb,iBAAmBmb,EAAKlb,iBAC7Fkb,EAAKnb,iBAAmBmb,EAAKlb,gBAE1BpE,EAAO2D,gBAAmB3D,EAAO0D,iBACpC4b,EAAKnb,iBAAmBmb,EAAKlb,gBAI3BvF,EAAO4vB,UAAY,EAAG,CACxB,KAAIjrB,KAAK2f,IAAI/d,GAAQvG,EAAO4vB,WAAanP,EAAKjb,oBAW5C,YADAib,EAAKnb,iBAAmBmb,EAAKlb,gBAT7B,IAAKkb,EAAKjb,mBAMR,OALAib,EAAKjb,oBAAqB,EAC1BU,EAAQC,OAASD,EAAQG,SACzBH,EAAQE,OAASF,EAAQI,SACzBma,EAAKnb,iBAAmBmb,EAAKlb,oBAC7BW,EAAQK,KAAOpF,EAAO4C,eAAiBmC,EAAQG,SAAWH,EAAQC,OAASD,EAAQI,SAAWJ,EAAQE,O,CAQvGpG,EAAO24B,eAAgB34B,EAAOqjB,WAG/BrjB,EAAOoK,UAAYpK,EAAOoK,SAAS3G,SAAWtC,EAAOiJ,UAAYpK,EAAOimB,uBAC1E9kB,EAAO6G,oBACP7G,EAAO8G,uBAEL9G,EAAOnB,OAAOoK,UAAYpK,EAAOoK,SAAS3G,SAAWtC,EAAOiJ,UAC9DjJ,EAAOiJ,SAASkpB,cAGlBnyB,EAAOgJ,eAAesW,EAAKnb,kBAE3BnE,EAAOkJ,aAAaoW,EAAKnb,kBAzIvB,CA1B2F,CAL1C,C,MAtD7Cmb,EAAK3a,aAAe2a,EAAKpb,aAC3BlE,EAAO6B,KAAK,oBAAqBoK,EALuB,C,qFCb9D,IAAA5M,EAAA7C,EAAA,SACe,SAAAi7B,EAAoBxY,GACjC,IAAMjf,EAASC,KACTqf,EAAOtf,EAAO4D,gBACdyxB,EAAe/V,EAAK1a,QAAQ0wB,WAAU,SAAAC,G,OAAYA,EAASC,YAAcvW,EAAMuW,S,IAIrF,IAHIH,GAAgB,GAClB/V,EAAK1a,QAAQ+Z,OAAO0W,EAAc,GAEhC,CAAC,gBAAiB,aAAc,gBAAgBpZ,SAASgD,EAAMyY,UAClC,kBAAfzY,EAAMyY,OAA6B13B,EAAOU,QAAQob,UAAY9b,EAAOU,QAAQ4b,YAE3F,OAGJ,IACEzd,EAKEmB,EALFnB,OACAkG,EAIE/E,EAJF+E,QACAuF,EAGEtK,EAHF0J,aACAjH,EAEEzC,EAFFyC,WAGF,GADIzC,EADFsC,UAGGzD,EAAOwyB,eAAuC,UAAtBpS,EAAMmU,aAAnC,CACA,IAAInnB,EAAIgT,EAMR,GALIhT,EAAEonB,gBAAepnB,EAAIA,EAAEonB,eACvB/T,EAAKtb,qBACPhE,EAAO6B,KAAK,WAAYoK,GAE1BqT,EAAKtb,qBAAsB,GACtBsb,EAAKzb,UAMR,OALIyb,EAAKvb,SAAWlF,EAAOrB,YACzBwC,EAAOoG,eAAc,GAEvBkZ,EAAKvb,SAAU,OACfub,EAAK3a,aAAc,GAIjB9F,EAAOrB,YAAc8hB,EAAKvb,SAAWub,EAAKzb,aAAwC,IAA1B7D,EAAO0D,iBAAqD,IAA1B1D,EAAO2D,iBACnG3D,EAAOoG,eAAc,GAIvB,IAyBIuxB,EAzBEC,GAAe,EAAAv4B,EAAAuU,OACfikB,EAAWD,EAAetY,EAAKrb,eAGrC,GAAIjE,EAAO6E,WAAY,CACrB,IAAMizB,EAAW7rB,EAAE4nB,MAAQ5nB,EAAE2nB,cAAgB3nB,EAAE2nB,eAC/C5zB,EAAOqgB,mBAAmByX,GAAYA,EAAS,IAAM7rB,EAAEC,QACvDlM,EAAO6B,KAAK,YAAaoK,GACrB4rB,EAAW,KAAOD,EAAetY,EAAK/a,cAAgB,KACxDvE,EAAO6B,KAAK,wBAAyBoK,E,CAOzC,GAJAqT,EAAK/a,eAAgB,EAAAlF,EAAAuU,QACrB,EAAAvU,EAAA4vB,WAAS,WACFjvB,EAAOsH,YAAWtH,EAAO6E,YAAa,E,KAExCya,EAAKzb,YAAcyb,EAAKvb,UAAY/D,EAAO+0B,gBAAmC,IAAjBhwB,EAAQK,MAAcka,EAAKnb,mBAAqBmb,EAAKlb,eAIrH,OAHAkb,EAAKzb,WAAY,EACjByb,EAAKvb,SAAU,OACfub,EAAK3a,aAAc,GAYrB,GATA2a,EAAKzb,WAAY,EACjByb,EAAKvb,SAAU,EACfub,EAAK3a,aAAc,EAGjBgzB,EADE94B,EAAO24B,aACIltB,EAAMtK,EAAOhD,WAAagD,EAAOhD,WAEhCsiB,EAAKnb,kBAEjBtF,EAAOqjB,QAGX,GAAIliB,EAAOnB,OAAOoK,UAAYpK,EAAOoK,SAAS3G,QAC5CtC,EAAOiJ,SAASmpB,WAAW,CACzBuF,mBAFJ,CAUA,IAFA,IAAII,EAAY,EACZjU,EAAY9jB,EAAO2C,gBAAgB,GAC9BuF,EAAI,EAAGA,EAAIzF,EAAWlE,OAAQ2J,GAAKA,EAAIrJ,EAAOwkB,mBAAqB,EAAIxkB,EAAOukB,eAAgB,CACrG,IAAMuK,EAAYzlB,EAAIrJ,EAAOwkB,mBAAqB,EAAI,EAAIxkB,EAAOukB,oBACxB,IAA9B3gB,EAAWyF,EAAIylB,GACpBgK,GAAcl1B,EAAWyF,IAAMyvB,EAAal1B,EAAWyF,EAAIylB,KAC7DoK,EAAY7vB,EACZ4b,EAAYrhB,EAAWyF,EAAIylB,GAAalrB,EAAWyF,IAE5CyvB,GAAcl1B,EAAWyF,KAClC6vB,EAAY7vB,EACZ4b,EAAYrhB,EAAWA,EAAWlE,OAAS,GAAKkE,EAAWA,EAAWlE,OAAS,G,CAGnF,IAAIy5B,EAAmB,KACnBC,EAAkB,KAClBp5B,EAAOuqB,SACLppB,EAAOiD,YACTg1B,EAAkBj4B,EAAOnB,OAAOyK,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,SAAWtC,EAAOsJ,QAAUtJ,EAAOsJ,QAAQ9G,OAAOjE,OAAS,EAAIyB,EAAOwC,OAAOjE,OAAS,EAC9IyB,EAAOkD,QAChB80B,EAAmB,IAIvB,IAAME,GAASP,EAAal1B,EAAWs1B,IAAcjU,EAC/CqU,EAAYJ,EAAYl5B,EAAOwkB,mBAAqB,EAAI,EAAIxkB,EAAOukB,eACzE,GAAIyU,EAAWh5B,EAAOu5B,aAAc,CAElC,IAAKv5B,EAAOw5B,WAEV,YADAr4B,EAAOuJ,QAAQvJ,EAAO+C,aAGM,SAA1B/C,EAAO+0B,iBACLmD,GAASr5B,EAAOy5B,gBAAiBt4B,EAAOuJ,QAAQ1K,EAAOuqB,QAAUppB,EAAOkD,MAAQ80B,EAAmBD,EAAYI,GAAgBn4B,EAAOuJ,QAAQwuB,IAEtH,SAA1B/3B,EAAO+0B,iBACLmD,EAAQ,EAAIr5B,EAAOy5B,gBACrBt4B,EAAOuJ,QAAQwuB,EAAYI,GACE,OAApBF,GAA4BC,EAAQ,GAAK10B,KAAK2f,IAAI+U,GAASr5B,EAAOy5B,gBAC3Et4B,EAAOuJ,QAAQ0uB,GAEfj4B,EAAOuJ,QAAQwuB,G,KAGd,CAEL,IAAKl5B,EAAO05B,YAEV,YADAv4B,EAAOuJ,QAAQvJ,EAAO+C,aAGE/C,EAAOw4B,aAAevsB,EAAEC,SAAWlM,EAAOw4B,WAAWC,QAAUxsB,EAAEC,SAAWlM,EAAOw4B,WAAWE,QAQ7GzsB,EAAEC,SAAWlM,EAAOw4B,WAAWC,OACxCz4B,EAAOuJ,QAAQwuB,EAAYI,GAE3Bn4B,EAAOuJ,QAAQwuB,IATe,SAA1B/3B,EAAO+0B,gBACT/0B,EAAOuJ,QAA6B,OAArByuB,EAA4BA,EAAmBD,EAAYI,GAE9C,SAA1Bn4B,EAAO+0B,gBACT/0B,EAAOuJ,QAA4B,OAApB0uB,EAA2BA,EAAkBF,G,EAvHN,C,uCCtB/C,SAAAY,IACb,IAAM34B,EAASC,KAEbpB,EAEEmB,EAFFnB,OACAD,EACEoB,EADFpB,GAEF,IAAIA,GAAyB,IAAnBA,EAAGob,YAAb,CAGInb,EAAOjB,aACToC,EAAOyI,gBAIT,IACE/E,EAGE1D,EAHF0D,eACAC,EAEE3D,EAFF2D,eACAjB,EACE1C,EADF0C,SAEIwe,EAAYlhB,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAG1DtC,EAAO0D,gBAAiB,EACxB1D,EAAO2D,gBAAiB,EACxB3D,EAAO8I,aACP9I,EAAO+I,eACP/I,EAAO8G,sBACP,IAAM8xB,EAAgB1X,GAAariB,EAAOvB,OACZ,SAAzBuB,EAAOwK,eAA4BxK,EAAOwK,cAAgB,KAAMrJ,EAAOkD,OAAUlD,EAAOiD,aAAgBjD,EAAOnB,OAAOiJ,gBAAmB8wB,EAGxI54B,EAAOnB,OAAOvB,OAAS4jB,EACzBlhB,EAAOisB,YAAYjsB,EAAOgD,UAAW,GAAG,GAAO,GAE/ChD,EAAOuJ,QAAQvJ,EAAO+C,YAAa,GAAG,GAAO,GAL/C/C,EAAOuJ,QAAQvJ,EAAOwC,OAAOjE,OAAS,EAAG,GAAG,GAAO,GAQjDyB,EAAO64B,UAAY74B,EAAO64B,SAASC,SAAW94B,EAAO64B,SAASE,SAChEnmB,aAAa5S,EAAO64B,SAASG,eAC7Bh5B,EAAO64B,SAASG,cAAgBrmB,YAAW,WACrC3S,EAAO64B,UAAY74B,EAAO64B,SAASC,SAAW94B,EAAO64B,SAASE,QAChE/4B,EAAO64B,SAASI,Q,GAEjB,MAGLj5B,EAAO2D,eAAiBA,EACxB3D,EAAO0D,eAAiBA,EACpB1D,EAAOnB,OAAO2K,eAAiB9G,IAAa1C,EAAO0C,UACrD1C,EAAOlC,eA3CuB,C,oFCNnB,SAAAo7B,EAAiBjtB,GAC9B,IAAMjM,EAASC,KACVD,EAAOsC,UACPtC,EAAO6E,aACN7E,EAAOnB,OAAOwzB,eAAepmB,EAAE6oB,iBAC/B90B,EAAOnB,OAAOyzB,0BAA4BtyB,EAAOsD,YACnD2I,EAAEuqB,kBACFvqB,EAAEktB,6B,oFCPO,SAAAC,IACb,IAAMp5B,EAASC,KAEb+K,EAGEhL,EAHFgL,UACAtB,EAEE1J,EAFF0J,aAGF,GADI1J,EADFsC,QAEF,CACAtC,EAAOmD,kBAAoBnD,EAAOhD,UAC9BgD,EAAO4C,eACT5C,EAAOhD,WAAagO,EAAUuN,WAE9BvY,EAAOhD,WAAagO,EAAUqN,UAGP,IAArBrY,EAAOhD,YAAiBgD,EAAOhD,UAAY,GAC/CgD,EAAO6G,oBACP7G,EAAO8G,sBAEP,IAAM8f,EAAiB5mB,EAAO2G,eAAiB3G,EAAOyG,gBAC/B,IAAnBmgB,EACY,GAEC5mB,EAAOhD,UAAYgD,EAAOyG,gBAAkBmgB,KAEzC5mB,EAAOoD,UACzBpD,EAAOgJ,eAAeU,GAAgB1J,EAAOhD,UAAYgD,EAAOhD,WAElEgD,EAAO6B,KAAK,eAAgB7B,EAAOhD,WAAW,EArBhC,C,kICPhB,IAAA4L,EAAApM,EAAA,SACe,SAAA68B,EAAgBptB,IAE7B,EAAArD,EAAAC,sBADe5I,KACcgM,EAAEC,QADhBjM,KAERnD,Q,qFCJT,IAAAw8B,EAAA98B,EAAA,S,aAEA+8B,EAAe,CACb9wB,cAAA6wB,EAAAz8B,QACA28B,cAAAC,EAAA58B,Q,oFCJF,IAAAwC,EAAA7C,EAAA,SACMk9B,EAAgB,SAAC15B,EAAQnB,GAC7B,OAAOmB,EAAOqiB,MAAQxjB,EAAOwjB,MAAQxjB,EAAOwjB,KAAKC,KAAO,C,EAE3C,SAAAqX,IACb,IAAM35B,EAASC,KAEb+C,EAIEhD,EAJFgD,UACAwI,EAGExL,EAHFwL,YACA3M,EAEEmB,EAFFnB,OACAD,EACEoB,EADFpB,GAEIhB,EAAciB,EAAOjB,YAC3B,GAAKA,KAAeA,GAAmD,IAApCmB,OAAOmD,KAAKtE,GAAaW,QAA5D,CAGA,IAAMq7B,EAAa55B,EAAOw5B,cAAc57B,EAAaoC,EAAOnB,OAAOg7B,gBAAiB75B,EAAOpB,IAC3F,GAAKg7B,GAAc55B,EAAO85B,oBAAsBF,EAAhD,CACA,IACMG,GADuBH,KAAch8B,EAAcA,EAAYg8B,QAAc91B,IAClC9D,EAAOgC,eAClDg4B,EAAcN,EAAc15B,EAAQnB,GACpCo7B,EAAaP,EAAc15B,EAAQ+5B,GACnCG,EAAar7B,EAAOyD,QACtB03B,IAAgBC,GAClBr7B,EAAGmL,UAAUC,OAAO,GAAiCpE,OAA9B/G,EAAOuI,uBAAuB,QAAO,GAAiCxB,OAA9B/G,EAAOuI,uBAAuB,gBAC7FpH,EAAOkK,yBACG8vB,GAAeC,IACzBr7B,EAAGmL,UAAUE,IAAI,GAAiCrE,OAA9B/G,EAAOuI,uBAAuB,UAC9C2yB,EAAiB1X,KAAK8X,MAAuC,WAA/BJ,EAAiB1X,KAAK8X,OAAsBJ,EAAiB1X,KAAK8X,MAA6B,WAArBt7B,EAAOwjB,KAAK8X,OACtHv7B,EAAGmL,UAAUE,IAAI,GAAiCrE,OAA9B/G,EAAOuI,uBAAuB,gBAEpDpH,EAAOkK,wBAIT,CAAC,aAAc,aAAc,aAAatK,SAAQ,SAAAwZ,GAChD,IAAMghB,EAAmBv7B,EAAOua,IAASva,EAAOua,GAAM9W,QAChD+3B,EAAkBN,EAAiB3gB,IAAS2gB,EAAiB3gB,GAAM9W,QACrE83B,IAAqBC,GACvBr6B,EAAOoZ,GAAMkhB,WAEVF,GAAoBC,GACvBr6B,EAAOoZ,GAAMmhB,Q,IAGjB,IAAMC,EAAmBT,EAAiBl3B,WAAak3B,EAAiBl3B,YAAchE,EAAOgE,UACvF43B,EAAc57B,EAAOvB,OAASy8B,EAAiB1wB,gBAAkBxK,EAAOwK,eAAiBmxB,GAC3FA,GAAoBhvB,GACtBxL,EAAO06B,mBAET,EAAAr7B,EAAAC,QAAOU,EAAOnB,OAAQk7B,GACtB,IAAMY,EAAY36B,EAAOnB,OAAOyD,QAChCvD,OAAOsD,OAAOrC,EAAQ,CACpB8E,eAAgB9E,EAAOnB,OAAOiG,eAC9BpB,eAAgB1D,EAAOnB,OAAO6E,eAC9BC,eAAgB3D,EAAOnB,OAAO8E,iBAE5Bu2B,IAAeS,EACjB36B,EAAOs6B,WACGJ,GAAcS,GACxB36B,EAAOu6B,SAETv6B,EAAO85B,kBAAoBF,EAC3B55B,EAAO6B,KAAK,oBAAqBk4B,GAC7BU,GAAejvB,IACjBxL,EAAOuM,cACPvM,EAAO8L,WAAW9I,GAClBhD,EAAO+I,gBAET/I,EAAO6B,KAAK,aAAck4B,EApDkC,CAJc,C,qFCb5E,IAAAv6B,EAAAhD,EAAA,SACe,SAAAo+B,EAAuBh9B,G,IAAai9B,EAAAv8B,UAAAC,OAAA,YAAAD,UAAA,GAAeA,UAAA,GAAR,SAAUuB,EAAWvB,UAAAC,OAAA,EAAAD,UAAA,UAC7E,GAAKV,IAAwB,cAATi9B,GAAyBh7B,GAA7C,CACA,IAAI+5B,GAAa,EACXxmB,GAAS,EAAA5T,EAAAsU,aACTgnB,EAAyB,WAATD,EAAoBznB,EAAO2nB,YAAcl7B,EAAY4gB,aACrEua,EAASj8B,OAAOmD,KAAKtE,GAAa6W,KAAI,SAAAwmB,GAC1C,GAAqB,iBAAVA,GAA6C,IAAvBA,EAAM9zB,QAAQ,KAAY,CACzD,IAAM+zB,EAAWjmB,WAAWgmB,EAAME,OAAO,IAEzC,MAAO,CACLxtB,MAFYmtB,EAAgBI,EAG5BD,Q,CAGJ,MAAO,CACLttB,MAAOstB,EACPA,Q,IAGJD,EAAOI,MAAK,SAAC1mB,EAAG2mB,G,OAAM3a,SAAShM,EAAE/G,MAAO,IAAM+S,SAAS2a,EAAE1tB,MAAO,G,IAChE,IAAK,IAAIzF,EAAI,EAAGA,EAAI8yB,EAAOz8B,OAAQ2J,GAAK,EAAG,CACzC,IAGIozB,EAAAN,EAAO9yB,GAFTqzB,EAEED,EAFFL,MACAO,EACEF,EADF3tB,MAEW,WAATktB,EACEznB,EAAOP,WAAW,eAAqBjN,OAAN41B,EAAM,QAAM5jB,UAC/CgiB,EAAa2B,GAENC,GAAS37B,EAAY2gB,cAC9BoZ,EAAa2B,E,CAGjB,OAAO3B,GAAc,KAhCqD,C,qFCF5E,IAAA6B,EAAAj/B,EAAA,S,aAEAk/B,EAAe,CACbhwB,WAAA+vB,EAAA5+B,QACA2P,cAAAmvB,EAAA9+B,Q,oFCJF,IAAAoE,EAAAzE,EAAA,SAee,SAAAo/B,I,IA+BbC,EACA9jB,EA/CsBiF,EAAS8e,EACzBC,EAeA/7B,EAASC,KAEbsC,EAKEvC,EALFuC,WACA1D,EAIEmB,EAJFnB,OACAyL,EAGEtK,EAHFsK,IACA1L,EAEEoB,EAFFpB,GACA0B,EACEN,EADFM,OAGI07B,GAzBgBhf,EAyBU,CAAC,cAAene,EAAOgE,UAAW,CAChE,YAAa7C,EAAOnB,OAAOoK,UAAYpK,EAAOoK,SAAS3G,SACtD,CACD25B,WAAcp9B,EAAOsK,YACpB,CACDmB,IAAOA,GACN,CACD+X,KAAQxjB,EAAOwjB,MAAQxjB,EAAOwjB,KAAKC,KAAO,GACzC,CACD,cAAezjB,EAAOwjB,MAAQxjB,EAAOwjB,KAAKC,KAAO,GAA0B,WAArBzjB,EAAOwjB,KAAK8X,MACjE,CACDtf,QAAWva,EAAOua,SACjB,CACDD,IAAOta,EAAOsa,KACb,CACD,WAAY/b,EAAOqjB,SAClB,CACDga,SAAYr9B,EAAOqjB,SAAWrjB,EAAOiJ,gBACpC,CACD,iBAAkBjJ,EAAOimB,sBA5CIgX,EA6C3Bj9B,EAAOuI,uBA5CL20B,EAAgB,GACtB/e,EAAQpd,SAAQ,SAAAu8B,GACM,iBAATA,EACTp9B,OAAOmD,KAAKi6B,GAAMv8B,SAAQ,SAAA2C,GACpB45B,EAAK55B,IACPw5B,EAAch8B,KAAK+7B,EAASv5B,E,IAGP,iBAAT45B,GAChBJ,EAAch8B,KAAK+7B,EAASK,E,IAGzBJ,IAiCPF,EAAAt5B,GAAWxC,KAAXqB,MAAAy6B,EAAgB76B,EAAAC,EAAA,CAAG+6B,KACnBjkB,EAAAnZ,EAAGmL,WAAUE,IAAb7I,MAAA2W,EAAiB/W,EAAAC,EAAA,CAAGsB,IACpBvC,EAAOkK,sB,qFChDT,IAAAjJ,EAAAzE,EAAA,SAAe,SAAA4/B,I,IAMbrkB,EALM/X,EAASC,KAEbrB,EAEEoB,EAFFpB,GACA2D,EACEvC,EADFuC,YAEFwV,EAAAnZ,EAAGmL,WAAUC,OAAb5I,MAAA2W,EAAoB/W,EAAAC,EAAA,CAAGsB,IACvBvC,EAAOkK,sB,yFCsBTmyB,EAAe,CACbv+B,cA9BF,WACE,IAAMkC,EAASC,KAEbq8B,EAEEt8B,EAFFsxB,SACAzyB,EACEmB,EADFnB,OAEIyiB,EAEFziB,EADFyiB,mBAEF,GAAIA,EAAoB,CACtB,IAAM4F,EAAiBlnB,EAAOwC,OAAOjE,OAAS,EACxCg+B,EAAqBv8B,EAAOyC,WAAWykB,GAAkBlnB,EAAO2C,gBAAgBukB,GAAuC,EAArB5F,EACxGthB,EAAOsxB,SAAWtxB,EAAO4H,KAAO20B,C,MAEhCv8B,EAAOsxB,SAAsC,IAA3BtxB,EAAO0C,SAASnE,QAEN,IAA1BM,EAAO6E,iBACT1D,EAAO0D,gBAAkB1D,EAAOsxB,WAEJ,IAA1BzyB,EAAO8E,iBACT3D,EAAO2D,gBAAkB3D,EAAOsxB,UAE9BgL,GAAaA,IAAct8B,EAAOsxB,WACpCtxB,EAAOkD,OAAQ,GAEbo5B,IAAct8B,EAAOsxB,UACvBtxB,EAAO6B,KAAK7B,EAAOsxB,SAAW,OAAS,S,sFC1B3C,IAAAkL,EAAe,CACbj3B,MAAM,EACN1C,UAAW,aACX+zB,gBAAgB,EAChBrF,kBAAmB,UACnB5lB,aAAc,EACdrF,MAAO,IACP4b,SAAS,EACTuQ,sBAAsB,EACtB3V,gBAAgB,EAChBgV,QAAQ,EACR5mB,gBAAgB,EAChB5I,SAAS,EACTgC,kBAAmB,wDAEnB8F,MAAO,KACPC,OAAQ,KAERwgB,gCAAgC,EAEhCpqB,UAAW,KACXg8B,IAAK,KAELhI,oBAAoB,EACpBE,mBAAoB,GAEpBxrB,YAAY,EAEZoa,gBAAgB,EAEhB2G,kBAAkB,EAElB5G,OAAQ,QAIR1lB,iBAAakG,EACb+1B,gBAAiB,SAEjBlY,aAAc,EACdtY,cAAe,EACf+Z,eAAgB,EAChBC,mBAAoB,EACpBqK,oBAAoB,EACpB5lB,gBAAgB,EAChBoc,sBAAsB,EACtB5C,mBAAoB,EAEpBE,kBAAmB,EAEnB+G,qBAAqB,EACrBhE,0BAA0B,EAE1B/a,eAAe,EAEfqZ,cAAc,EAEdgU,WAAY,EACZV,WAAY,GACZ9E,eAAe,EACfkH,aAAa,EACbF,YAAY,EACZC,gBAAiB,GACjBF,aAAc,IACdZ,cAAc,EACd1yB,gBAAgB,EAChB2pB,UAAW,EACX8H,0BAA0B,EAC1BtB,0BAA0B,EAC1BC,+BAA+B,EAC/BW,qBAAqB,EAErB6G,mBAAmB,EAEnBnF,YAAY,EACZD,gBAAiB,IAEjBxS,qBAAqB,EAErBtnB,YAAY,EAEZ60B,eAAe,EACfC,0BAA0B,EAC1B7I,qBAAqB,EAErBnsB,MAAM,EACN0xB,aAAc,KACdpB,qBAAqB,EAErBxE,QAAQ,EAERzlB,gBAAgB,EAChBD,gBAAgB,EAChB4wB,aAAc,KAEdN,WAAW,EACXN,eAAgB,oBAChBI,kBAAmB,KAEnB6I,kBAAkB,EAClBzX,wBAAyB,GAEzB9d,uBAAwB,UAExBvB,WAAY,eACZ8G,iBAAkB,sBAClBD,kBAAmB,uBACnBE,eAAgB,oBAChBC,eAAgB,oBAChB/B,aAAc,iBACd+d,mBAAoB,wBACpBI,oBAAqB,EAErBpd,oBAAoB,EAEpB9E,cAAc,E,oFCnHhB,IAAA1H,EAAA7C,EAAA,SACe,SAAAogC,EAA4B/9B,EAAQwC,GACjD,OAAO,W,IAAsBwN,EAAAvQ,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAF,GAC3Bu+B,EAAkB99B,OAAOmD,KAAK2M,GAAK,GACnCiuB,EAAejuB,EAAIguB,GACG,iBAAjBC,GAA8C,OAAjBA,GAIpC,CAAC,aAAc,aAAc,aAAa31B,QAAQ01B,IAAoB,IAAiC,IAA5Bh+B,EAAOg+B,KACpFh+B,EAAOg+B,GAAmB,CACxBE,MAAM,IAGJF,KAAmBh+B,GAAU,YAAai+B,IAIhB,IAA5Bj+B,EAAOg+B,KACTh+B,EAAOg+B,GAAmB,CACxBv6B,SAAS,IAG0B,iBAA5BzD,EAAOg+B,IAAmC,YAAah+B,EAAOg+B,KACvEh+B,EAAOg+B,GAAiBv6B,SAAU,GAE/BzD,EAAOg+B,KAAkBh+B,EAAOg+B,GAAmB,CACtDv6B,SAAS,KAEX,EAAAjD,EAAAC,QAAO+B,EAAkBwN,KAdvB,EAAAxP,EAAAC,QAAO+B,EAAkBwN,KATzB,EAAAxP,EAAAC,QAAO+B,EAAkBwN,E,wCCN/BrS,EAAA,S,2DCCAA,EAAA,S,gDCAAA,EAAA,S,gDCDAA,EAAA,S,8FCAA,IAAA6C,EAAA7C,EAAA,SACe,SAAAwgC,EAAmCh9B,EAAQgC,EAAgBnD,EAAQo+B,GAehF,OAdIj9B,EAAOnB,OAAOqM,gBAChBnM,OAAOmD,KAAK+6B,GAAYr9B,SAAQ,SAAA4F,GAC9B,IAAK3G,EAAO2G,KAAwB,IAAhB3G,EAAOk+B,KAAe,CACxC,IAAIvyB,GAAU,EAAAnL,EAAAsG,iBAAgB3F,EAAOpB,GAAI,IAAoBgH,OAAhBq3B,EAAWz3B,KAAQ,GAC3DgF,KACHA,GAAU,EAAAnL,EAAA8L,eAAc,MAAO8xB,EAAWz3B,KAClCyB,UAAYg2B,EAAWz3B,GAC/BxF,EAAOpB,GAAGwM,OAAOZ,IAEnB3L,EAAO2G,GAAOgF,EACdxI,EAAewD,GAAOgF,C,KAIrB3L,C,qFChBT,IAAAoC,EAAAzE,EAAA,S,uCAGe,SAAA0gC,EAAoB3mB,G,IA2C7B4mB,EA1CJn9B,EADiCuW,EACjCvW,OACAuB,EAFiCgV,EAEjChV,aACAE,EAHiC8U,EAGjC9U,GACAI,EAJiC0U,EAIjC1U,KAEMu7B,EAAM,oBACZ77B,EAAa,CACX87B,WAAY,CACVz+B,GAAI,KACJ0+B,cAAe,OACfC,WAAW,EACXC,aAAa,EACbC,aAAc,KACdC,kBAAmB,KACnBC,eAAgB,KAChBC,aAAc,KACdC,qBAAqB,EACrBnG,KAAM,UAENoG,gBAAgB,EAChBC,mBAAoB,EACpBC,sBAAuB,SAAAC,G,OAAUA,C,EACjCC,oBAAqB,SAAAD,G,OAAUA,C,EAC/BE,YAAa,GAAOv4B,OAAJw3B,EAAI,WACpBgB,kBAAmB,GAAOx4B,OAAJw3B,EAAI,kBAC1BiB,cAAe,GAAOz4B,OAAJw3B,EAAI,KACtBkB,aAAc,GAAO14B,OAAJw3B,EAAI,YACrBmB,WAAY,GAAO34B,OAAJw3B,EAAI,UACnBoB,YAAa,GAAO54B,OAAJw3B,EAAI,WACpBqB,qBAAsB,GAAO74B,OAAJw3B,EAAI,qBAC7BsB,yBAA0B,GAAO94B,OAAJw3B,EAAI,yBACjCuB,eAAgB,GAAO/4B,OAAJw3B,EAAI,cACvBwB,UAAW,GAAOh5B,OAAJw3B,EAAI,SAClByB,gBAAiB,GAAOj5B,OAAJw3B,EAAI,eACxB0B,cAAe,GAAOl5B,OAAJw3B,EAAI,aACtB2B,wBAAyB,GAAOn5B,OAAJw3B,EAAI,gBAGpCp9B,EAAOq9B,WAAa,CAClBz+B,GAAI,KACJogC,QAAS,IAGX,IAAIC,EAAqB,EACnBC,EAAoB,SAAAtgC,GAExB,OADKH,MAAM0C,QAAQvC,KAAKA,EAAK,CAACA,GAAIsH,QAAO,SAAA+F,G,QAAOA,C,KACzCrN,C,EAET,SAASugC,IACP,OAAQn/B,EAAOnB,OAAOw+B,WAAWz+B,KAAOoB,EAAOq9B,WAAWz+B,IAAMH,MAAM0C,QAAQnB,EAAOq9B,WAAWz+B,KAAuC,IAAhCoB,EAAOq9B,WAAWz+B,GAAGL,M,CAE9H,SAAS6gC,EAAeC,EAAUC,GAChC,IAAMlB,EAEFp+B,EAAOnB,OAAOw+B,WADhBe,kBAEGiB,IACLA,EAAWA,EAAS,GAA6Cz5B,OAA7B,SAAb05B,EAAsB,WAAa,OAAO,sBAE/DD,EAASt1B,UAAUE,IAAI,GAAwBrE,OAArBw4B,EAAkB,KAAYx4B,OAAT05B,KAC/CD,EAAWA,EAAS,GAA6Cz5B,OAA7B,SAAb05B,EAAsB,WAAa,OAAO,qBAE/DD,EAASt1B,UAAUE,IAAI,GAAwBrE,OAArBw4B,EAAkB,KAAex4B,OAAZ05B,EAAS,KAAY15B,OAAT05B,I,CAIjE,SAASC,EAActzB,GACrB,IAAMozB,EAAWpzB,EAAEC,OAAOyc,SAAQ,EAAA6W,EAAA3iC,SAAkBmD,EAAOnB,OAAOw+B,WAAWc,cAC7E,GAAKkB,EAAL,CAGApzB,EAAE6oB,iBACF,IAAM9uB,GAAQ,EAAA3G,EAAA0G,cAAas5B,GAAYr/B,EAAOnB,OAAOukB,eACrD,GAAIpjB,EAAOnB,OAAOvB,KAAM,CACtB,GAAI0C,EAAOgD,YAAcgD,EAAO,OAChC,IAAMy5B,EAAgBz/B,EAAOulB,oBAAoBvf,GAC3C05B,EAAoB1/B,EAAOulB,oBAAoBvlB,EAAOgD,WACxDy8B,EAAgBz/B,EAAOwC,OAAOjE,OAASyB,EAAOgvB,cAChDhvB,EAAO6tB,QAAQ,CACbhrB,UAAW48B,EAAgBC,EAAoB,OAAS,OACxDhQ,iBAAkB+P,EAClBl2B,SAAS,IAGbvJ,EAAOisB,YAAYjmB,E,MAEnBhG,EAAOuJ,QAAQvD,EAjBf,C,CAoBJ,SAASlJ,IAEP,IAAMwN,EAAMtK,EAAOsK,IACbzL,EAASmB,EAAOnB,OAAOw+B,WAC7B,IAAI8B,IAAJ,CACA,IAGIz4B,EACAwhB,EAJAtpB,EAAKoB,EAAOq9B,WAAWz+B,GAC3BA,EAAKsgC,EAAkBtgC,GAIvB,IAAMwiB,EAAephB,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAAUtC,EAAOsJ,QAAQ9G,OAAOjE,OAASyB,EAAOwC,OAAOjE,OAC9GohC,EAAQ3/B,EAAOnB,OAAOvB,KAAOkG,KAAKogB,KAAKxC,EAAephB,EAAOnB,OAAOukB,gBAAkBpjB,EAAO0C,SAASnE,OAY5G,GAXIyB,EAAOnB,OAAOvB,MAChB4qB,EAAgBloB,EAAOmoB,mBAAqB,EAC5CzhB,EAAU1G,EAAOnB,OAAOukB,eAAiB,EAAI5f,KAAK0f,MAAMljB,EAAOgD,UAAYhD,EAAOnB,OAAOukB,gBAAkBpjB,EAAOgD,gBAC7E,IAArBhD,EAAO0kB,WACvBhe,EAAU1G,EAAO0kB,UACjBwD,EAAgBloB,EAAOooB,oBAEvBF,EAAgBloB,EAAOkoB,eAAiB,EACxCxhB,EAAU1G,EAAO+C,aAAe,GAGd,YAAhBlE,EAAO64B,MAAsB13B,EAAOq9B,WAAW2B,SAAWh/B,EAAOq9B,WAAW2B,QAAQzgC,OAAS,EAAG,CAClG,IACIqhC,EACAtR,EACAuR,EAHEb,EAAUh/B,EAAOq9B,WAAW2B,QAyBlC,GArBIngC,EAAOi/B,iBACTX,GAAa,EAAA99B,EAAAyjB,kBAAiBkc,EAAQ,GAAIh/B,EAAO4C,eAAiB,QAAU,UAAU,GACtFhE,EAAGgB,SAAQ,SAAAkgC,GACTA,EAAM31B,MAAMnK,EAAO4C,eAAiB,QAAU,UAAY,GAAgDgD,OAA7Cu3B,GAAct+B,EAAOk/B,mBAAqB,GAAG,K,IAExGl/B,EAAOk/B,mBAAqB,QAAuBj6B,IAAlBokB,KACnC+W,GAAsBv4B,GAAWwhB,GAAiB,IACzBrpB,EAAOk/B,mBAAqB,EACnDkB,EAAqBpgC,EAAOk/B,mBAAqB,EACxCkB,EAAqB,IAC9BA,EAAqB,IAGzBW,EAAap8B,KAAKgD,IAAIE,EAAUu4B,EAAoB,GAEpDY,IADAvR,EAAYsR,GAAcp8B,KAAK+C,IAAIy4B,EAAQzgC,OAAQM,EAAOk/B,oBAAsB,IACxD6B,GAAc,GAExCZ,EAAQp/B,SAAQ,SAAAy/B,G,IAEdtnB,EADMgoB,EAAmB/+B,EAAAC,EAAD,CAAI,CAAC,GAAI,QAAS,aAAc,QAAS,aAAc,SAASwT,KAAI,SAAAurB,G,MAAU,GAA8Bp6B,OAA3B/G,EAAOu/B,mBAA2Bx4B,OAAPo6B,E,KAAWvrB,KAAI,SAAAwrB,G,MAAkB,iBAANA,GAAkBA,EAAEhkB,SAAS,KAAOgkB,EAAE/4B,MAAM,KAAO+4B,C,IAAGC,QACrNnoB,EAAAsnB,EAASt1B,WAAUC,OAAnB5I,MAAA2W,EAA0B/W,EAAAC,EAAA,CAAG8+B,G,IAE3BnhC,EAAGL,OAAS,EACdygC,EAAQp/B,SAAQ,SAAAugC,G,IAGZpoB,EAIEqoB,EANEC,GAAc,EAAAhhC,EAAA0G,cAAao6B,IAC7BE,IAAgB35B,IAClBqR,EAAAooB,EAAOp2B,WAAUE,IAAjB7I,MAAA2W,EAAqB/W,EAAAC,EAAA,CAAGpC,EAAOu/B,kBAAkBl3B,MAAM,OAErDrI,EAAOi/B,kBACLuC,GAAeT,GAAcS,GAAe/R,IAC9C8R,EAAAD,EAAOp2B,WAAUE,IAAjB7I,MAAAg/B,EAAqBp/B,EAAAC,EAAA,CAAG,GAA4B2E,OAAzB/G,EAAOu/B,kBAAkB,SAAOl3B,MAAM,OAE/Dm5B,IAAgBT,GAClBR,EAAee,EAAQ,QAErBE,IAAgB/R,GAClB8Q,EAAee,EAAQ,Q,QAIxB,C,IAGHG,EAFIC,EAASvB,EAAQt4B,GAIvB,GAHI65B,IACFD,EAAAC,EAAOx2B,WAAUE,IAAjB7I,MAAAk/B,EAAqBt/B,EAAAC,EAAA,CAAGpC,EAAOu/B,kBAAkBl3B,MAAM,OAErDrI,EAAOi/B,eAAgB,CAGzB,I,IAEI0C,EAJEC,EAAuBzB,EAAQY,GAC/Bc,EAAsB1B,EAAQ1Q,GAC3BpmB,EAAI03B,EAAY13B,GAAKomB,EAAWpmB,GAAK,EACxC82B,EAAQ92B,KACVs4B,EAAAxB,EAAQ92B,GAAG6B,WAAUE,IAArB7I,MAAAo/B,EAAyBx/B,EAAAC,EAAA,CAAG,GAA4B2E,OAAzB/G,EAAOu/B,kBAAkB,SAAOl3B,MAAM,OAGzEk4B,EAAeqB,EAAsB,QACrCrB,EAAesB,EAAqB,O,EAGxC,GAAI7hC,EAAOi/B,eAAgB,CACzB,IAAM6C,EAAuBn9B,KAAK+C,IAAIy4B,EAAQzgC,OAAQM,EAAOk/B,mBAAqB,GAC5E6C,GAAiBzD,EAAawD,EAAuBxD,GAAc,EAAI0C,EAAW1C,EAClF0D,EAAav2B,EAAM,QAAU,OACnC00B,EAAQp/B,SAAQ,SAAAugC,GACdA,EAAOh2B,MAAMnK,EAAO4C,eAAiBi+B,EAAa,OAAS,GAAiBj7B,OAAdg7B,EAAc,K,KAIlFhiC,EAAGgB,SAAQ,SAACkgC,EAAOgB,GASjB,GARoB,aAAhBjiC,EAAO64B,OACToI,EAAMpgC,kBAAiB,EAAA8/B,EAAA3iC,SAAkBgC,EAAOy/B,eAAe1+B,SAAQ,SAAAmhC,GACrEA,EAAWC,YAAcniC,EAAOm/B,sBAAsBt3B,EAAU,E,IAElEo5B,EAAMpgC,kBAAiB,EAAA8/B,EAAA3iC,SAAkBgC,EAAO0/B,aAAa3+B,SAAQ,SAAAqhC,GACnEA,EAAQD,YAAcniC,EAAOq/B,oBAAoByB,E,KAGjC,gBAAhB9gC,EAAO64B,KAAwB,CACjC,IAAIwJ,EAEFA,EADEriC,EAAOg/B,oBACc79B,EAAO4C,eAAiB,WAAa,aAErC5C,EAAO4C,eAAiB,aAAe,WAEhE,IAAMu+B,GAASz6B,EAAU,GAAKi5B,EAC1ByB,EAAS,EACTC,EAAS,EACgB,eAAzBH,EACFE,EAASD,EAETE,EAASF,EAEXrB,EAAMpgC,kBAAiB,EAAA8/B,EAAA3iC,SAAkBgC,EAAO4/B,uBAAuB7+B,SAAQ,SAAA0hC,GAC7EA,EAAWn3B,MAAMoK,UAAY,6BAA+C3O,OAAlBw7B,EAAO,aAAkBx7B,OAAPy7B,EAAO,KACnFC,EAAWn3B,MAAMshB,mBAAqB,GAAuB7lB,OAApB5F,EAAOnB,OAAOyH,MAAM,K,IAG7C,WAAhBzH,EAAO64B,MAAqB74B,EAAO++B,cACrCkC,EAAMyB,UAAY1iC,EAAO++B,aAAa59B,EAAQ0G,EAAU,EAAGi5B,GACxC,IAAfmB,GAAkBj/B,EAAK,mBAAoBi+B,KAE5B,IAAfgB,GAAkBj/B,EAAK,mBAAoBi+B,GAC/Cj+B,EAAK,mBAAoBi+B,IAEvB9/B,EAAOnB,OAAO2K,eAAiBxJ,EAAOsC,SACxCw9B,EAAM/1B,UAAU/J,EAAOsxB,SAAW,MAAQ,UAAUzyB,EAAO+/B,U,GA9HnC,C,CAkI9B,SAAS4C,IAEP,IAAM3iC,EAASmB,EAAOnB,OAAOw+B,WAC7B,IAAI8B,IAAJ,CACA,IAAM/d,EAAephB,EAAOsJ,SAAWtJ,EAAOnB,OAAOyK,QAAQhH,QAAUtC,EAAOsJ,QAAQ9G,OAAOjE,OAASyB,EAAOwC,OAAOjE,OAChHK,EAAKoB,EAAOq9B,WAAWz+B,GAC3BA,EAAKsgC,EAAkBtgC,GACvB,IAAI6iC,EAAiB,GACrB,GAAoB,YAAhB5iC,EAAO64B,KAAoB,CAC7B,IAAIgK,EAAkB1hC,EAAOnB,OAAOvB,KAAOkG,KAAKogB,KAAKxC,EAAephB,EAAOnB,OAAOukB,gBAAkBpjB,EAAO0C,SAASnE,OAChHyB,EAAOnB,OAAOoK,UAAYjJ,EAAOnB,OAAOoK,SAAS3G,SAAWo/B,EAAkBtgB,IAChFsgB,EAAkBtgB,GAEpB,IAAK,IAAIlZ,EAAI,EAAGA,EAAIw5B,EAAiBx5B,GAAK,EACpCrJ,EAAO4+B,aACTgE,GAAkB5iC,EAAO4+B,aAAav+B,KAAKc,EAAQkI,EAAGrJ,EAAOs/B,aAE7DsD,GAAkB,IAAmC77B,OAA/B/G,EAAOy+B,cAAc,YAAmC13B,OAAzB/G,EAAOs/B,YAAY,QAA2Bv4B,OAArB/G,EAAOy+B,cAAc,I,CAIrF,aAAhBz+B,EAAO64B,OAEP+J,EADE5iC,EAAO8+B,eACQ9+B,EAAO8+B,eAAez+B,KAAKc,EAAQnB,EAAOy/B,aAAcz/B,EAAO0/B,YAE/D,gBAAoC34B,OAApB/G,EAAOy/B,aAAa,aAAa,MAAQ,gBAAkC14B,OAAlB/G,EAAO0/B,WAAW,cAG5F,gBAAhB1/B,EAAO64B,OAEP+J,EADE5iC,EAAO6+B,kBACQ7+B,EAAO6+B,kBAAkBx+B,KAAKc,EAAQnB,EAAO4/B,sBAE7C,gBAA4C74B,OAA5B/G,EAAO4/B,qBAAqB,cAGjEz+B,EAAOq9B,WAAW2B,QAAU,GAC5BpgC,EAAGgB,SAAQ,SAAAkgC,G,IAKP6B,EAJkB,WAAhB9iC,EAAO64B,OACToI,EAAMyB,UAAYE,GAAkB,IAElB,YAAhB5iC,EAAO64B,OACTiK,EAAA3hC,EAAOq9B,WAAW2B,SAAQj/B,KAA1BqB,MAAAugC,EAA+B3gC,EAAAC,EAAA,CAAG6+B,EAAMpgC,kBAAiB,EAAA8/B,EAAA3iC,SAAkBgC,EAAOs/B,e,IAGlE,WAAhBt/B,EAAO64B,MACT71B,EAAK,mBAAoBjD,EAAG,GA1CF,C,CA6C9B,SAAS2G,IACPvF,EAAOnB,OAAOw+B,YAAa,EAAAuE,EAAA/kC,SAA0BmD,EAAQA,EAAOgC,eAAeq7B,WAAYr9B,EAAOnB,OAAOw+B,WAAY,CACvHz+B,GAAI,sBAEN,IAEIA,EAFEC,EAASmB,EAAOnB,OAAOw+B,WACxBx+B,EAAOD,KAEa,iBAAdC,EAAOD,IAAmBoB,EAAO4K,YAC1ChM,EAAKoB,EAAOpB,GAAGqM,WAAWP,cAAc7L,EAAOD,KAE5CA,GAA2B,iBAAdC,EAAOD,KACvBA,EAAMoC,EAAAC,EAAA,CAAG1B,SAASG,iBAAiBb,EAAOD,MAEvCA,IACHA,EAAKC,EAAOD,IAETA,GAAoB,IAAdA,EAAGL,SACVyB,EAAOnB,OAAO69B,mBAA0C,iBAAd79B,EAAOD,IAAmBH,MAAM0C,QAAQvC,IAAOA,EAAGL,OAAS,IACvGK,EAAMoC,EAAAC,EAAA,CAAGjB,EAAOpB,GAAGc,iBAAiBb,EAAOD,MAEpCL,OAAS,IACdK,EAAKA,EAAGsH,QAAO,SAAA45B,GACb,OAAI,EAAAzgC,EAAAof,gBAAeqhB,EAAO,WAAW,KAAO9/B,EAAOpB,E,IAElD,IAGHH,MAAM0C,QAAQvC,IAAqB,IAAdA,EAAGL,SAAcK,EAAKA,EAAG,IAClDG,OAAOsD,OAAOrC,EAAOq9B,WAAY,CAC/Bz+B,QAEFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,GACW,YAAhBjhC,EAAO64B,MAAsB74B,EAAO0+B,WACtCuC,EAAM/1B,UAAUE,IAAIpL,EAAO8/B,gBAE7BmB,EAAM/1B,UAAUE,IAAIpL,EAAOw/B,cAAgBx/B,EAAO64B,MAClDoI,EAAM/1B,UAAUE,IAAIjK,EAAO4C,eAAiB/D,EAAOggC,gBAAkBhgC,EAAOigC,eACxD,YAAhBjgC,EAAO64B,MAAsB74B,EAAOi/B,iBACtCgC,EAAM/1B,UAAUE,IAAI,GAA0BrE,OAAvB/G,EAAOw/B,eAA4Bz4B,OAAZ/G,EAAO64B,KAAK,aAC1DuH,EAAqB,EACjBpgC,EAAOk/B,mBAAqB,IAC9Bl/B,EAAOk/B,mBAAqB,IAGZ,gBAAhBl/B,EAAO64B,MAA0B74B,EAAOg/B,qBAC1CiC,EAAM/1B,UAAUE,IAAIpL,EAAO6/B,0BAEzB7/B,EAAO0+B,WACTuC,EAAM9zB,iBAAiB,QAASuzB,GAE7Bv/B,EAAOsC,SACVw9B,EAAM/1B,UAAUE,IAAIpL,EAAO+/B,U,MAIjC,SAASiD,I,IAemE9pB,EAdpElZ,EAASmB,EAAOnB,OAAOw+B,WAC7B,IAAI8B,IAAJ,CACA,IAAIvgC,EAAKoB,EAAOq9B,WAAWz+B,GACvBA,IACFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,GACTA,EAAM/1B,UAAUC,OAAOnL,EAAO2/B,aAC9BsB,EAAM/1B,UAAUC,OAAOnL,EAAOw/B,cAAgBx/B,EAAO64B,MACrDoI,EAAM/1B,UAAUC,OAAOhK,EAAO4C,eAAiB/D,EAAOggC,gBAAkBhgC,EAAOigC,eAC3EjgC,EAAO0+B,WACTuC,EAAMxvB,oBAAoB,QAASivB,E,IAIrCv/B,EAAOq9B,WAAW2B,SAASh/B,EAAOq9B,WAAW2B,QAAQp/B,SAAQ,SAAAkgC,G,OAAS/nB,EAAA+nB,EAAM/1B,WAAUC,OAAhB5I,MAAA2W,EAAuB/W,EAAAC,EAAA,CAAGpC,EAAOu/B,kBAAkBl3B,MAAM,M,GAbvG,C,CAe9BzF,EAAG,mBAAmB,WACpB,GAAKzB,EAAOq9B,YAAer9B,EAAOq9B,WAAWz+B,GAA7C,CACA,IAAMC,EAASmB,EAAOnB,OAAOw+B,WACzBz+B,EAEAoB,EAAOq9B,WADTz+B,IAEFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,GACTA,EAAM/1B,UAAUC,OAAOnL,EAAOggC,gBAAiBhgC,EAAOigC,eACtDgB,EAAM/1B,UAAUE,IAAIjK,EAAO4C,eAAiB/D,EAAOggC,gBAAkBhgC,EAAOigC,c,GAR7B,C,IAWnDr9B,EAAG,QAAQ,YACgC,IAArCzB,EAAOnB,OAAOw+B,WAAW/6B,QAE3Bg4B,KAEA/0B,IACAi8B,IACA1kC,I,IAGJ2E,EAAG,qBAAqB,gBACU,IAArBzB,EAAO0kB,WAChB5nB,G,IAGJ2E,EAAG,mBAAmB,WACpB3E,G,IAEF2E,EAAG,wBAAwB,WACzB+/B,IACA1kC,G,IAEF2E,EAAG,WAAW,WACZogC,G,IAEFpgC,EAAG,kBAAkB,WACnB,IAAI7C,EAEAoB,EAAOq9B,WADTz+B,GAEEA,IACFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,G,OAASA,EAAM/1B,UAAU/J,EAAOsC,QAAU,SAAW,OAAOtC,EAAOnB,OAAOw+B,WAAWuB,U,OAGpGn9B,EAAG,eAAe,WAChB3E,G,IAEF2E,EAAG,SAAS,SAACqgC,EAAI71B,GACf,IAAMqnB,EAAWrnB,EAAEC,OACftN,EAEAoB,EAAOq9B,WADTz+B,GAGF,GADKH,MAAM0C,QAAQvC,KAAKA,EAAK,CAACA,GAAIsH,QAAO,SAAAsE,G,QAAaA,C,KAClDxK,EAAOnB,OAAOw+B,WAAWz+B,IAAMoB,EAAOnB,OAAOw+B,WAAWG,aAAe5+B,GAAMA,EAAGL,OAAS,IAAM+0B,EAASvpB,UAAUkb,SAASjlB,EAAOnB,OAAOw+B,WAAWc,aAAc,CACpK,GAAIn+B,EAAOw4B,aAAex4B,EAAOw4B,WAAWC,QAAUnF,IAAatzB,EAAOw4B,WAAWC,QAAUz4B,EAAOw4B,WAAWE,QAAUpF,IAAatzB,EAAOw4B,WAAWE,QAAS,OACnK,IAAMqJ,EAAWnjC,EAAG,GAAGmL,UAAUkb,SAASjlB,EAAOnB,OAAOw+B,WAAWmB,aAEjE38B,GADe,IAAbkgC,EACG,iBAEA,kBAEPnjC,EAAGgB,SAAQ,SAAAkgC,G,OAASA,EAAM/1B,UAAUi4B,OAAOhiC,EAAOnB,OAAOw+B,WAAWmB,Y,QAGxE,IAaMlE,EAAU,WACdt6B,EAAOpB,GAAGmL,UAAUE,IAAIjK,EAAOnB,OAAOw+B,WAAW0B,yBACjD,IAAIngC,EAEAoB,EAAOq9B,WADTz+B,GAEEA,IACFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,G,OAASA,EAAM/1B,UAAUE,IAAIjK,EAAOnB,OAAOw+B,WAAW0B,wB,IAEnE8C,G,EAEF9iC,OAAOsD,OAAOrC,EAAOq9B,WAAY,CAC/B9C,OAzBa,WACbv6B,EAAOpB,GAAGmL,UAAUC,OAAOhK,EAAOnB,OAAOw+B,WAAW0B,yBACpD,IAAIngC,EAEAoB,EAAOq9B,WADTz+B,GAEEA,IACFA,EAAKsgC,EAAkBtgC,IACpBgB,SAAQ,SAAAkgC,G,OAASA,EAAM/1B,UAAUC,OAAOhK,EAAOnB,OAAOw+B,WAAW0B,wB,IAEtEx5B,IACAi8B,IACA1kC,G,EAeAw9B,UACAkH,SACA1kC,SACAyI,OACAs8B,W,uCC3bW,SAAAI,I,IAA2BjkC,EAAAM,UAAAC,OAAA,YAAAD,UAAA,GAAYA,UAAA,GAAF,GAClD,MAAO,IACasH,OADT5H,EAAQ+M,OAAO4J,QAAO,eAAiB,QACjDA,QAAO,KAAO,K,oFCFjBnY,EAAA,S,2DCAAA,EAAA,Q,sCCAAA,EAAA,S,sECCAA,EAAA,Q,sCCDAA,EAAA,S,gDCAAA,EAAA,Q,sCCAAA,EAAA,S,gDCEAA,EAAA,Q,sCCFAA,EAAA,S,gDCAAA,EAAA,Q,sCCAAA,EAAA,Q,sCCAAA,EAAA,S,iFCAe,SAAA0lC,EAAqB1/B,GAClC,IAAMxC,EAASC,KAEbpB,EAEEmB,EAFFnB,OACA6G,EACE1F,EADF0F,SAEE7G,EAAOvB,MACT0C,EAAOuM,cAET,IAAM41B,EAAgB,SAAA18B,GACpB,GAAuB,iBAAZA,EAAsB,CAC/B,IAAM28B,EAAU7iC,SAAS4L,cAAc,OACvCi3B,EAAQb,UAAY97B,EACpBC,EAAS0F,OAAOg3B,EAAQvxB,SAAS,IACjCuxB,EAAQb,UAAY,E,MAEpB77B,EAAS0F,OAAO3F,E,EAGpB,GAAsB,iBAAXjD,GAAuB,WAAYA,EAC5C,IAAK,IAAI0F,EAAI,EAAGA,EAAI1F,EAAOjE,OAAQ2J,GAAK,EAClC1F,EAAO0F,IAAIi6B,EAAc3/B,EAAO0F,SAGtCi6B,EAAc3/B,GAEhBxC,EAAOmwB,eACHtxB,EAAOvB,MACT0C,EAAO8L,aAEJjN,EAAO6d,WAAY1c,EAAO4K,WAC7B5K,EAAOlD,Q,oFC/BI,SAAAulC,EAAsB7/B,GACnC,IAAMxC,EAASC,KAEbpB,EAGEmB,EAHFnB,OACAkE,EAEE/C,EAFF+C,YACA2C,EACE1F,EADF0F,SAEE7G,EAAOvB,MACT0C,EAAOuM,cAET,IAAIyb,EAAiBjlB,EAAc,EAC7Bu/B,EAAiB,SAAA78B,GACrB,GAAuB,iBAAZA,EAAsB,CAC/B,IAAM28B,EAAU7iC,SAAS4L,cAAc,OACvCi3B,EAAQb,UAAY97B,EACpBC,EAASwqB,QAAQkS,EAAQvxB,SAAS,IAClCuxB,EAAQb,UAAY,E,MAEpB77B,EAASwqB,QAAQzqB,E,EAGrB,GAAsB,iBAAXjD,GAAuB,WAAYA,EAAQ,CACpD,IAAK,IAAI0F,EAAI,EAAGA,EAAI1F,EAAOjE,OAAQ2J,GAAK,EAClC1F,EAAO0F,IAAIo6B,EAAe9/B,EAAO0F,IAEvC8f,EAAiBjlB,EAAcP,EAAOjE,M,MAEtC+jC,EAAe9/B,GAEjBxC,EAAOmwB,eACHtxB,EAAOvB,MACT0C,EAAO8L,aAEJjN,EAAO6d,WAAY1c,EAAO4K,WAC7B5K,EAAOlD,SAETkD,EAAOuJ,QAAQye,EAAgB,GAAG,E,oFCpCrB,SAAAua,EAAkBv8B,EAAOxD,GACtC,IAAMxC,EAASC,KAEbpB,EAGEmB,EAHFnB,OACAkE,EAEE/C,EAFF+C,YACA2C,EACE1F,EADF0F,SAEE88B,EAAoBz/B,EACpBlE,EAAOvB,OACTklC,GAAqBxiC,EAAOgvB,aAC5BhvB,EAAOuM,cACPvM,EAAOmwB,gBAET,IAAMsS,EAAaziC,EAAOwC,OAAOjE,OACjC,GAAIyH,GAAS,EACXhG,EAAO0iC,aAAalgC,QAGtB,GAAIwD,GAASy8B,EACXziC,EAAO2iC,YAAYngC,OADrB,CAMA,IAFA,IAAIwlB,EAAiBwa,EAAoBx8B,EAAQw8B,EAAoB,EAAIA,EACnEI,EAAe,GACZ16B,EAAIu6B,EAAa,EAAGv6B,GAAKlC,EAAOkC,GAAK,EAAG,CAC/C,IAAM26B,EAAe7iC,EAAOwC,OAAO0F,GACnC26B,EAAa74B,SACb44B,EAAapjB,QAAQqjB,E,CAEvB,GAAsB,iBAAXrgC,GAAuB,WAAYA,EAAQ,CACpD,IAAK,IAAI2F,EAAI,EAAGA,EAAI3F,EAAOjE,OAAQ4J,GAAK,EAClC3F,EAAO2F,IAAIzC,EAAS0F,OAAO5I,EAAO2F,IAExC6f,EAAiBwa,EAAoBx8B,EAAQw8B,EAAoBhgC,EAAOjE,OAASikC,C,MAEjF98B,EAAS0F,OAAO5I,GAElB,IAAK,IAAI4F,EAAI,EAAGA,EAAIw6B,EAAarkC,OAAQ6J,GAAK,EAC5C1C,EAAS0F,OAAOw3B,EAAax6B,IAE/BpI,EAAOmwB,eACHtxB,EAAOvB,MACT0C,EAAO8L,aAEJjN,EAAO6d,WAAY1c,EAAO4K,WAC7B5K,EAAOlD,SAEL+B,EAAOvB,KACT0C,EAAOuJ,QAAQye,EAAiBhoB,EAAOgvB,aAAc,GAAG,GAExDhvB,EAAOuJ,QAAQye,EAAgB,GAAG,E,qFClDvB,SAAA8a,EAAqBC,GAClC,IAAM/iC,EAASC,KAEbpB,EAEEmB,EAFFnB,OAGE2jC,EADAxiC,EADF+C,YAGElE,EAAOvB,OACTklC,GAAqBxiC,EAAOgvB,aAC5BhvB,EAAOuM,eAET,IACIy2B,EADAhb,EAAiBwa,EAErB,GAA6B,iBAAlBO,GAA8B,WAAYA,EAAe,CAClE,IAAK,IAAI76B,EAAI,EAAGA,EAAI66B,EAAcxkC,OAAQ2J,GAAK,EAC7C86B,EAAgBD,EAAc76B,GAC1BlI,EAAOwC,OAAOwgC,IAAgBhjC,EAAOwC,OAAOwgC,GAAeh5B,SAC3Dg5B,EAAgBhb,IAAgBA,GAAkB,GAExDA,EAAiBxkB,KAAKgD,IAAIwhB,EAAgB,E,MAE1Cgb,EAAgBD,EACZ/iC,EAAOwC,OAAOwgC,IAAgBhjC,EAAOwC,OAAOwgC,GAAeh5B,SAC3Dg5B,EAAgBhb,IAAgBA,GAAkB,GACtDA,EAAiBxkB,KAAKgD,IAAIwhB,EAAgB,GAE5ChoB,EAAOmwB,eACHtxB,EAAOvB,MACT0C,EAAO8L,aAEJjN,EAAO6d,WAAY1c,EAAO4K,WAC7B5K,EAAOlD,SAEL+B,EAAOvB,KACT0C,EAAOuJ,QAAQye,EAAiBhoB,EAAOgvB,aAAc,GAAG,GAExDhvB,EAAOuJ,QAAQye,EAAgB,GAAG,E,oFCpCvB,SAAAib,IAGb,IAFA,IACMF,EAAgB,GACb76B,EAAI,EAAGA,EAFDjI,KAEYuC,OAAOjE,OAAQ2J,GAAK,EAC7C66B,EAAchjC,KAAKmI,GAHNjI,KAKRijC,YAAYH,E,oFCNrBvmC,EAAA,S,sECAe,SAAA2mC,EAAoBtkC,GACjC,IAyCIukC,EAxCF9f,EASEzkB,EATFykB,OACAtjB,EAQEnB,EARFmB,OACAyB,EAOE5C,EAPF4C,GACAyH,EAMErK,EANFqK,aACAmc,EAKExmB,EALFwmB,cACAge,EAIExkC,EAJFwkC,gBACAC,EAGEzkC,EAHFykC,YACAC,EAEE1kC,EAFF0kC,gBACAC,EACE3kC,EADF2kC,gBAEF/hC,EAAG,cAAc,WACf,GAAIzB,EAAOnB,OAAOykB,SAAWA,EAA7B,CACAtjB,EAAOuC,WAAWxC,KAAK,GAA0C6F,OAAvC5F,EAAOnB,OAAOuI,wBAAgCxB,OAAP0d,IAC7DggB,GAAeA,KACjBtjC,EAAOuC,WAAWxC,KAAK,GAAwC6F,OAArC5F,EAAOnB,OAAOuI,uBAAuB,OAEjE,IAAMq8B,EAAwBJ,EAAkBA,IAAoB,GACpEtkC,OAAOsD,OAAOrC,EAAOnB,OAAQ4kC,GAC7B1kC,OAAOsD,OAAOrC,EAAOgC,eAAgByhC,EAPA,C,IASvChiC,EAAG,gBAAgB,WACbzB,EAAOnB,OAAOykB,SAAWA,GAC7Bpa,G,IAEFzH,EAAG,iBAAiB,SAACqgC,EAAIjrB,GACnB7W,EAAOnB,OAAOykB,SAAWA,GAC7B+B,EAAcxO,E,IAEhBpV,EAAG,iBAAiB,WAClB,GAAIzB,EAAOnB,OAAOykB,SAAWA,GACzBigB,EAAiB,CACnB,IAAKC,IAAoBA,IAAkBE,aAAc,OAEzD1jC,EAAOwC,OAAO5C,SAAQ,SAAA6F,GACpBA,EAAQ/F,iBAAiB,gHAAgHE,SAAQ,SAAA+K,G,OAAYA,EAASX,Q,OAGxKu5B,G,KAIJ9hC,EAAG,iBAAiB,WACdzB,EAAOnB,OAAOykB,SAAWA,IACxBtjB,EAAOwC,OAAOjE,SACjB6kC,GAAyB,GAE3BtwB,uBAAsB,WAChBswB,GAA0BpjC,EAAOwC,QAAUxC,EAAOwC,OAAOjE,SAC3D2K,IACAk6B,GAAyB,E,yICnDjC,IAAA/jC,EAAA7C,EAAA,SACe,SAAAmnC,EAAsBC,EAAcn+B,GACjD,IAAMo+B,GAAc,EAAAxkC,EAAAykC,qBAAoBr+B,GAKxC,OAJIo+B,IAAgBp+B,IAClBo+B,EAAY15B,MAAM45B,mBAAqB,SACvCF,EAAY15B,MAAM,+BAAiC,UAE9C05B,C,qFCPT,IAAAxkC,EAAA7C,EAAA,SACe,SAAAwnC,EAAoCztB,G,IACjDvW,EADiDuW,EACjDvW,OACA6W,EAFiDN,EAEjDM,SACAotB,EAHiD1tB,EAGjD0tB,kBACAC,EAJiD3tB,EAIjD2tB,UAEMnhC,EAEF/C,EADF+C,YAUF,GAAI/C,EAAOnB,OAAOqrB,kBAAiC,IAAbrT,EAAgB,CACpD,IAAIstB,GAAiB,GAEjBD,EACoBD,EAEAA,EAAkB/9B,QAAO,SAAA29B,GAC7C,IAAMjlC,EAAKilC,EAAY95B,UAAUkb,SAAS,0BAf/B,SAAArmB,GACf,OAAKA,EAAG+a,cAKD/a,EAAG+a,cAHM3Z,EAAOwC,OAAO0D,QAAO,SAAAT,G,OAAWA,EAAQkF,UAAYlF,EAAQkF,WAAa/L,EAAGwlC,U,IAAY,E,CAY9BC,CAASR,GAAeA,EAC9F,OAAO7jC,EAAOiG,cAAcrH,KAAQmE,C,KAGpBnD,SAAQ,SAAAhB,IAC1B,EAAAS,EAAAilC,sBAAqB1lC,GAAI,WACvB,IAAIulC,GACCnkC,IAAUA,EAAOsH,UAAtB,CACA68B,GAAiB,EACjBnkC,EAAOsD,WAAY,EACnB,IAAM4zB,EAAM,IAAI9jB,OAAOf,YAAY,gBAAiB,CAClD8kB,SAAS,EACTb,YAAY,IAEdt2B,EAAOgL,UAAUosB,cAAcF,EAPE,C,8CChCzC16B,EAAA,S,gDCAAA,EAAA,S,+HCAA,IAAA6C,EAAA7C,EAAA,SACe,SAAA+nC,EAAsB1lC,EAAQ4G,EAASiR,GACpD,IAAM8tB,EAAc,sBAA6C5+B,OAAvB8Q,EAAO,IAAS9Q,OAAL8Q,GAAS,IACxD+tB,GAAkB,EAAAplC,EAAAykC,qBAAoBr+B,GACxCkF,EAAW85B,EAAgB/5B,cAAc,IAAgB9E,OAAZ4+B,IAKjD,OAJK75B,IACHA,GAAW,EAAAtL,EAAA8L,eAAc,MAAO,sBAA6CvF,OAAvB8Q,EAAO,IAAS9Q,OAAL8Q,GAAS,KAC1E+tB,EAAgBr5B,OAAOT,IAElBA,C,uCCTTnO,EAAA,S,sECAAA,EAAA,S,iFCAAA,EAAA,S","sources":["node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js"],"sourcesContent":["/**\n * Swiper 9.2.4\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 21, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        const slides = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides : swiper.slides;\n        translated = swiper.slideTo(slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides[swiper.getSlideIndexByData(index)];\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    previousSnapIndex,\n    snapIndex,\n    previousRealIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.slidesPerView === 'auto') {\n    swiper.updateSlides();\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(swiper.autoplay.resizeTimeout);\n    swiper.autoplay.resizeTimeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      const newSlideIndex = swiper.getSlideIndexByData(index);\n      const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);\n      if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: newSlideIndex > currentSlideIndex ? 'next' : 'prev',\n          activeSlideIndex: newSlideIndex,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    let previousIndex;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      previousIndex = swiper.previousRealIndex || 0;\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n      previousIndex = swiper.previousSnapIndex;\n    } else {\n      previousIndex = swiper.previousIndex || 0;\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && previousIndex !== undefined) {\n          dynamicBulletIndex += current - (previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n      getSlideIndex(_s, hash) {\n        if (swiper.virtual && swiper.params.virtual.enabled) {\n          const slideWithHash = swiper.slides.filter(slideEl => slideEl.getAttribute('data-hash') === hash)[0];\n          if (!slideWithHash) return 0;\n          const index = parseInt(slideWithHash.getAttribute('data-swiper-slide-index'), 10);\n          return index;\n        }\n        return swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${hash}\"], swiper-slide[data-hash=\"${hash}\"]`)[0]);\n      }\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') : '';\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.params.hashNavigation.getSlideIndex(swiper, newHash);\n      console.log(newIndex);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    const activeSlideEl = swiper.slidesEl.querySelector(`[data-swiper-slide-index=\"${swiper.activeIndex}\"]`);\n    const activeSlideHash = activeSlideEl ? activeSlideEl.getAttribute('data-hash') || activeSlideEl.getAttribute('data-history') : '';\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${activeSlideHash}` || '');\n      emit('hashSet');\n    } else {\n      document.location.hash = activeSlideHash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      const index = swiper.params.hashNavigation.getSlideIndex(swiper, hash);\n      swiper.slideTo(index || 0, speed, swiper.params.runCallbacksOnInit, true);\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}"],"names":["parcelRequire","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","default","update","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","loop","$aSak5","grabCursor","$61axM","events","$lrPYL","breakpoints","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","length","args","Array","_key","_modules","el","params","constructor","Object","prototype","toString","call","slice","ref","$1EjTE","extend","document","$58sFY","getDocument","querySelectorAll","swipers","forEach","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$parcel$interopDefault","$8nrFW","__modules__","isArray","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","keys","eventName","onAny","assign","enabled","classNames","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","direction","isVertical","activeIndex","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","key","slideEl","slidesEl","elementChildren","concat","slideClass","firstSlideIndex","elementIndex","index","getSlideIndex","filter","getAttribute","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","className","split","indexOf","containerModifierClass","join","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i","i1","i2","slideInView","i3","slideInView1","translated","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","slidesPerView","virtual","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","classList","remove","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","querySelector","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","addEventListener","e","target","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","module","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","defineProperty","exports","value","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","obj","__esModule","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","map","a","replace","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","matches","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","match","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","slideToLoop","$cGTS6","slideNext","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","loopedSlides","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resizeTimeout","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","item","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","url","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$81b40901656d9843$export$2e2bcd8739ae039","bulletSize","pfx","pagination","bulletElement","clickable","hideOnClick","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","dynamicBullets","dynamicMainBullets","formatFractionCurrent","number","formatFractionTotal","bulletClass","bulletActiveClass","modifierClass","currentClass","totalClass","hiddenClass","progressbarFillClass","progressbarOppositeClass","clickableClass","lockClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","dynamicBulletIndex","makeElementsArray","isPaginationDisabled","setSideBullets","bulletEl","position","onBulletClick","$9SBI0","newSlideIndex","currentSlideIndex","total","firstIndex","midIndex","subEl","classesToRemove","suffix","s","flat","bullet","_classList4","bulletIndex","_classList2","bullet1","_classList1","firstDisplayedBullet","lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","offsetProp","subElIndex","fractionEl","textContent","totalEl","progressbarDirection","scale","scaleX","scaleY","progressEl","innerHTML","render","paginationHTML","numberOfBullets","_bullets","$kYZkc","destroy","_s","isHidden","toggle","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer"],"version":3,"file":"reviews.f8ab06cb.js.map"}